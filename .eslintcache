[{"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\index.js":"1","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\App.js":"2","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reportWebVitals.js":"3","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\store.js":"4","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\Login.js":"5","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\Posts.js":"6","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\PostDetail.js":"7","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\Register.js":"8","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Dashboard.js":"9","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\auth.js":"10","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\AddPost.js":"11","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\ImageUpload.js":"12","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\types.js":"13","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Footer.js":"14","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Topbar.js":"15","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Sidebar.js":"16","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\CommentForm.js":"17","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Pages.js":"18","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\post.js":"19","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\CommentItem.js":"20","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\NewPost.js":"21","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\utils\\setAuthToken.js":"22","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\layout\\Spinner.js":"23","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\utils\\formatDate.js":"24","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\index.js":"25","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\PostItem.js":"26","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\auth.js":"27","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\post.js":"28","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\UploadImage.js":"29","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\instance.js":"30","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\routing\\PrivateRoute.js":"31","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\config.js":"32","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\alert.js":"33","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\layout\\Alert.js":"34","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\alert.js":"35","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileHome.js":"36","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\Upload.js":"37","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FilesList.js":"38","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileHeader.js":"39","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileView.js":"40","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\Profile.js":"41","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\ProfilePage.js":"42","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Advertisement.js":"43","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\ForgotPassword.js":"44","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\ProfileSearchView.js":"45","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\NamesContainer.js":"46","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\Name.js":"47","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\file.js":"48","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\file.js":"49","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\ResetPassword.js":"50","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\HomePage.js":"51","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\advertisement\\ImageSlider.js":"52","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\advertisement\\SquareSlider.js":"53","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\TopSidebar.js":"54","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\ShowAdvertise.js":"55","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\UserList.js":"56","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\AddFriend.js":"57","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\FriendList.js":"58","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\AddFriendList.js":"59","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\friends.js":"60","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\friends.js":"61","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\FriendListContainer.js":"62","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\AddFile.js":"63","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\AllFIleViewer.js":"64","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\UserListContainer.js":"65","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FilesListContainer.js":"66","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileViewContainer.js":"67","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\SearchUserList.js":"68","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\SearchUserListContainer.js":"69","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Share\\SharePage.js":"70","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\ShareModal.js":"71","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Share\\SharePageDetail.js":"72","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\PostDeleteModal.js":"73","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\UnfriendModal.js":"74","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Share\\PrivacyPolicy.js":"75","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\FilePostDeleteModal.js":"76"},{"size":564,"mtime":1616294269362,"results":"77","hashOfConfig":"78"},{"size":3607,"mtime":1698059221621,"results":"79","hashOfConfig":"78"},{"size":362,"mtime":499162500000,"results":"80","hashOfConfig":"78"},{"size":449,"mtime":1698432322153,"results":"81","hashOfConfig":"78"},{"size":3628,"mtime":1631338102242,"results":"82","hashOfConfig":"78"},{"size":1218,"mtime":1632322630729,"results":"83","hashOfConfig":"78"},{"size":4506,"mtime":1648285269308,"results":"84","hashOfConfig":"78"},{"size":36461,"mtime":1699277584463,"results":"85","hashOfConfig":"78"},{"size":3584,"mtime":1699277584464,"results":"86","hashOfConfig":"78"},{"size":6612,"mtime":1698432712800,"results":"87","hashOfConfig":"78"},{"size":953,"mtime":1632288559562,"results":"88","hashOfConfig":"78"},{"size":1928,"mtime":1611683479495,"results":"89","hashOfConfig":"90"},{"size":1666,"mtime":1699277584459,"results":"91","hashOfConfig":"78"},{"size":489,"mtime":1616169717444,"results":"92","hashOfConfig":"78"},{"size":15233,"mtime":1644680285524,"results":"93","hashOfConfig":"78"},{"size":7103,"mtime":1636044454338,"results":"94","hashOfConfig":"78"},{"size":1359,"mtime":1616570113559,"results":"95","hashOfConfig":"78"},{"size":3048,"mtime":1648890462060,"results":"96","hashOfConfig":"78"},{"size":8041,"mtime":1699277584458,"results":"97","hashOfConfig":"78"},{"size":4351,"mtime":1630686883586,"results":"98","hashOfConfig":"78"},{"size":7227,"mtime":1699277584467,"results":"99","hashOfConfig":"78"},{"size":461,"mtime":1612108020800,"results":"100","hashOfConfig":"90"},{"size":296,"mtime":1609391760548,"results":"101","hashOfConfig":"78"},{"size":128,"mtime":1611224225690,"results":"102","hashOfConfig":"78"},{"size":275,"mtime":1618767374884,"results":"103","hashOfConfig":"78"},{"size":10956,"mtime":1648890346237,"results":"104","hashOfConfig":"78"},{"size":2265,"mtime":1698432120322,"results":"105","hashOfConfig":"78"},{"size":1889,"mtime":1699277584470,"results":"106","hashOfConfig":"78"},{"size":4866,"mtime":1612296335134,"results":"107","hashOfConfig":"90"},{"size":97,"mtime":1612167076362,"results":"108","hashOfConfig":"78"},{"size":665,"mtime":1613150980353,"results":"109","hashOfConfig":"78"},{"size":248,"mtime":1612115392683,"results":"110","hashOfConfig":"90"},{"size":416,"mtime":1612168001855,"results":"111","hashOfConfig":"78"},{"size":533,"mtime":1612169244118,"results":"112","hashOfConfig":"78"},{"size":352,"mtime":1612167956681,"results":"113","hashOfConfig":"78"},{"size":1392,"mtime":1615353892089,"results":"114","hashOfConfig":"78"},{"size":9162,"mtime":1699277584465,"results":"115","hashOfConfig":"78"},{"size":10517,"mtime":1698896748750,"results":"116","hashOfConfig":"78"},{"size":782,"mtime":1630602903416,"results":"117","hashOfConfig":"78"},{"size":4700,"mtime":1699023691966,"results":"118","hashOfConfig":"78"},{"size":836,"mtime":1698058625792,"results":"119","hashOfConfig":"78"},{"size":33383,"mtime":1699277584469,"results":"120","hashOfConfig":"78"},{"size":11328,"mtime":1629434917614,"results":"121","hashOfConfig":"78"},{"size":2073,"mtime":1615528801975,"results":"122","hashOfConfig":"78"},{"size":3754,"mtime":1614789893333,"results":"123","hashOfConfig":"78"},{"size":309,"mtime":1614406233718,"results":"124","hashOfConfig":"90"},{"size":495,"mtime":1614526862413,"results":"125","hashOfConfig":"90"},{"size":7802,"mtime":1699277584456,"results":"126","hashOfConfig":"78"},{"size":1784,"mtime":1630589809421,"results":"127","hashOfConfig":"78"},{"size":4172,"mtime":1615541770263,"results":"128","hashOfConfig":"78"},{"size":248,"mtime":1630592667578,"results":"129","hashOfConfig":"78"},{"size":1568,"mtime":1629438381224,"results":"130","hashOfConfig":"78"},{"size":1182,"mtime":1629438379037,"results":"131","hashOfConfig":"78"},{"size":22895,"mtime":1644680271725,"results":"132","hashOfConfig":"78"},{"size":4525,"mtime":1632288470598,"results":"133","hashOfConfig":"78"},{"size":3598,"mtime":1632290009480,"results":"134","hashOfConfig":"78"},{"size":785,"mtime":1632288857746,"results":"135","hashOfConfig":"78"},{"size":5246,"mtime":1637632441801,"results":"136","hashOfConfig":"78"},{"size":10387,"mtime":1699277584461,"results":"137","hashOfConfig":"78"},{"size":10305,"mtime":1699277584457,"results":"138","hashOfConfig":"78"},{"size":2023,"mtime":1637627722135,"results":"139","hashOfConfig":"78"},{"size":795,"mtime":1632421551063,"results":"140","hashOfConfig":"78"},{"size":724,"mtime":1632288636075,"results":"141","hashOfConfig":"78"},{"size":399,"mtime":1632243839196,"results":"142","hashOfConfig":"143"},{"size":784,"mtime":1632290006964,"results":"144","hashOfConfig":"78"},{"size":791,"mtime":1632290274991,"results":"145","hashOfConfig":"78"},{"size":805,"mtime":1632322654570,"results":"146","hashOfConfig":"78"},{"size":5119,"mtime":1632502250088,"results":"147","hashOfConfig":"78"},{"size":807,"mtime":1632417816770,"results":"148","hashOfConfig":"78"},{"size":803,"mtime":1643813848929,"results":"149","hashOfConfig":"78"},{"size":2911,"mtime":1637431531023,"results":"150","hashOfConfig":"78"},{"size":2788,"mtime":1645723142729,"results":"151","hashOfConfig":"78"},{"size":1231,"mtime":1645888077003,"results":"152","hashOfConfig":"78"},{"size":2468,"mtime":1637632353694,"results":"153","hashOfConfig":"78"},{"size":7274,"mtime":1643815628897,"results":"154","hashOfConfig":"78"},{"size":1334,"mtime":1645883186047,"results":"155","hashOfConfig":"78"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"1ikv7u6",{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"158"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"183"},"e2euwd",{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"158"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"158"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"183"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"158"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"158"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"36tojz",{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"158"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"158"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"158"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"158"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"158"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"158"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"158"},"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\index.js",[],["326","327"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\App.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reportWebVitals.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\store.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\Login.js",["328","329"],"import React, { Fragment } from 'react';\r\n//import {Alert} from 'reactstrap';\r\n//import axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n//import { bindActionCreators } from 'redux';\r\nimport { Link, Redirect} from 'react-router-dom';\r\n//import { setAlert } from '../../actions/alert';\r\nimport { login } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nimport Alert from '../layout/Alert';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Login = ({auth:{isAuthenticated, token}, login}) => {\r\n    const { register, handleSubmit, errors, getValues } = useForm({\r\n        mode: 'onTouched',\r\n        });\r\n    const { email, password } = '';\r\n    const registerOptions = {\r\n        password: {\r\n            required: \"Password is required\",\r\n            minLength: {\r\n                value: 6,\r\n                message: \"Password must have at least 6 characters\"\r\n            }\r\n        },\r\n        email: {\r\n            required: \"Email is required\",\r\n            pattern: {\r\n                value: /^(([^<>()[\\]\\\\.,;:!*&$#\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,4}))$/,\r\n                message: \"Enter a valid e-mail address\",\r\n              }\r\n        }\r\n    };\r\n    const onSubmit = async () => {\r\n        const { email, password } = getValues();\r\n        // console.log('Email ',email);\r\n        // console.log('pass', password );\r\n        login(email, password);\r\n        //reset();\r\n        //console.log('IsAuthenticated = ', isAuthenticated);\r\n        \r\n    };\r\n    if (isAuthenticated && token !== null) {\r\n        return <Redirect to={{\r\n            pathname: '/dashboard',\r\n            state: {\r\n                showMyPost: false\r\n            }\r\n        }} />;\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className=\"form-wrapper auth\">\r\n\t\t        <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"text-center\">\t\r\n                        <img src={process.env.PUBLIC_URL + '/img/Agriculturist-logo_150x191.png'} alt=\"logo\" />\r\n                        <h2>\r\n                            <span>Login to Agriculturist</span>\r\n                        </h2>\r\n                    </div> \r\n                    {/* <h2>\r\n                        <span>Log in to Agriculturist</span>\r\n                    </h2> */}\r\n                   \r\n                    <input type=\"text\" \r\n                            name=\"email\" \r\n                            placeholder=\"Enter Email\"\r\n                            ref={register(registerOptions.email)}/>\r\n                     {errors.email && <span className=\"text-danger\">{errors.email.message}</span>}\r\n                    <input type=\"password\" \r\n                            name=\"password\" \r\n                            placeholder=\"Enter Password\"\r\n                            ref={register(registerOptions.password)} />\r\n                    {errors.password && <span className=\"text-danger\">{errors.password.message}</span>}\r\n                    <button>Login</button>\r\n                    <span>Not a user? <Link to=\"/register\">Register Here</Link></span>\r\n                    <span><Link to=\"/forgotpassword\">Forgot Password?</Link></span>\r\n                    <Alert />\r\n\t\t        </form>\r\n\t        </div>\r\n        </Fragment>\r\n    )\r\n}\r\nLogin.propTypes = {\r\n    //setAlert: PropTypes.func.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n  \r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\Posts.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\PostDetail.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\Register.js",["330"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Dashboard.js",["331","332"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\auth.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\AddPost.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\ImageUpload.js",["333"],"import React, { Component } from 'react';\r\nimport '../css/login.css';\r\nimport '../css/responsive.css';\r\nexport class ImageUpload extends Component {\r\n    state = {\r\n        image: '../../img/user-profile.png'\r\n    }\r\n    //const [image, setImage] = useState('../../img/profile-picture.png');\r\n    imageHandler = (e) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () =>{\r\n          if(reader.readyState === 2){\r\n            this.setState({image: reader.result})\r\n          }\r\n        }\r\n        reader.readAsDataURL(e.target.files[0])\r\n        \r\n      };\r\n    \r\n    render() {\r\n        const { image } = this.state\r\n        console.log(\"Image = \", image);\r\n    return (\r\n        <div className=\"form-wrapper\">\r\n         <form id=\"registration-form\">\r\n         <div className=\"flex-inline\">\r\n                        <label>Profile Picture:</label>\r\n                        <div id=\"registration-image\">\r\n                            <div id=\"registration-image-container\">\r\n                                <div className=\"full-row\">\r\n                                    <img src={image} alt=\"profile\" />\r\n                                </div>\r\n                                <div className=\"full-row\">\r\n                                    <input type=\"file\" \r\n                                        name=\"profile_picture\" \r\n                                        className=\"customFileInput\"\r\n                                        onChange={this.imageHandler}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"full-row\">\r\n                                    <a href=\"\">Remove Image</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>     \r\n         </form>\r\n            \r\n        </div>\r\n    )\r\n    }\r\n}\r\nexport default ImageUpload;\r\n",["334","335"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\types.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Footer.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Topbar.js",["336"],"import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n//import { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { logout, toggleCssClass } from '../../actions/auth';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from 'autosuggest-highlight/match';\r\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse';\r\nconst IMAGEURL = process.env.REACT_APP_CLOUDINARY;\r\n\r\nconst Topbar = ({props, auth: { user, allUsers }, \r\n  friend: {pendingFriend},\r\n  logout, toggleCssClass }) => {\r\n  const [value, setValue] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [addClass, setAddClass] = useState(true);\r\n  const toggleClass = () => {\r\n    //console.log('Tobbar addclass before set ', addClass);\r\n\r\n    setAddClass(!addClass);\r\n    toggleCssClass(addClass);\r\n    //console.log('Tobbar addclass after set ', addClass);\r\n  };\r\n \r\n  function escapeRegexCharacters(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n  }\r\n  function getSuggestions(value) {\r\n    const escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n    if (escapedValue === '') {\r\n      return [];\r\n    }\r\n\r\n    const regex = new RegExp('\\\\b' + escapedValue, 'i');\r\n\r\n    return allUsers.filter((user) => regex.test(getSuggestionValue(user)));\r\n  }\r\n\r\n  function getSuggestionValue(suggestion) {\r\n    return `${suggestion.firstname} ${suggestion.middlename} ${suggestion.lastname}`;\r\n  }\r\n\r\n  function renderSuggestion(suggestion, { query }) {\r\n    // console.log('Sugestion ', suggestion);\r\n    // console.log('Query ', query);\r\n    const suggestionText = `${suggestion.firstname} ${suggestion.middlename} ${suggestion.lastname}`;\r\n    const matches = AutosuggestHighlightMatch(suggestionText, query);\r\n    const parts = AutosuggestHighlightParse(suggestionText, matches);\r\n    return (\r\n      <span className='suggestion-content'>\r\n        <img\r\n          src={IMAGEURL+suggestion.image}\r\n          alt='user'\r\n          className='user-img-profile rounded-circle'\r\n        />\r\n        <span className='name'>\r\n          <Link\r\n            to={{\r\n              pathname: '/profile',\r\n              state: {\r\n                id: suggestion._id.$oid,\r\n              },\r\n            }}\r\n          >\r\n            {parts.map((part, index) => {\r\n              const className = part.highlight ? 'highlight' : null;\r\n              return (\r\n                <span className={className} key={index}>\r\n                  {part.text}\r\n                </span>\r\n              );\r\n            })}\r\n          </Link>\r\n        </span>\r\n      </span>\r\n    );\r\n  }\r\n  const onChange = (event, { newValue, method }) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(value));\r\n    //console.log('Suggestions list ', suggestions);\r\n  };\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const submitSearchData = async (e) => {\r\n    e.preventDefault();\r\n    // let userArrayData = allUsers.filter(\r\n    //   (user) => user.name.toLowerCase() === value.toLowerCase()\r\n    // );\r\n    // //console.log('User in search = ', userArrayData)\r\n    // let userData = Object.assign({}, userArrayData[0]);\r\n    // //console.log('User in search = ', userData)\r\n    // if (value === '') alert('User input search data is not given');\r\n    // if (userArrayData.length > 0) {\r\n      \r\n    //   props.history.push('/profile',{\r\n    //     id: userData._id.$oid,\r\n    //   });\r\n    //   // return (\r\n    //   //   <Redirect\r\n    //   //     to={{\r\n    //   //       pathname: '/profile',\r\n    //   //       state: {\r\n    //   //         id: userData._id.$oid,\r\n    //   //       },\r\n    //   //     }}\r\n    //   //   />\r\n    //   // );\r\n    // } else \r\n    if (value !== '') {\r\n        props.history.push('/searchuser',{\r\n          value: value,\r\n        });\r\n    }\r\n  };\r\n  \r\n  const inputProps = {\r\n    placeholder: 'Search for...',\r\n    value,\r\n    onChange: onChange,\r\n  };\r\n  \r\n  return (\r\n    <Fragment>\r\n     \r\n        \r\n          <nav\r\n        className='navbar navbar-expand navbar-light \r\n                    bg-white topbar mb-4 static-top shadow'\r\n      >\r\n       {\r\n      user !== null ? (\r\n        <>\r\n        <button\r\n          id='sidebarToggleTop'\r\n          onClick={toggleClass}\r\n          className='btn btn-link d-md-none rounded-circle mr-3'\r\n        >\r\n          <i className='fa fa-bars'></i>\r\n        </button>\r\n\r\n        {/* <div id='dashboard-header-dropdown' className='dropdown'>\r\n          <a\r\n            className='btn dropdown-toggle'\r\n            href='/#'\r\n            role='button'\r\n            id='dropdownMenuLink'\r\n            data-toggle='dropdown'\r\n            aria-haspopup='true'\r\n            aria-expanded='false'\r\n          >\r\n            Applications\r\n          </a>\r\n          <div\r\n            className='dropdown-menu dropdown-menu-left shadow animated--fade-in'\r\n            aria-labelledby='dropdownMenuLink'\r\n          >\r\n            <Link\r\n              className='dropdown-item'\r\n              to={{\r\n                pathname: '/dashboard',\r\n                state: {\r\n                  showMyPost: false,\r\n                },\r\n              }}\r\n            >\r\n              Pages\r\n            </Link>\r\n            <Link\r\n              className='dropdown-item'\r\n              to={{\r\n                pathname: '/dashboard',\r\n                state: {\r\n                  showMyPost: false,\r\n                },\r\n              }}\r\n            >\r\n              Groups\r\n            </Link>\r\n          </div>\r\n        </div> */}\r\n\r\n        <form\r\n          className='d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search'\r\n          onSubmit={submitSearchData}\r\n        >\r\n          <div className='input-group'>\r\n            <Autosuggest\r\n              suggestions={suggestions}\r\n              onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n              onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n              getSuggestionValue={getSuggestionValue}\r\n              renderSuggestion={renderSuggestion}\r\n              inputProps={inputProps}\r\n            />\r\n            <div className='input-group-append'>\r\n              <button className='btn btn-primary' type='submit'>\r\n                <i className='fas fa-search fa-sm'></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        <ul className='navbar-nav ml-auto'>\r\n          <li className='nav-item dropdown no-arrow d-sm-none'>\r\n            <a\r\n              className='nav-link dropdown-toggle'\r\n              href='/#'\r\n              id='searchDropdown'\r\n              role='button'\r\n              data-toggle='dropdown'\r\n              aria-haspopup='true'\r\n              aria-expanded='false'\r\n            >\r\n              <i className='fas fa-search fa-fw'></i>\r\n            </a>\r\n            <div\r\n              className='dropdown-menu dropdown-menu-right p-3 \r\n                                    shadow animated--grow-in'\r\n              aria-labelledby='searchDropdown'\r\n            >\r\n              <form\r\n                className='form-inline mr-auto w-100 navbar-search'\r\n                onSubmit={submitSearchData}\r\n              >\r\n                <div className='input-group'>\r\n                  <Autosuggest\r\n                    suggestions={suggestions}\r\n                    onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n                    onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n                    getSuggestionValue={getSuggestionValue}\r\n                    renderSuggestion={renderSuggestion}\r\n                    inputProps={inputProps}\r\n                  />\r\n                  <div className='input-group-append'>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fas fa-search fa-sm'></i>\r\n                    </button>\r\n                  </div>\r\n                  {/* <input type=\"text\" \r\n                                        className=\"form-control bg-light border-0 small\"\r\n                                        placeholder=\"Search for...\" aria-label=\"Search\"\r\n                                        aria-describedby=\"basic-addon2\" /> */}\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </li>\r\n\r\n          <li className='nav-item dropdown no-arrow mx-1'>\r\n            <a\r\n              className='nav-link dropdown-toggle'\r\n              href='/#'\r\n              id='alertsDropdown'\r\n              role='button'\r\n              data-toggle='dropdown'\r\n              aria-haspopup='true'\r\n              aria-expanded='false'\r\n            >\r\n              <i className='fas fa-bell fa-fw'></i>\r\n              <span className='badge badge-danger badge-counter'>\r\n                {pendingFriend.length > 0 ? pendingFriend.length : null}\r\n              </span>\r\n            </a>\r\n            {pendingFriend.length > 0 ? (\r\n              <div\r\n                className='dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in'\r\n                aria-labelledby='alertsDropdown'\r\n              >\r\n                <h6 className='dropdown-header'>Notification Center</h6>\r\n                {pendingFriend.length > 0\r\n                  ? pendingFriend.map((pendingUser) => (\r\n                      <Link\r\n                        key={pendingUser._id.$oid}\r\n                        className='dropdown-item d-flex align-items-center'\r\n                        to='/friends'\r\n                      >\r\n                        <div className='mr-3'>\r\n                          <div className='icon-circle bg-primary'>\r\n                            <img\r\n                              className='img-profile rounded-circle'\r\n                              src={\r\n                                pendingUser !== null ? IMAGEURL+pendingUser.image : null\r\n                              }\r\n                              alt={pendingUser.name}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <span className='font-weight-bold'>\r\n                            <span\r\n                              style={{\r\n                                fontSize: 15,\r\n                                fontWeight: 'bold',\r\n                                fontFamily: 'cursive',\r\n                                color: 'green'\r\n                              }}\r\n                            >\r\n                              {pendingUser.name}\r\n                            </span>{' '}\r\n                            wants to be your friend.\r\n                          </span>\r\n                        </div>\r\n                      </Link>\r\n                    ))\r\n                  : null}\r\n              </div>\r\n            ) : null}\r\n          </li>\r\n\r\n          {/* <li className='nav-item dropdown no-arrow mx-1'>\r\n            <a\r\n              className='nav-link dropdown-toggle'\r\n              href='/#'\r\n              id='messagesDropdown'\r\n              role='button'\r\n              data-toggle='dropdown'\r\n              aria-haspopup='true'\r\n              aria-expanded='false'\r\n            >\r\n              <i className='fas fa-envelope fa-fw'></i>\r\n              <span className='badge badge-danger badge-counter'></span>\r\n            </a>\r\n          </li> */}\r\n\r\n          <div className='topbar-divider d-none d-sm-block'></div>\r\n\r\n          <li className='nav-item dropdown no-arrow'>\r\n            <a\r\n              href='/#'\r\n              className='nav-link dropdown-toggle'\r\n              id='userDropdown'\r\n              role='button'\r\n              data-toggle='dropdown'\r\n              aria-haspopup='true'\r\n              aria-expanded='false'\r\n            >\r\n              <span className='mr-2 d-none d-lg-inline text-gray-600 small'>\r\n                {user !== null ? user.name : 'UserName'}{' '}\r\n              </span>\r\n              <img\r\n                className='img-profile rounded-circle'\r\n                src={user !== null ? IMAGEURL+user.image : null}\r\n                alt='userName'\r\n              />\r\n            </a>\r\n            <div\r\n              className='dropdown-menu dropdown-menu-right \r\n                                    shadow animated--grow-in'\r\n              aria-labelledby='userDropdown'\r\n            >\r\n              <Link className='dropdown-item' to='/profile'>\r\n                <i className='fas fa-user fa-sm fa-fw mr-2 text-gray-400'></i>\r\n                Profile\r\n              </Link>\r\n              <div className='dropdown-divider'></div>\r\n              <a\r\n                href='/#'\r\n                className='dropdown-item'\r\n                data-toggle='modal'\r\n                data-target='#logoutModal'\r\n              >\r\n                <i className='fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400'></i>\r\n                Logout\r\n              </a>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        </>\r\n        ) : (\r\n          \r\n            <div className=\"not-user\">\r\n              <span>Not a user? <Link to=\"/register\">Register Here</Link></span>\r\n            </div>\r\n          \r\n        )\r\n        \r\n      }\r\n      </nav>\r\n        \r\n\r\n\r\n      {/* {searchUser.length > 0 ? \r\n                        <ListGroup className=\"list-group\">\r\n                            {searchUser.map(user=>(<ListGroupItem key={user.key}><Link to=\"/profile\">{user.name}</Link></ListGroupItem>))}\r\n                        </ListGroup> : null\r\n                    } */}\r\n      <div\r\n        className='modal fade'\r\n        id='logoutModal'\r\n        tabIndex='-1'\r\n        role='dialog'\r\n        aria-labelledby='exampleModalLabel'\r\n        aria-hidden='true'\r\n      >\r\n        <div className='modal-dialog' role='document'>\r\n          <div className='modal-content'>\r\n            <div className='modal-header'>\r\n              <h5 className='modal-title' id='exampleModalLabel'>\r\n                Ready to Leave?\r\n              </h5>\r\n              <button\r\n                className='close'\r\n                type='button'\r\n                data-dismiss='modal'\r\n                aria-label='Close'\r\n              >\r\n                <span aria-hidden='true'>×</span>\r\n              </button>\r\n            </div>\r\n            <div className='modal-body'>\r\n              Select \"Logout\" below if you are ready to end your current\r\n              session.\r\n            </div>\r\n            <div className='modal-footer'>\r\n              <button\r\n                className='btn btn-secondary'\r\n                type='button'\r\n                data-dismiss='modal'\r\n              >\r\n                Cancel\r\n              </button>\r\n              <Link to='/' className='btn btn-primary' onClick={logout}>\r\n                Logout\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     \r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  friend: state.friend\r\n});\r\nexport default connect(mapStateToProps, { logout, toggleCssClass })(Topbar);\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Sidebar.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\CommentForm.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Pages.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\post.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\CommentItem.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\NewPost.js",["337"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\utils\\setAuthToken.js",[],["338","339"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\layout\\Spinner.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\utils\\formatDate.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\index.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\PostItem.js",["340","341","342","343","344","345","346","347"],"import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport formatDate from '../../utils/formatDate';\r\nimport { FacebookShareButton, LinkedinShareButton } from \"react-share\";\r\nimport { FacebookIcon, LinkedinIcon} from \"react-share\";\r\nimport ShareModal from './ShareModal';\r\nimport PostDeleteModal from './PostDeleteModal';\r\nimport FilePostDeleteModal from './FilePostDeleteModal';\r\nimport {Image} from 'cloudinary-react';\r\n\r\nconst IMAGEURL = process.env.REACT_APP_CLOUDINARY;\r\nconst ADMIN = process.env.REACT_APP_ADMIN;\r\n\r\n\r\nconst PostItem = ({index, deletePost,deleteFile, postOwner, post:{_id, title, desc,filename,fileID, date,user}}) => {\r\n    //console.log('Id in postItem', _id);\r\n    const [deleteId, setDeleteId] = useState(null);\r\n    \r\n    const [fileDeleteId, setFileDeleteId] = useState(null);\r\n    const [postBody, setPostBody] = useState({\r\n        id: null,\r\n        desc: \"\",\r\n        title: \"\"\r\n    });\r\n    const url = \"https://agriculturist.org/\";\r\n    const [show, setshow] = useState(false);\r\n    \r\n    const [fileDeletemodalshow, setFileDeletemodalshow] = useState(false); \r\n    const [deletemodalshow, setDeletemodalshow] = useState(false); \r\n    \r\n    //Set ID for delete\r\n    const filePostDeleteId = (id, fID) => {\r\n        //console.log('Dellete id ',id);\r\n        setDeleteId(id);\r\n        setFileDeleteId(fID);\r\n        setFileDeletemodalshow(true);\r\n        //console.log('deletemodalshow', deletemodalshow);\r\n    }\r\n    const postDeleteId = (id) => {\r\n        //console.log('Dellete id ',id);\r\n        setDeleteId(id);\r\n        setDeletemodalshow(true);\r\n        //console.log('deletemodalshow', deletemodalshow);\r\n    }\r\n    const postBodyFunc = (id, desc, title) => {\r\n        setPostBody({\r\n            id: id,\r\n            desc:desc,\r\n            title:title\r\n        });\r\n        setshow(true);\r\n    }\r\n    const handleClose = () => {\r\n   \r\n        setshow(false);\r\n        setDeletemodalshow(false);\r\n        setFileDeletemodalshow(false);\r\n        \r\n      };\r\n    \r\n      const [isReadPostTitleMore, setIsReadPostTitleMore] = useState(true);\r\n      const toggleReadTitleMore = (data) => {\r\n        setIsReadPostTitleMore(data);\r\n      };\r\n      const [isReadDescMore, setIsReadDescMore] = useState(null);\r\n      const toggleReadMore = (data) => {\r\n        setIsReadDescMore(data);\r\n        //console.log('toggle data',data);\r\n      };\r\n    return (\r\n    <>\r\n        <div className=\"card-body\">\r\n            <h5><Link to={`/post/${_id.$oid}`}>\r\n            {\r\n                title.length > 160 ? title.slice(0, 161): title\r\n            }\r\n                </Link>\r\n            {\r\n                title.length > 160 ? <span style={{paddingLeft:3}}>....</span> : null\r\n            }\r\n            </h5>\r\n            <p>\r\n            {isReadDescMore === index ? desc : desc.slice(0, 300)}\r\n            {desc.length > 300 ? (\r\n                <>\r\n                <span style={{padding:5}}>.....</span>\r\n                <Link to={`/post/${_id.$oid}`} className=\"read-more-button\">\r\n                            Read more\r\n                </Link>\r\n                </> \r\n                \r\n            ) : null }\r\n            </p>\r\n            {\r\n                filename !== 'null' ? (\r\n                    <div>\r\n                        <Link to={`/view/${filename}`}>\r\n                            <div className='post-card card file-post'>\r\n                            {\r\n                                ( filename.split('.').pop() === 'pdf' ) ? (\r\n                                    <div className='row'>\r\n                                    <div className='col-lg-2 col-sm-3'>\r\n                                    <img className='file-post-icon' src={process.env.PUBLIC_URL + '/img/pdfIcon.png'} alt=\"PDF FILE\"/>\r\n                                    </div>\r\n                                    <div className='col-lg-10 col-sm-9'>\r\n                                        <p className='file-post-title'>\r\n                                        {\r\n                                            title.length > 60 ? title.slice(0, 67): title\r\n                                        }\r\n                                        {\r\n                                            title.length > 60 ? <span style={{paddingLeft:3}}>....</span> : null\r\n                                        }\r\n                                        </p>\r\n                                    </div>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className='row'>\r\n                                        <Image className=\"image-file-post\" cloudName=\"daf1cgy1c\" publicId={IMAGEURL+filename}/>\r\n                                        {/* <div className='col-lg-2 col-sm-3'>\r\n                                            <img className='file-post-icon' src={process.env.PUBLIC_URL + '/img/postImageIcon.png'} alt=\"IMAGE FILE\"/>\r\n                                        </div>\r\n                                        <div className='col-lg-10 col-sm-9'>\r\n                                            <h6 className='file-post-header'>\r\n                                            IMAGE\r\n                                            </h6>\r\n                                            <p className='file-post-title'>{filename}</p>\r\n                                        </div> */}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                                \r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                ): null\r\n            }\r\n            \r\n            <div>\r\n                <small><i className=\"fa fa-calendar\"></i>\r\n                    Publish Date: {formatDate(date.$date)}\r\n                </small>\r\n                <small><i className=\"fa fa-user\"></i>\r\n                    Author: {user.status}\r\n                </small>\r\n                <small><i className=\"fa fa-comments\"></i>\r\n                    <Link to={`/post/${_id.$oid}`}>\r\n                        comment\r\n                    </Link>\r\n                </small>\r\n                <small><i className=\"fas fa-share\"></i>\r\n                    <Link to=\"/dashboard\" \r\n                          onClick={()=>postBodyFunc(_id.$oid, desc, title)}\r\n                    >\r\n                        share\r\n                    </Link>\r\n                </small>\r\n                {postOwner._id.$oid === user.userId.$oid || postOwner.email === ADMIN ? (\r\n                    <small>\r\n                    {\r\n                        filename === 'null' ? (\r\n                            <>\r\n                            <i className=\"fas fa-pen\"></i>\r\n                            <Link to={{\r\n                                pathname: '/addpost',\r\n                                state: {\r\n                                    id: _id.$oid,\r\n                                    edit: true\r\n                                }\r\n                            }}>\r\n                                edit\r\n                            </Link>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                            <i className=\"fas fa-pen\"></i>\r\n                            <Link to={{\r\n                                        pathname: '/addfile',\r\n                                        state: {\r\n                                                    id: fileID.$oid,\r\n                                                    edit:true\r\n                                                },\r\n                                    }}>\r\n                                edit\r\n                            </Link>\r\n                            </>\r\n                        )\r\n                    }\r\n                    </small>\r\n                ):null }\r\n                { postOwner._id.$oid === user.userId.$oid || postOwner.email === ADMIN ?\r\n                (<small>\r\n                    {\r\n                        filename === 'null' ? (\r\n                            <>\r\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                            <Link to=\"/dashboard\"\r\n                                onClick={()=>postDeleteId(_id.$oid)}>\r\n                                delete\r\n                            </Link>\r\n                            </>\r\n                        ):(\r\n                            <>\r\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                            <Link to=\"/dashboard\"\r\n                                onClick={()=>filePostDeleteId(_id.$oid, fileID.$oid)}>\r\n                                delete\r\n                            </Link>\r\n                            </>\r\n                            \r\n                        )\r\n                    }\r\n                    \r\n                </small> ): null}\r\n            </div>\r\n        </div>\r\n        {/* <div className=\"modal fade\" id=\"postDeleteModal\" tabIndex=\"-1\" \r\n                role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n                aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Delete Post</h5>\r\n                        <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">×</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">Do you really want to delete the Post?</div>\r\n                    <div className=\"modal-footer\">\r\n                    <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\r\n                    <Link to=\"/dashboard\" className=\"btn btn-primary\" \r\n                          onClick={() => deletePost(deleteId)} data-dismiss=\"modal\"\r\n                    >\r\n                        Delete\r\n                    </Link>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n        </div> */}\r\n        <ShareModal\r\n          show={show}\r\n          data={postBody}\r\n          onClick={handleClose}\r\n          onHide={handleClose} />\r\n        \r\n        <PostDeleteModal\r\n          show={deletemodalshow}\r\n          deleteId={deleteId}\r\n          onClick={handleClose}\r\n          onHide={handleClose}\r\n          deletePost = {deletePost}\r\n          />\r\n        <FilePostDeleteModal\r\n          show={fileDeletemodalshow}\r\n          deleteId={deleteId}\r\n          fileDeleteId = {fileDeleteId}\r\n          onClick={handleClose}\r\n          onHide={handleClose}\r\n          deletePost = {deletePost}\r\n          deleteFile = {deleteFile} />\r\n        \r\n                           \r\n    </>\r\n    )\r\n}\r\nexport default PostItem;","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\auth.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\post.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\UploadImage.js",["348","349","350"],"import React, { useState } from 'react';\r\nimport {Alert} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nconst API = process.env.REACT_APP_API;\r\nconst UploadImage = () => {\r\n    const [file, setFile] = useState('');\r\n    //const [filename, setFilename] = useState('');\r\n    const [image, setImage] = useState('../../img/user-profile.png');\r\n    const [fileimg, setFileimg] = useState('');\r\n    const [formData, setFormData] = useState({\r\n        firstname:'',\r\n        middlename:''\r\n    })\r\n    const { firstname, middlename } = formData;\r\n    const onChange = (e) =>\r\n          setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const imageHandler = (e) => {\r\n        \r\n        setFile(e.target.files[0]);\r\n        //setFilename(e.target.files[0].name);\r\n        const reader = new FileReader();\r\n        reader.onload = () =>{\r\n          if(reader.readyState === 2){\r\n            setImage( reader.result)\r\n          }\r\n        }\r\n        const urlFile = reader.readAsDataURL(e.target.files[0])\r\n        console.log('URL = ',reader);\r\n       \r\n      };\r\n      const getFormData = object => Object.keys(object).reduce((formData, key) => {\r\n        formData.append(key, object[key]);\r\n        return formData;\r\n      }, new FormData());\r\n      const onSubmit = async e => {\r\n        e.preventDefault();\r\n        const form_data = getFormData(formData);\r\n\r\n        // for ( var key in formData ) {\r\n        //   form_data.append(key, formData[key]);\r\n        // }\r\n        //form_data.append('data', formData);\r\n        form_data.append('image', image);\r\n        //form_data.append('file', file);\r\n        //form_data.append('filename', filename);\r\n        \r\n        try {\r\n          // const res = await axios.post(`${API}/file_upload`, form_data);\r\n    \r\n          // const { fileName } = res.data;\r\n          \r\n          // //setUploadedFile({ fileName, filePath });\r\n          // <Alert>{res.data.result.message}</Alert>\r\n          //setMessage('File Uploaded');\r\n          const resFile = await axios.get(`${API}/getfile`);\r\n          const dataFile = JSON.parse(resFile.data.data);\r\n          console.log('Get Response File = ', dataFile[0].name );\r\n          setFileimg(dataFile[0].image)\r\n          //setFileimg(res.data)\r\n        } catch (err) {\r\n          if (err) {\r\n            <Alert>There was a problem with the server</Alert>;\r\n          } else {\r\n            <Alert>{err.response.data.msg}</Alert>;\r\n          }\r\n        }\r\n      };\r\n    return (\r\n        <div className=\"form-wrapper\">\r\n            <form id=\"registration-form\" onSubmit={onSubmit}>\r\n                <div className=\"flex-inline items-3 widthDiv\">\t\t\r\n                        <label>Name: *</label>\t\r\n                        <div className=\"flex-inline widthDiv\">\r\n                            <input type=\"text\" \r\n                                    name=\"firstname\" \r\n                                    placeholder=\"Enter First Name\"\r\n                                    value={firstname}\r\n                                    onChange={onChange}  />\r\n                            <input type=\"text\"\r\n                                   name=\"middlename\" \r\n                                   placeholder=\"Enter Middle Name\"\r\n                                   value={middlename}\r\n                                   onChange={onChange} />\r\n                        </div>\r\n                </div>\r\n                <div className=\"flex-inline\">\r\n                       <label>Profile Picture:</label>\r\n                       <div id=\"registration-image\">\r\n                           <div id=\"registration-image-container\">\r\n                               <div className=\"full-row\">\r\n                                   <img src={image} alt=\"profile\" />\r\n                               </div>\r\n                               <div className=\"full-row\">\r\n                                   <input type=\"file\" \r\n                                       name=\"profile_picture\" \r\n                                       className=\"customFileInput\"\r\n                                       onChange={imageHandler}\r\n                                   />\r\n                               </div>\r\n                               <div className=\"full-row\">\r\n                                   <a href=\"\">Remove Image</a>\r\n                               </div>\r\n                               <div className=\"full-row\">\r\n                                   <img src={fileimg} alt=\"profile\" />\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                </div>\r\n                <input\r\n                    type='submit'\r\n                    value='Upload'\r\n                    className='btn btn-primary btn-block mt-4'\r\n                />    \r\n            </form>\r\n           \r\n       </div>\r\n    )\r\n}\r\nexport default UploadImage;","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\instance.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\routing\\PrivateRoute.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\config.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\alert.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\layout\\Alert.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\alert.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileHome.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\Upload.js",["351","352","353","354","355","356","357"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FilesList.js",["358"],"import React, { useState, Fragment, useEffect } from 'react';\r\nimport download from 'downloadjs';\r\nimport axios from 'axios';\r\n// import Sidebar from '../dashboard/Sidebar';\r\n// import Topbar from '../dashboard/Topbar';\r\n// import Footer from '../dashboard/Footer';\r\nimport Spinner from '../layout/Spinner';\r\nimport { Container } from 'reactstrap';\r\nimport FileHeader from './FileHeader';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { deleteFile, getFile } from '../../actions/file';\r\nimport { deletePost } from '../../actions/post';\r\n// import Alert from '../layout/Alert';\r\nimport Advertisement from '../dashboard/Advertisement';\r\nconst API = process.env.REACT_APP_API;\r\nconst ADMIN = process.env.REACT_APP_ADMIN;\r\n\r\nconst FilesList = ({getFile, deleteFile, deletePost, auth, file:{files, loading}}) => {\r\n  //const [filesList, setFilesList] = useState([]);\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const [deleteId, setDeleteId] = useState(null);\r\n  const [postDeleteID, setPostDeleteID] = useState(null);\r\n  const [fileLoading, setFileLoading] = useState(true);\r\n  useEffect(() => {\r\n    console.log('calling filelist useEffect');\r\n    if(auth.user !== null) {\r\n      if(!auth.loading){\r\n        if (fileLoading && auth.user.email !== ADMIN) {\r\n          //console.log('Calling User getFile');\r\n          getFile(auth.user._id.$oid);\r\n          setFileLoading(false)\r\n        }\r\n        else if(fileLoading && auth.user.email === ADMIN){\r\n          //console.log('Calling ADMIN getFile');\r\n          getFile(null);\r\n          setFileLoading(false)\r\n        }\r\n      }\r\n    }\r\n  }, [getFile, auth]);\r\n  //console.log('Loading file',fileLoading);\r\n  // if(auth.user !== null) {\r\n  //   if(!auth.loading){\r\n  //     if (fileLoading && auth.user.email !== ADMIN) {\r\n  //       //console.log('Calling User getFile');\r\n  //       getFile(auth.user._id.$oid);\r\n  //       setFileLoading(false)\r\n  //     }\r\n  //     else if(fileLoading && auth.user.email === ADMIN){\r\n  //       //console.log('Calling ADMIN getFile');\r\n  //       getFile(null);\r\n  //       setFileLoading(false)\r\n  //     }\r\n  //   }\r\n  // }\r\n  const downloadFile = async (filename, mimetype) => {\r\n    try {\r\n      const result = await axios.get(`${API}/file/${filename}`, {\r\n        responseType: 'blob'\r\n      });\r\n      //console.log(\"File Return Data = \", result.data);\r\n      // const split = path.split('/');\r\n      // const filename = split[split.length - 1];\r\n      setErrorMsg('');\r\n      return download(result.data, filename, mimetype);\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        setErrorMsg('Error while downloading file. Try again later');\r\n      }\r\n    }\r\n  };\r\n\r\n  //const text = children;\r\n  const [isReadTitleMore, setIsReadTitleMore] = useState(true);\r\n  const toggleReadTitleMore = (data) => {\r\n    setIsReadTitleMore(data);\r\n  };\r\n  const [isReadMore, setIsReadMore] = useState(null);\r\n  const toggleReadMore = (data) => {\r\n    setIsReadMore(data);\r\n    //console.log('toggle data',data);\r\n  };\r\n  //Set ID for delete\r\n  const fileDeleteId = (id, pID) => {\r\n    //console.log('Dellete id ',id);\r\n    setDeleteId(id);\r\n    setPostDeleteID(pID);\r\n  }\r\n  return (\r\n    <Fragment>\r\n        \r\n      <Container>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-9\">\r\n            <FileHeader />\r\n            <div className=\"files-container\">\r\n              {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n              {\r\n                loading ? <Spinner /> : (\r\n                  <table className=\"files-table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Type</th>\r\n                        <th>Title</th>\r\n                        <th>Description</th>\r\n                        <th>Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {files.length > 0 ? (\r\n                        files.map(\r\n                          ({ _id, title, desc,postID, filename, user, file_mimetype }, index) => (\r\n                            <tr key={index}>\r\n                              <td className=\"file-type\">\r\n                                  {(filename.split('.').pop() === 'pdf')?(\r\n                                    <i className=\"fas fa-file-pdf\"></i>\r\n                                  ):(\r\n                                    <i className=\"fas fa-image\"></i>\r\n                                  )}\r\n                              </td>\r\n                              <td className=\"file-title\">\r\n                              {isReadTitleMore === index ? title : title.slice(0, 20)}\r\n                                {title.length > 20 ? (\r\n                                isReadTitleMore === index ? (\r\n                                    <span onClick={()=>toggleReadTitleMore(index+files.length)} className=\"read-or-hide\">\r\n                                    Read less ▲\r\n                                    </span>\r\n                                  ): (\r\n                                    <span onClick={()=>toggleReadTitleMore(index)} className=\"read-or-hide\">\r\n                                    Read more ▼\r\n                                    </span>\r\n                                  )\r\n                                ) : null }\r\n                              </td>\r\n                              <td className=\"file-description\">\r\n                                {isReadMore === index ? desc : desc.slice(0, 50)}\r\n                                {desc.length > 50 ? (\r\n                                  isReadMore === index ? (\r\n                                    <span onClick={()=>toggleReadMore(index+files.length)} className=\"read-or-hide\">\r\n                                    Read less ▲\r\n                                    </span>\r\n                                  ): (\r\n                                    <span onClick={()=>toggleReadMore(index)} className=\"read-or-hide\">\r\n                                    Read more ▼\r\n                                    </span>\r\n                                  )\r\n                                  \r\n                                ) : null }\r\n                                \r\n                              </td>\r\n                              <td className=\"file-actions\">\r\n                                { auth.user._id.$oid === user.userId.$oid || auth.user.email === ADMIN ?\r\n                                  (<Link to={{\r\n                                        pathname: '/addfile',\r\n                                        state: {\r\n                                                    id: _id.$oid,\r\n                                                    edit:true\r\n                                                },\r\n                                      }}\r\n                                      className=\"action\"\r\n                                  >\r\n                                  <i className=\"fas fa-edit\"></i>\r\n                                  </Link>) : null\r\n                                }\r\n                              \r\n                                <Link to={`/view/${filename}`} className=\"action\">\r\n                                  <i className=\"fas fa-eye\"></i>\r\n                                </Link>\r\n                              \r\n                                <Link to=\"/list\" className=\"action\" onClick={() =>\r\n                                    downloadFile(filename, file_mimetype)\r\n                                  }>\r\n                                  <i className=\"fas fa-file-download\"></i>\r\n                                </Link>\r\n                            \r\n                              { auth.user._id.$oid === user.userId.$oid || auth.user.email === ADMIN ?\r\n                                \r\n                                (<a\r\n                                  href='/#'\r\n                                  className='action'\r\n                                  data-toggle='modal'\r\n                                  data-target='#fileDeleteModal'\r\n                                  onClick={() => fileDeleteId(_id.$oid, postID.$oid)}\r\n                                >\r\n                                  <i className=\"fas fa-trash-alt\"></i>\r\n                                </a>):null\r\n                              }\r\n                              </td>\r\n                            </tr>\r\n                          )\r\n                        )\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan={3} style={{ fontWeight: '300' }}>\r\n                            No files found. Please add some.\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                )\r\n              }\r\n            \r\n            </div>       \r\n          </div>\r\n          <Advertisement />\r\n        </div>\r\n          \r\n      </Container>\r\n        <div className=\"modal fade\" id=\"fileDeleteModal\" tabIndex=\"-1\" \r\n              role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n              aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Delete File</h5>\r\n                    <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                      <span aria-hidden=\"true\">×</span>\r\n                    </button>\r\n                </div>\r\n              <div className=\"modal-body\">Do you want to delete the file?</div>\r\n              <div className=\"modal-footer\">\r\n                <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\r\n                <Link to=\"/list\" className=\"btn btn-primary\" \r\n                      onClick={() => {\r\n                        deleteFile(deleteId);\r\n                        deletePost(postDeleteID);\r\n                      }}\r\n                      data-dismiss=\"modal\"\r\n                >\r\n                  Delete\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  file: state.file\r\n});\r\nexport default connect(mapStateToProps, {getFile, deleteFile, deletePost})(FilesList);","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileHeader.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileView.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\Profile.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\ProfilePage.js",["359","360","361"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Advertisement.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\ForgotPassword.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\ProfileSearchView.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\NamesContainer.js",[],["362","363"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\Name.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\file.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\file.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\ResetPassword.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\HomePage.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\advertisement\\ImageSlider.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\advertisement\\SquareSlider.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\TopSidebar.js",["364","365"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n//import { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { logout } from '../../actions/auth';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from 'autosuggest-highlight/match';\r\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse';\r\nimport Pages from './Pages';\r\nimport Footer from './Footer';\r\nimport Alert from '../layout/Alert';\r\nimport { toggleCssClass } from '../../actions/auth';\r\nconst ADMIN = process.env.REACT_APP_ADMIN;\r\nconst IMAGEURL = process.env.REACT_APP_CLOUDINARY;\r\n\r\nconst TopSidebar = ({ props, auth: { user, allUsers },\r\n  friend: {pendingFriend},\r\n  toggleCssClass, logout }) => {\r\n  const [value, setValue] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [addClass, setAddClass] = useState(false);\r\n  const [stopCondition, setStopCondition] = useState(true);\r\n  // useEffect(() => {\r\n  //     if(window.innerWidth > 767) {\r\n  //         setSideToggle(true);\r\n  //     }\r\n  //     else {\r\n  //         setSideToggle(false);\r\n  //     }\r\n  // }, [])\r\n  //console.log('Togggsdgfd ', addClass);\r\n  const toggleClass = () => {\r\n    //console.log('Tobbar addclass before set ', addClass);\r\n    setAddClass(!addClass);\r\n    //setSideToggle(!sideToggle);\r\n    //toggleCssClass(addClass);\r\n    //console.log('Tobbar addclass after set ', addClass);\r\n  };\r\n  if (window.innerWidth < 767) {\r\n    if (stopCondition) {\r\n      //console.log('Calling window', addClass);\r\n      setAddClass(!addClass);\r\n      setStopCondition(false);\r\n    }\r\n  }\r\n  \r\n  function escapeRegexCharacters(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n  }\r\n  function getSuggestions(value) {\r\n    const escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n    if (escapedValue === '') {\r\n      return [];\r\n    }\r\n\r\n    const regex = new RegExp('\\\\b' + escapedValue, 'i');\r\n\r\n    return allUsers.filter((user) => regex.test(getSuggestionValue(user)));\r\n  }\r\n\r\n  function getSuggestionValue(suggestion) {\r\n    return `${suggestion.firstname} ${suggestion.middlename} ${suggestion.lastname}`;\r\n  }\r\n\r\n  function renderSuggestion(suggestion, { query }) {\r\n    // console.log('Sugestion ', suggestion);\r\n    // console.log('Query ', query);\r\n    const suggestionText = `${suggestion.firstname} ${suggestion.middlename} ${suggestion.lastname}`;\r\n    const matches = AutosuggestHighlightMatch(suggestionText, query);\r\n    const parts = AutosuggestHighlightParse(suggestionText, matches);\r\n    return (\r\n      <span className='suggestion-content'>\r\n        <img\r\n          src={IMAGEURL+suggestion.image}\r\n          alt='user'\r\n          className='user-img-profile rounded-circle'\r\n        />\r\n        <span className='name'>\r\n          <Link\r\n            to={{\r\n              pathname: '/profile',\r\n              state: {\r\n                id: suggestion._id.$oid,\r\n              },\r\n            }}\r\n          >\r\n            {parts.map((part, index) => {\r\n              const className = part.highlight ? 'highlight' : null;\r\n              return (\r\n                <span className={className} key={index}>\r\n                  {part.text}\r\n                </span>\r\n              );\r\n            })}\r\n          </Link>\r\n        </span>\r\n      </span>\r\n    );\r\n  }\r\n  const onChange = (event, { newValue, method }) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(value));\r\n    //console.log('Suggestions list ', suggestions);\r\n  };\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const submitSearchData = async (e) => {\r\n    e.preventDefault();\r\n    // let userArrayData = allUsers.filter(\r\n    //   (user) => user.name.toLowerCase() === value.toLowerCase()\r\n    // );\r\n    // let userData = Object.assign({}, userArrayData[0]);\r\n    // //console.log('User in search = ', userData)\r\n    // if (value === '') alert('User input search data is not given');\r\n    // if (userArrayData.length > 0) {\r\n    //   //console.log('Calling userData');\r\n    //   props.history.push('/profile',{\r\n    //             id: userData._id.$oid,\r\n    //           });\r\n    //   // return (\r\n    //   //   <Redirect\r\n    //   //     to={{\r\n    //   //       pathname: '/profile',\r\n    //   //       state: {\r\n    //   //         id: userData._id.$oid,\r\n    //   //       },\r\n    //   //     }}\r\n    //   //   >\r\n    //   //     {' '}\r\n    //   //     {value}{' '}\r\n    //   //   </Redirect>\r\n    //   // );\r\n    // } else \r\n    if (value !== '') {\r\n      props.history.push('/searchuser',{\r\n        value: value,\r\n      });\r\n      //alert('Searching user is not found');\r\n    }\r\n  };\r\n  const inputProps = {\r\n    placeholder: 'Search for...',\r\n    value,\r\n    onChange: onChange,\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <ul\r\n        className={`navbar-nav bgGradientPrimary sidebar sidebar-dark accordion \r\n                        ${addClass ? 'toggled' : ''}`}\r\n        id='accordionSidebar'\r\n      >\r\n        <Link\r\n          to={{\r\n            pathname: '/dashboard',\r\n            state: {\r\n              showMyPost: false,\r\n            },\r\n          }}\r\n          id='brand-image'\r\n        >\r\n          <img\r\n            src={process.env.PUBLIC_URL + '/img/Agriculturist-logo_150x191.png'}\r\n            alt='Agriculturist Logo'\r\n          />\r\n          {/* <img src=\"../../../public/img/Social_Fish2.png\" alt=\"Agriculturist Logo\"/> */}\r\n          <span>Agriculturist</span>\r\n        </Link>\r\n        <hr className='sidebar-divider my-0' />\r\n        <li className='nav-item active'>\r\n          <Link\r\n            className='nav-link collapsed'\r\n            to={{\r\n              pathname: '/dashboard',\r\n              state: {\r\n                showMyPost: false,\r\n              },\r\n            }}\r\n            // onClick={() => toggleCssClass(true)}\r\n          >\r\n            <i className='fas fa-fw fa-tachometer-alt'></i>\r\n            <span>Dashboard</span>\r\n          </Link>\r\n        </li>\r\n        <li className='nav-item'>\r\n          <a\r\n            className='nav-link collapsed'\r\n            href='/#'\r\n            data-toggle='collapse'\r\n            data-target='#collapsePosts'\r\n            aria-expanded='true'\r\n            aria-controls='collapsePosts'\r\n          >\r\n            <i className='fas fa-user-plus' aria-hidden='true'></i>\r\n            <span>Posts</span>\r\n          </a>\r\n          <div\r\n            id='collapsePosts'\r\n            className='collapse'\r\n            aria-labelledby='headingPages'\r\n            data-parent='#accordionSidebar'\r\n          >\r\n            <div className='bg-white py-2 collapse-inner rounded'>\r\n              <Link\r\n                className='nav-link collapse-item'\r\n                to={{\r\n                  pathname: '/addpost',\r\n                  state: {\r\n                    id: null,\r\n                    edit: false,\r\n                  },\r\n                }}\r\n                // onClick={() => toggleCssClass(true)}\r\n              >\r\n                Add Post\r\n              </Link>\r\n              <Link\r\n                className='collapse-item'\r\n                to={{\r\n                  pathname: '/dashboard',\r\n                  state: {\r\n                    showMyPost: true,\r\n                  },\r\n                }}\r\n                // onClick={() => toggleCssClass(true)}\r\n              >\r\n                Show MyPost\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </li>\r\n\r\n        <li className='nav-item'>\r\n          <a\r\n            className='nav-link collapsed'\r\n            href='/#'\r\n            data-toggle='collapse'\r\n            data-target='#collapseFiles'\r\n            aria-expanded='true'\r\n            aria-controls='collapseFiles'\r\n          >\r\n            <i className='fas fa-fw fa-folder'></i>\r\n            <span>Files</span>\r\n          </a>\r\n          <div\r\n            id='collapseFiles'\r\n            className='collapse'\r\n            aria-labelledby='headingPages'\r\n            data-parent='#accordionSidebar'\r\n          >\r\n            <div className='bg-white py-2 collapse-inner rounded'>\r\n              <Link className='collapse-item' to={{\r\n                                            pathname: '/addfile',\r\n                                            state: {\r\n                                                id: null,\r\n                                                edit: false\r\n                                            }\r\n                                        }}\r\n              >\r\n                Add File\r\n              </Link>\r\n              <Link className='collapse-item' to='/list'>\r\n                Show Files\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </li>\r\n        <li className='nav-item'>\r\n          <a\r\n            className='nav-link collapsed'\r\n            href='/#'\r\n            data-toggle='collapse'\r\n            data-target='#collapseFriends'\r\n            aria-expanded='true'\r\n            aria-controls='collapseFiles'\r\n          >\r\n            <i className='fas fa-user-friends'></i>\r\n            <span>Friends</span>\r\n          </a>\r\n          <div\r\n            id='collapseFriends'\r\n            className='collapse'\r\n            aria-labelledby='headingPages'\r\n            data-parent='#accordionSidebar'\r\n          >\r\n            <div className='bg-white py-2 collapse-inner rounded'>\r\n              <Link className='collapse-item' to='/friends'>\r\n                Add Friends\r\n              </Link>\r\n              <Link className='collapse-item' to='/friendlist'>\r\n                My Friends\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </li>\r\n        {user !== null ? (\r\n          user.email === ADMIN ? (\r\n            <li className='nav-item'>\r\n              <Link to='/userlist' className='nav-link collapsed'>\r\n                <i className='fa fa-user'></i>\r\n                <span>UserList</span>\r\n              </Link>\r\n            </li>\r\n          ) : null\r\n        ) : null}\r\n\r\n        <hr className='sidebar-divider' />\r\n\r\n        <hr className='sidebar-divider d-none d-md-block' />\r\n\r\n        <div className='text-center d-none d-md-inline'>\r\n          <button\r\n            className='rounded-circle border-0'\r\n            id='sidebarToggle'\r\n            onClick={toggleClass}\r\n          ></button>\r\n        </div>\r\n      </ul>\r\n      <div id='content-wrapper' className='d-flex flex-column'>\r\n        <div id='content'>\r\n          <nav\r\n            className='navbar navbar-expand navbar-light \r\n                            bg-white topbar mb-4 static-top shadow'\r\n          >\r\n            <button\r\n              id='sidebarToggleTop'\r\n              onClick={toggleClass}\r\n              className='btn btn-link d-md-none rounded-circle mr-3'\r\n            >\r\n              <i className='fa fa-bars'></i>\r\n            </button>\r\n\r\n            {/* <div id='dashboard-header-dropdown' className='dropdown'>\r\n              <a\r\n                className='btn dropdown-toggle'\r\n                href='/#'\r\n                role='button'\r\n                id='dropdownMenuLink'\r\n                data-toggle='dropdown'\r\n                aria-haspopup='true'\r\n                aria-expanded='false'\r\n              >\r\n                Applications\r\n              </a>\r\n              <div\r\n                className='dropdown-menu dropdown-menu-left shadow animated--fade-in'\r\n                aria-labelledby='dropdownMenuLink'\r\n              >\r\n                <Link\r\n                  className='dropdown-item'\r\n                  to={{\r\n                    pathname: '/dashboard',\r\n                    state: {\r\n                      showMyPost: false,\r\n                    },\r\n                  }}\r\n                >\r\n                  Pages\r\n                </Link>\r\n                <Link\r\n                  className='dropdown-item'\r\n                  to={{\r\n                    pathname: '/dashboard',\r\n                    state: {\r\n                      showMyPost: false,\r\n                    },\r\n                  }}\r\n                >\r\n                  Groups\r\n                </Link>\r\n              </div>\r\n            </div> */}\r\n\r\n            <form\r\n              className='d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search'\r\n              onSubmit={submitSearchData}\r\n            >\r\n              <div className='input-group'>\r\n                <Autosuggest\r\n                  suggestions={suggestions}\r\n                  onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n                  onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n                  getSuggestionValue={getSuggestionValue}\r\n                  renderSuggestion={renderSuggestion}\r\n                  inputProps={inputProps}\r\n                />\r\n                <div className='input-group-append'>\r\n                  <button className='btn btn-primary' type='submit'>\r\n                    <i className='fas fa-search fa-sm'></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <ul className='navbar-nav ml-auto'>\r\n              <li className='nav-item dropdown no-arrow d-sm-none'>\r\n                <a\r\n                  className='nav-link dropdown-toggle'\r\n                  href='/#'\r\n                  id='searchDropdown'\r\n                  role='button'\r\n                  data-toggle='dropdown'\r\n                  aria-haspopup='true'\r\n                  aria-expanded='false'\r\n                >\r\n                  <i className='fas fa-search fa-fw'></i>\r\n                </a>\r\n                <div\r\n                  className='dropdown-menu dropdown-menu-right p-3 \r\n                                            shadow animated--grow-in'\r\n                  aria-labelledby='searchDropdown'\r\n                >\r\n                  <form\r\n                    className='form-inline mr-auto w-100 navbar-search'\r\n                    onSubmit={submitSearchData}\r\n                  >\r\n                    <div className='input-group'>\r\n                      <Autosuggest\r\n                        suggestions={suggestions}\r\n                        onSuggestionsFetchRequested={\r\n                          onSuggestionsFetchRequested\r\n                        }\r\n                        onSuggestionsClearRequested={\r\n                          onSuggestionsClearRequested\r\n                        }\r\n                        getSuggestionValue={getSuggestionValue}\r\n                        renderSuggestion={renderSuggestion}\r\n                        inputProps={inputProps}\r\n                      />\r\n                      <div className='input-group-append'>\r\n                        <button className='btn btn-primary' type='submit'>\r\n                          <i className='fas fa-search fa-sm'></i>\r\n                        </button>\r\n                      </div>\r\n                      {/* <input type=\"text\" \r\n                                                className=\"form-control bg-light border-0 small\"\r\n                                                placeholder=\"Search for...\" aria-label=\"Search\"\r\n                                                aria-describedby=\"basic-addon2\" /> */}\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </li>\r\n\r\n              <li className='nav-item dropdown no-arrow mx-1'>\r\n                <a\r\n                  className='nav-link dropdown-toggle'\r\n                  href='/#'\r\n                  id='alertsDropdown'\r\n                  role='button'\r\n                  data-toggle='dropdown'\r\n                  aria-haspopup='true'\r\n                  aria-expanded='false'\r\n                >\r\n                  <i className='fas fa-bell fa-fw'></i>\r\n                  <span className='badge badge-danger badge-counter'>\r\n                    {pendingFriend.length > 0 ? pendingFriend.length : null}\r\n                  </span>\r\n                </a>\r\n                {pendingFriend.length > 0 ? (\r\n                  <div\r\n                    className='dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in'\r\n                    aria-labelledby='alertsDropdown'\r\n                  >\r\n                    <h6 className='dropdown-header'>Notification Center</h6>\r\n                    {pendingFriend.length > 0\r\n                      ? pendingFriend.map((pendingUser) => (\r\n                          <Link\r\n                            className='dropdown-item d-flex align-items-center'\r\n                            to=\"/friends\"\r\n                            key={pendingUser._id.$oid}\r\n                          >\r\n                            <div className='mr-3'>\r\n                              <div className='icon-circle bg-primary'>\r\n                                <img\r\n                                  className='img-profile rounded-circle'\r\n                                  src={\r\n                                    pendingUser !== null\r\n                                      ? IMAGEURL+pendingUser.image\r\n                                      : null\r\n                                  }\r\n                                  alt={pendingUser.name}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div>\r\n                              <span className='font-weight-bold'>\r\n                              <span\r\n                              style={{\r\n                                fontSize: 15,\r\n                                fontWeight: 'bold',\r\n                                fontFamily: 'cursive',\r\n                                color: 'green'\r\n                              }}\r\n                            >\r\n                              {pendingUser.name}\r\n                            </span>{' '}\r\n                            wants to be your friend.\r\n                              </span>\r\n                            </div>\r\n                          </Link>\r\n                        ))\r\n                      : null}\r\n                  </div>\r\n                ) : null}\r\n              </li>\r\n\r\n              {/* <li className='nav-item dropdown no-arrow mx-1'>\r\n                <a\r\n                  className='nav-link dropdown-toggle'\r\n                  href='/#'\r\n                  id='messagesDropdown'\r\n                  role='button'\r\n                  data-toggle='dropdown'\r\n                  aria-haspopup='true'\r\n                  aria-expanded='false'\r\n                >\r\n                  <i className='fas fa-envelope fa-fw'></i>\r\n                  <span className='badge badge-danger badge-counter'></span>\r\n                </a>\r\n              </li> */}\r\n\r\n              <div className='topbar-divider d-none d-sm-block'></div>\r\n\r\n              <li className='nav-item dropdown no-arrow'>\r\n                <a\r\n                  href='/#'\r\n                  className='nav-link dropdown-toggle'\r\n                  id='userDropdown'\r\n                  role='button'\r\n                  data-toggle='dropdown'\r\n                  aria-haspopup='true'\r\n                  aria-expanded='false'\r\n                >\r\n                  <span className='mr-2 d-none d-lg-inline text-gray-600 small'>\r\n                    {user !== null ? user.name : 'UserName'}{' '}\r\n                  </span>\r\n                  <img\r\n                    className='img-profile rounded-circle'\r\n                    src={user !== null ? IMAGEURL+user.image : null}\r\n                    alt='userName'\r\n                  />\r\n                </a>\r\n                <div\r\n                  className='dropdown-menu dropdown-menu-right \r\n                                            shadow animated--grow-in'\r\n                  aria-labelledby='userDropdown'\r\n                >\r\n                  <Link className='dropdown-item' to='/profile'>\r\n                    <i className='fas fa-user fa-sm fa-fw mr-2 text-gray-400'></i>\r\n                    Profile\r\n                  </Link>\r\n                  <div className='dropdown-divider'></div>\r\n                  <a\r\n                    href='/#'\r\n                    className='dropdown-item'\r\n                    data-toggle='modal'\r\n                    data-target='#logoutModal'\r\n                  >\r\n                    <i className='fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400'></i>\r\n                    Logout\r\n                  </a>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          <Alert />\r\n          <Pages props={props} />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n\r\n      {/* {searchUser.length > 0 ? \r\n                        <ListGroup className=\"list-group\">\r\n                            {searchUser.map(user=>(<ListGroupItem key={user.key}><Link to=\"/profile\">{user.name}</Link></ListGroupItem>))}\r\n                        </ListGroup> : null\r\n                    } */}\r\n      <div\r\n        className='modal fade'\r\n        id='logoutModal'\r\n        tabIndex='-1'\r\n        role='dialog'\r\n        aria-labelledby='exampleModalLabel'\r\n        aria-hidden='true'\r\n      >\r\n        <div className='modal-dialog' role='document'>\r\n          <div className='modal-content'>\r\n            <div className='modal-header'>\r\n              <h5 className='modal-title' id='exampleModalLabel'>\r\n                Ready to Leave?\r\n              </h5>\r\n              <button\r\n                className='close'\r\n                type='button'\r\n                data-dismiss='modal'\r\n                aria-label='Close'\r\n              >\r\n                <span aria-hidden='true'>×</span>\r\n              </button>\r\n            </div>\r\n            <div className='modal-body'>\r\n              Select \"Logout\" below if you are ready to end your current\r\n              session.\r\n            </div>\r\n            <div className='modal-footer'>\r\n              <button\r\n                className='btn btn-secondary'\r\n                type='button'\r\n                data-dismiss='modal'\r\n              >\r\n                Cancel\r\n              </button>\r\n              <Link to='/' className='btn btn-primary' onClick={logout}>\r\n                Logout\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div>\r\n                <Modal isOpen={display} toggle={toggle} className=\"suggestion-container\">\r\n                    <ModalHeader toggle={toggle}>Users List</ModalHeader>\r\n                    <ModalBody>\r\n                        hello\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>  */}\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  friend: state.friend\r\n});\r\nexport default connect(mapStateToProps, { logout, toggleCssClass })(TopSidebar);\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\ShowAdvertise.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\UserList.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\AddFriend.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\FriendList.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\AddFriendList.js",["366","367","368"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\friends.js",["369"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\friends.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\FriendListContainer.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\AddFile.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\AllFIleViewer.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\UserListContainer.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FilesListContainer.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileViewContainer.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\SearchUserList.js",["370","371"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../layout/Spinner';\r\nimport Advertisement from '../dashboard/Advertisement';\r\nimport { getAllUsers } from '../../actions/auth';\r\nconst IMAGEURL = process.env.REACT_APP_CLOUDINARY;\r\n\r\nconst SearchUserList = ({props,getAllUsers, auth:{allUsers, loading} }) => {\r\n    useEffect(() => {\r\n        //console.log('calling useEffect of SearchUserList');\r\n        if(allUsers.length < 1){\r\n            getAllUsers();\r\n        }\r\n        if(props.location.state ) {\r\n            //setDisplayedUser(allUsers);\r\n            var searchQuery = props.location.state.value.toLowerCase();\r\n            var userList = allUsers.filter(function(user) {\r\n                var searchValue = user.name.toLowerCase();\r\n                return searchValue.indexOf(searchQuery) !== -1;\r\n              });\r\n            // console.log('UserList ', userList);\r\n            // console.log('Value ', searchQuery);\r\n            setDisplayedUser(userList);\r\n            //setIsSearchComplete(false);\r\n        }\r\n       \r\n      }, [getAllUsers, props.location.state, allUsers]);\r\n    const [displayedUser, setDisplayedUser] = useState([]);\r\n    \r\n    return (\r\n        <Fragment>\r\n            <div className='container-fluid'>\r\n                <div className='row'>\r\n                    <div className='col-sm-12 col-md-6 col-lg-9'>\r\n                        <div className='card shadow mb-4'>\r\n                            <div className='card-header py-3'>\r\n                                <h6 className='m-0 font-weight-bold text-primary'>Searched User</h6>\r\n                            </div>\r\n                            {displayedUser.length > 0 ? (\r\n                            displayedUser.map((userFr) => (\r\n                            <Fragment key={userFr._id.$oid}>\r\n                                <div\r\n                                    id='posts-list'\r\n                                    className='card-body friendCard'\r\n                                >\r\n                                    <div className='post-card card'>\r\n                                        <div className='row'>\r\n                                            <div className='col-sm-12 col-md-4 col-lg-4'>\r\n                                                <img\r\n                                                src={IMAGEURL+userFr.image}\r\n                                                alt='User'\r\n                                                className='friendImageProfile'\r\n                                                />\r\n                                            </div>\r\n                                            <div className='col-sm-12 col-md-8 col-lg-8'>\r\n                                                <Link\r\n                                                    to={{\r\n                                                        pathname: '/profile',\r\n                                                        state: {\r\n                                                        id: userFr._id.$oid,\r\n                                                        },\r\n                                                    }}\r\n                                                    \r\n                                                >\r\n                                                    <h4 style={{\r\n                                                        paddingTop: 15,\r\n                                                        paddingBottom: 0,\r\n                                                    }}>{userFr.name}</h4>\r\n                                                </Link>\r\n                                                <h6 style={{\r\n                                                    paddingLeft: 8,\r\n                                                }}>\r\n                                                   User Type {': '} {userFr.user_category}\r\n                                                </h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                            ))\r\n                         ) : (\r\n                            <p\r\n                            style={{\r\n                                paddingLeft: 20,\r\n                                paddingTop: 10,\r\n                                fontWeight: 'bold',\r\n                            }}\r\n                            >\r\n                            No user is matched. Search again with exact keyword....\r\n                            </p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <Advertisement />\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n  });\r\nexport default connect(mapStateToProps, { getAllUsers})(\r\n    SearchUserList\r\n  );\r\n\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\SearchUserListContainer.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Share\\SharePage.js",["372"],"\r\nimport { Button } from 'react-bootstrap';\r\nimport React, { Fragment } from 'react';\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Footer from '../dashboard/Footer';\r\nimport Topbar from '../dashboard/Topbar';\r\nimport SharePageDetail from './SharePageDetail'; \r\nconst SharePage = (props) => {\r\n    return (\r\n      <Fragment>\r\n            <div id=\"wrapper\">\r\n                <Sidebar />\r\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                    <div id=\"content\">\r\n                        <Topbar props={props}/>\r\n                        <SharePageDetail match={props.match}/>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default SharePage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\ShareModal.js",["373","374"],"// import React, { useState } from 'react';\r\n// import { Modal, Button } from 'react-bootstrap';\r\n\r\n// const ShareModal = () => {\r\n//     const [show, setShow] = useState(false);\r\n\r\n//   const handleClose = () => setShow(false);\r\n//   const handleShow = () => setShow(true);\r\n//     return (\r\n//         <div>\r\n//             <Button variant=\"primary\" onClick={handleShow}>\r\n//         Launch Bootstrap Modal\r\n//       </Button>\r\n\r\n//       <Modal show={show} onHide={handleClose}>\r\n\r\n//         <Modal.Header closeButton>\r\n//           <Modal.Title>Heading Text</Modal.Title>\r\n//         </Modal.Header>\r\n\r\n//         <Modal.Body>Modal content will sit here</Modal.Body>\r\n\r\n//         <Modal.Footer>\r\n\r\n//           <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n//           <Button variant=\"primary\" onClick={handleClose}>Submit</Button>\r\n\r\n//         </Modal.Footer>\r\n\r\n//       </Modal>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default ShareModal\r\n\r\n// src/components/bootstrap-carousel.component.js\r\nimport React, { Component } from \"react\";\r\n\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport { FacebookShareButton, LinkedinShareButton } from \"react-share\";\r\nimport { FacebookIcon, LinkedinIcon} from \"react-share\";\r\n\r\nconst ShareModal = (props) => {\r\n    //console.log(props.data);\r\n    const {id, title, body} = props.data;\r\n    const url = \"https://agriculturist.org/sharepost/\"+`${id}`;\r\n        return (\r\n            <div>\r\n                <Modal show={props.show} onHide={() => props.onHide()}>\r\n\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>\r\n                            Share Post\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <p>Select where to share the post.</p>\r\n\r\n                        <FacebookShareButton\r\n                            url={url}\r\n                           \r\n                            style={{marginRight: 10}}\r\n                        >\r\n                            <FacebookIcon size={32} round /> Facebook\r\n                        </FacebookShareButton>\r\n                        <LinkedinShareButton \r\n                            url={url}\r\n                            title={title} \r\n                            summary={body}\r\n                            >\r\n                            <LinkedinIcon  size={32} round={true}/> LinkedIn\r\n                        </LinkedinShareButton>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => props.onClick()} >Close</Button>\r\n                        {/* <Button variant=\"primary\" onClick={() => props.onClick()}  >Submit</Button> */}\r\n                    </Modal.Footer>\r\n\r\n                </Modal>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ShareModal;\r\n\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Share\\SharePageDetail.js",["375"],"import React, { Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getSharePost } from '../../actions/post';\r\nimport formatDate from '../../utils/formatDate';\r\nimport PropTypes from 'prop-types';\r\nimport Advertisement from '../dashboard/Advertisement';\r\n// import CommentForm from './CommentForm';\r\n// import CommentItem from './CommentItem'; \r\nimport Spinner from '../layout/Spinner';\r\nimport Alert from '../layout/Alert';\r\nconst SharePageDetail = ({getSharePost, post:{sharepost, loading}, match}) => {\r\n    useEffect(() => {\r\n        getSharePost(match.params.id);\r\n    }, [getSharePost, match.params.id]);\r\n    console.log(\"sharepostDetail = \", sharepost);\r\n    //console.log(\"postDetail postId = \",post._id.$oid);\r\n    return loading || sharepost === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-8 col-lg-9\">\r\n                        <div className=\"card-body shadow mb-4\">\r\n                            <h3>{sharepost.title}</h3>\r\n                            <div className=\"post-info\">\r\n                                <small><i className=\"fa fa-calendar\"></i>Publish Date: {formatDate(sharepost.date.$date)}</small>\r\n                                <small><i className=\"fa fa-user\"></i>Author: {sharepost.user.status}</small>\r\n                            </div>\r\n                            <div id=\"post-details\">\r\n                                <p>\r\n                                {sharepost.desc}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"card-body shadow mb-4\">\r\n                            <h3>Comments</h3>\r\n                            <CommentForm postId={post._id.$oid}/>\r\n                            <Alert />\r\n                            <div id=\"comments\">\r\n                                {sharepost.comments !== null ? (sharepost.comments.map((comment) => (\r\n                                    <CommentItem key={comment._id.$oid} user={user} comment={comment} postId={sharepost._id.$oid} />\r\n                                ))): null }\r\n                            \r\n                            </div>\r\n                        </div> */}\r\n                    </div>\r\n                    <Advertisement />\r\n                </div>\r\n            </div>\r\n           \r\n        </Fragment>\r\n    )\r\n}\r\nSharePageDetail.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n  };\r\n  \r\nconst mapStateToProps = (state) => ({\r\n    post : state.post\r\n});\r\nexport default connect(mapStateToProps, { getSharePost })(SharePageDetail);\r\n\r\n\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\PostDeleteModal.js",["376"],"import React, { Component } from \"react\";\r\n\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\n\r\nconst PostDeleteModal = (props) => {\r\n    //console.log(props.deleteId);\r\n        return (\r\n            <div>\r\n                <Modal show={props.show} onHide={() => props.onHide()}>\r\n\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>\r\n                            Delete Post\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                    Do you really want to delete the Post?\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => props.onClick()} >Close</Button>\r\n                        <Button variant=\"primary\" onClick={() => {\r\n                                                        props.onClick();\r\n                                                        props.deletePost(props.deleteId);\r\n                                                    }}  \r\n                        >Delete</Button>\r\n                    </Modal.Footer>\r\n\r\n                </Modal>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default PostDeleteModal;\r\n\r\n\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\UnfriendModal.js",["377"],"import React, { Component } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nconst UnfriendModal = (props) => {\r\n   \r\n  return (\r\n    <div>\r\n     \r\n                        \r\n                          {/* <div className='modal-body'>\r\n                            Select \"Remove\" below if you want to remove{' '}\r\n                            {userFr !== null ? (\r\n                              <span\r\n                                style={{\r\n                                  fontSize: 20,\r\n                                  fontWeight: 'bold',\r\n                                  fontFamily: 'cursive',\r\n                                }}\r\n                              >\r\n                                {userFr.name}\r\n                              </span>\r\n                            ) : null}{' '}\r\n                            from your friend list.\r\n                          </div>\r\n                          <div className='modal-footer'>\r\n                            <button\r\n                              className='btn btn-secondary'\r\n                              type='button'\r\n                              data-dismiss='modal'\r\n                            >\r\n                              Cancel\r\n                            </button>\r\n                            <Link\r\n                              to='/friendlist'\r\n                              className='btn btn-primary'\r\n                              onClick={() => unFriend(userFr._id.$oid)}\r\n                            >\r\n                              Remove\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                      </div> */}\r\n      <Modal show={props.show} onHide={() => props.onHide()}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Unfriend user</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>Select \"Remove\" below if you want to remove the user\r\n                            from your friend list.</Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={() => props.onClick()}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant='primary'\r\n            onClick={() => {\r\n              props.onClick();\r\n              props.unFriend(props.deleteId)\r\n            }}\r\n          >\r\n            Remove\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnfriendModal;\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Share\\PrivacyPolicy.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\FilePostDeleteModal.js",["378"],"import React, { Component } from \"react\";\r\n\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\n\r\nconst FilePostDeleteModal = (props) => {\r\n    //console.log(props.deleteId);\r\n        return (\r\n            <div>\r\n                <Modal show={props.show} onHide={() => props.onHide()}>\r\n\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>\r\n                            Delete Post\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                    Do you really want to delete the Post?\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => props.onClick()} >Close</Button>\r\n                        <Button variant=\"primary\" onClick={() => {\r\n                                                        props.onClick();\r\n                                                        props.deletePost(props.deleteId);\r\n                                                        props.deleteFile(props.fileDeleteId);\r\n                                                    }}  \r\n                        >Delete</Button>\r\n                    </Modal.Footer>\r\n\r\n                </Modal>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default FilePostDeleteModal;\r\n\r\n\r\n",{"ruleId":"379","replacedBy":"380"},{"ruleId":"381","replacedBy":"382"},{"ruleId":"383","severity":1,"message":"384","line":17,"column":13,"nodeType":"385","messageId":"386","endLine":17,"endColumn":18},{"ruleId":"383","severity":1,"message":"387","line":17,"column":20,"nodeType":"385","messageId":"386","endLine":17,"endColumn":28},{"ruleId":"383","severity":1,"message":"388","line":106,"column":27,"nodeType":"385","messageId":"386","endLine":106,"endColumn":41},{"ruleId":"383","severity":1,"message":"389","line":8,"column":3,"nodeType":"385","messageId":"386","endLine":8,"endColumn":22},{"ruleId":"390","severity":1,"message":"391","line":48,"column":6,"nodeType":"392","endLine":48,"endColumn":69,"suggestions":"393"},{"ruleId":"394","severity":1,"message":"395","line":41,"column":37,"nodeType":"396","endLine":41,"endColumn":48},{"ruleId":"379","replacedBy":"397"},{"ruleId":"381","replacedBy":"398"},{"ruleId":"383","severity":1,"message":"399","line":4,"column":16,"nodeType":"385","messageId":"386","endLine":4,"endColumn":24},{"ruleId":"390","severity":1,"message":"400","line":38,"column":9,"nodeType":"392","endLine":38,"endColumn":39,"suggestions":"401"},{"ruleId":"379","replacedBy":"402"},{"ruleId":"381","replacedBy":"403"},{"ruleId":"383","severity":1,"message":"404","line":4,"column":10,"nodeType":"385","messageId":"386","endLine":4,"endColumn":29},{"ruleId":"383","severity":1,"message":"405","line":4,"column":31,"nodeType":"385","messageId":"386","endLine":4,"endColumn":50},{"ruleId":"383","severity":1,"message":"406","line":5,"column":10,"nodeType":"385","messageId":"386","endLine":5,"endColumn":22},{"ruleId":"383","severity":1,"message":"407","line":5,"column":24,"nodeType":"385","messageId":"386","endLine":5,"endColumn":36},{"ruleId":"383","severity":1,"message":"408","line":25,"column":11,"nodeType":"385","messageId":"386","endLine":25,"endColumn":14},{"ruleId":"383","severity":1,"message":"409","line":61,"column":14,"nodeType":"385","messageId":"386","endLine":61,"endColumn":33},{"ruleId":"383","severity":1,"message":"410","line":62,"column":13,"nodeType":"385","messageId":"386","endLine":62,"endColumn":32},{"ruleId":"383","severity":1,"message":"411","line":66,"column":13,"nodeType":"385","messageId":"386","endLine":66,"endColumn":27},{"ruleId":"383","severity":1,"message":"412","line":7,"column":12,"nodeType":"385","messageId":"386","endLine":7,"endColumn":16},{"ruleId":"383","severity":1,"message":"413","line":28,"column":15,"nodeType":"385","messageId":"386","endLine":28,"endColumn":22},{"ruleId":"394","severity":1,"message":"395","line":102,"column":36,"nodeType":"396","endLine":102,"endColumn":47},{"ruleId":"383","severity":1,"message":"414","line":3,"column":8,"nodeType":"385","messageId":"386","endLine":3,"endColumn":15},{"ruleId":"383","severity":1,"message":"415","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":14},{"ruleId":"383","severity":1,"message":"416","line":5,"column":8,"nodeType":"385","messageId":"386","endLine":5,"endColumn":14},{"ruleId":"383","severity":1,"message":"417","line":13,"column":8,"nodeType":"385","messageId":"386","endLine":13,"endColumn":13},{"ruleId":"383","severity":1,"message":"418","line":14,"column":10,"nodeType":"385","messageId":"386","endLine":14,"endColumn":23},{"ruleId":"383","severity":1,"message":"419","line":24,"column":10,"nodeType":"385","messageId":"386","endLine":24,"endColumn":20},{"ruleId":"390","severity":1,"message":"420","line":53,"column":24,"nodeType":"421","endLine":53,"endColumn":64},{"ruleId":"390","severity":1,"message":"422","line":41,"column":6,"nodeType":"392","endLine":41,"endColumn":21,"suggestions":"423"},{"ruleId":"390","severity":1,"message":"424","line":85,"column":6,"nodeType":"392","endLine":85,"endColumn":44,"suggestions":"425"},{"ruleId":"383","severity":1,"message":"426","line":129,"column":5,"nodeType":"385","messageId":"386","endLine":129,"endColumn":12},{"ruleId":"383","severity":1,"message":"388","line":164,"column":17,"nodeType":"385","messageId":"386","endLine":164,"endColumn":31},{"ruleId":"379","replacedBy":"427"},{"ruleId":"381","replacedBy":"428"},{"ruleId":"383","severity":1,"message":"429","line":1,"column":37,"nodeType":"385","messageId":"386","endLine":1,"endColumn":46},{"ruleId":"383","severity":1,"message":"399","line":4,"column":16,"nodeType":"385","messageId":"386","endLine":4,"endColumn":24},{"ruleId":"383","severity":1,"message":"430","line":2,"column":19,"nodeType":"385","messageId":"386","endLine":2,"endColumn":30},{"ruleId":"383","severity":1,"message":"431","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":13},{"ruleId":"390","severity":1,"message":"432","line":46,"column":6,"nodeType":"392","endLine":46,"endColumn":62,"suggestions":"433"},{"ruleId":"383","severity":1,"message":"434","line":10,"column":8,"nodeType":"385","messageId":"386","endLine":10,"endColumn":13},{"ruleId":"383","severity":1,"message":"435","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":17},{"ruleId":"383","severity":1,"message":"436","line":5,"column":8,"nodeType":"385","messageId":"386","endLine":5,"endColumn":15},{"ruleId":"383","severity":1,"message":"437","line":2,"column":10,"nodeType":"385","messageId":"386","endLine":2,"endColumn":16},{"ruleId":"383","severity":1,"message":"438","line":38,"column":17,"nodeType":"385","messageId":"386","endLine":38,"endColumn":26},{"ruleId":"439","severity":1,"message":"440","line":47,"column":55,"nodeType":"441","messageId":"442","endLine":47,"endColumn":56},{"ruleId":"383","severity":1,"message":"417","line":10,"column":8,"nodeType":"385","messageId":"386","endLine":10,"endColumn":13},{"ruleId":"383","severity":1,"message":"438","line":1,"column":17,"nodeType":"385","messageId":"386","endLine":1,"endColumn":26},{"ruleId":"383","severity":1,"message":"438","line":1,"column":17,"nodeType":"385","messageId":"386","endLine":1,"endColumn":26},{"ruleId":"383","severity":1,"message":"438","line":1,"column":17,"nodeType":"385","messageId":"386","endLine":1,"endColumn":26},"no-native-reassign",["443"],"no-negated-in-lhs",["444"],"no-unused-vars","'email' is assigned a value but never used.","Identifier","unusedVar","'password' is assigned a value but never used.","'compressedFile' is assigned a value but never used.","'getFriendSuggestion' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fileLoading', 'loading', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["445"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["443"],["444"],"'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'edit' and 'id'. Either include them or remove the dependency array.",["446"],["443"],["444"],"'FacebookShareButton' is defined but never used.","'LinkedinShareButton' is defined but never used.","'FacebookIcon' is defined but never used.","'LinkedinIcon' is defined but never used.","'url' is assigned a value but never used.","'isReadPostTitleMore' is assigned a value but never used.","'toggleReadTitleMore' is assigned a value but never used.","'toggleReadMore' is assigned a value but never used.","'file' is assigned a value but never used.","'urlFile' is assigned a value but never used.","'Sidebar' is defined but never used.","'Topbar' is defined but never used.","'Footer' is defined but never used.","'Alert' is defined but never used.","'updateProfile' is defined but never used.","'previewSrc' is assigned a value but never used.","Assignments to the 'filteredFile' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'fileLoading'. Either include it or remove the dependency array.",["447"],"React Hook useEffect has a missing dependency: 'isSendRequest'. Either include it or remove the dependency array. You can also do a functional update 'setIsSendRequest(i => ...)' if you only need 'isSendRequest' in the 'setIsSendRequest' call.",["448"],"'country' is assigned a value but never used.",["443"],["444"],"'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'store' is defined but never used.","React Hook useEffect has a missing dependency: 'getFriendSuggestion'. Either include it or remove the dependency array. If 'getFriendSuggestion' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["449"],"'axios' is defined but never used.","'PropTypes' is defined but never used.","'Spinner' is defined but never used.","'Button' is defined but never used.","'Component' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},"Update the dependencies array to be: [loadUser, getAllUsers, getPendingFrUser, getUserMyFr, getFile, user, loading, fileLoading]",{"range":"460","text":"461"},"Update the dependencies array to be: [edit, id, loading, posts, propsFromLink]",{"range":"462","text":"463"},"Update the dependencies array to be: [getFile, auth, fileLoading]",{"range":"464","text":"465"},"Update the dependencies array to be: [loading, user, loadUser, getAllUsers, isSendRequest]",{"range":"466","text":"467"},"Update the dependencies array to be: [getAllUsers, loadUser, isSendRequest, getPendingFrUser, getFriendSuggestion]",{"range":"468","text":"469"},[1376,1439],"[loadUser, getAllUsers, getPendingFrUser, getUserMyFr, getFile, user, loading, fileLoading]",[1365,1395],"[edit, id, loading, posts, propsFromLink]",[1641,1656],"[getFile, auth, fileLoading]",[2610,2648],"[loading, user, loadUser, getAllUsers, isSendRequest]",[1440,1496],"[getAllUsers, loadUser, isSendRequest, getPendingFrUser, getFriendSuggestion]"]