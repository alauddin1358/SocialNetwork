[{"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\index.js":"1","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\App.js":"2","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reportWebVitals.js":"3","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\store.js":"4","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\Login.js":"5","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\Posts.js":"6","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\PostDetail.js":"7","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\Register.js":"8","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Dashboard.js":"9","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\auth.js":"10","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\AddPost.js":"11","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\ImageUpload.js":"12","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\types.js":"13","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Footer.js":"14","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Topbar.js":"15","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Sidebar.js":"16","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\CommentForm.js":"17","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Pages.js":"18","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\post.js":"19","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\CommentItem.js":"20","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\NewPost.js":"21","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\utils\\setAuthToken.js":"22","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\layout\\Spinner.js":"23","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\utils\\formatDate.js":"24","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\index.js":"25","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\PostItem.js":"26","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\auth.js":"27","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\post.js":"28","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\UploadImage.js":"29","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\instance.js":"30","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\routing\\PrivateRoute.js":"31","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\config.js":"32","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\alert.js":"33","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\layout\\Alert.js":"34","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\alert.js":"35","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileHome.js":"36","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\Upload.js":"37","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FilesList.js":"38","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileHeader.js":"39","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileView.js":"40","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\Profile.js":"41","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\ProfilePage.js":"42","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Advertisement.js":"43","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\ForgotPassword.js":"44","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\ProfileSearchView.js":"45","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\NamesContainer.js":"46","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\Name.js":"47","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\file.js":"48","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\file.js":"49","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\ResetPassword.js":"50","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\HomePage.js":"51","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\advertisement\\ImageSlider.js":"52","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\advertisement\\SquareSlider.js":"53","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\TopSidebar.js":"54","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\ShowAdvertise.js":"55","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\UserList.js":"56","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\AddFriend.js":"57","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\FriendList.js":"58","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\AddFriendList.js":"59","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\friends.js":"60","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\friends.js":"61","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\FriendListContainer.js":"62"},{"size":564,"mtime":1616294269362,"results":"63","hashOfConfig":"64"},{"size":3017,"mtime":1619598388939,"results":"65","hashOfConfig":"64"},{"size":362,"mtime":499162500000,"results":"66","hashOfConfig":"64"},{"size":449,"mtime":1610639265330,"results":"67","hashOfConfig":"64"},{"size":3633,"mtime":1627014709710,"results":"68","hashOfConfig":"64"},{"size":1203,"mtime":1616779873156,"results":"69","hashOfConfig":"64"},{"size":2768,"mtime":1616779891258,"results":"70","hashOfConfig":"64"},{"size":38026,"mtime":1629567629781,"results":"71","hashOfConfig":"64"},{"size":2989,"mtime":1616815259663,"results":"72","hashOfConfig":"64"},{"size":6587,"mtime":1629548615959,"results":"73","hashOfConfig":"64"},{"size":995,"mtime":1613411078721,"results":"74","hashOfConfig":"64"},{"size":1928,"mtime":1611683479495,"results":"75","hashOfConfig":"76"},{"size":1458,"mtime":1618763019886,"results":"77","hashOfConfig":"64"},{"size":489,"mtime":1616169717444,"results":"78","hashOfConfig":"64"},{"size":15386,"mtime":1629611812857,"results":"79","hashOfConfig":"64"},{"size":6135,"mtime":1629649454103,"results":"80","hashOfConfig":"64"},{"size":1359,"mtime":1616570113559,"results":"81","hashOfConfig":"64"},{"size":2688,"mtime":1616815257986,"results":"82","hashOfConfig":"64"},{"size":7143,"mtime":1629551102433,"results":"83","hashOfConfig":"64"},{"size":4109,"mtime":1629431225543,"results":"84","hashOfConfig":"64"},{"size":5472,"mtime":1616691803315,"results":"85","hashOfConfig":"64"},{"size":461,"mtime":1612108020800,"results":"86","hashOfConfig":"76"},{"size":296,"mtime":1609391760548,"results":"87","hashOfConfig":"64"},{"size":128,"mtime":1611224225690,"results":"88","hashOfConfig":"64"},{"size":275,"mtime":1618767374884,"results":"89","hashOfConfig":"64"},{"size":1915,"mtime":1616815257982,"results":"90","hashOfConfig":"64"},{"size":2264,"mtime":1617020061056,"results":"91","hashOfConfig":"64"},{"size":1704,"mtime":1613499844273,"results":"92","hashOfConfig":"64"},{"size":4866,"mtime":1612296335134,"results":"93","hashOfConfig":"76"},{"size":97,"mtime":1612167076362,"results":"94","hashOfConfig":"64"},{"size":665,"mtime":1613150980353,"results":"95","hashOfConfig":"64"},{"size":248,"mtime":1612115392683,"results":"96","hashOfConfig":"76"},{"size":416,"mtime":1612168001855,"results":"97","hashOfConfig":"64"},{"size":533,"mtime":1612169244118,"results":"98","hashOfConfig":"64"},{"size":352,"mtime":1612167956681,"results":"99","hashOfConfig":"64"},{"size":1392,"mtime":1615353892089,"results":"100","hashOfConfig":"64"},{"size":7444,"mtime":1629547008092,"results":"101","hashOfConfig":"64"},{"size":6303,"mtime":1619456012435,"results":"102","hashOfConfig":"64"},{"size":453,"mtime":1613061213746,"results":"103","hashOfConfig":"64"},{"size":3692,"mtime":1629528657582,"results":"104","hashOfConfig":"64"},{"size":752,"mtime":1619596082211,"results":"105","hashOfConfig":"64"},{"size":44019,"mtime":1629568334108,"results":"106","hashOfConfig":"64"},{"size":11328,"mtime":1629434917614,"results":"107","hashOfConfig":"64"},{"size":2073,"mtime":1615528801975,"results":"108","hashOfConfig":"64"},{"size":3754,"mtime":1614789893333,"results":"109","hashOfConfig":"64"},{"size":309,"mtime":1614406233718,"results":"110","hashOfConfig":"76"},{"size":495,"mtime":1614526862413,"results":"111","hashOfConfig":"76"},{"size":5950,"mtime":1629547487632,"results":"112","hashOfConfig":"64"},{"size":1784,"mtime":1629527004399,"results":"113","hashOfConfig":"64"},{"size":4172,"mtime":1615541770263,"results":"114","hashOfConfig":"64"},{"size":242,"mtime":1616293806859,"results":"115","hashOfConfig":"64"},{"size":1568,"mtime":1629438381224,"results":"116","hashOfConfig":"64"},{"size":1182,"mtime":1629438379037,"results":"117","hashOfConfig":"64"},{"size":22137,"mtime":1629431804621,"results":"118","hashOfConfig":"64"},{"size":4506,"mtime":1629434662973,"results":"119","hashOfConfig":"64"},{"size":4649,"mtime":1629641310083,"results":"120","hashOfConfig":"64"},{"size":767,"mtime":1619592062942,"results":"121","hashOfConfig":"64"},{"size":7593,"mtime":1629649479271,"results":"122","hashOfConfig":"64"},{"size":11348,"mtime":1629649923705,"results":"123","hashOfConfig":"64"},{"size":6939,"mtime":1629649665967,"results":"124","hashOfConfig":"64"},{"size":1135,"mtime":1618764563586,"results":"125","hashOfConfig":"64"},{"size":776,"mtime":1619598386436,"results":"126","hashOfConfig":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},"1k95qvb",{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"129"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"129"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},"e2euwd",{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"155"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"129"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"129"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"129"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\index.js",[],["262","263"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\App.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reportWebVitals.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\store.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\Login.js",["264","265"],"import React, { Fragment } from 'react';\r\n//import {Alert} from 'reactstrap';\r\n//import axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n//import { bindActionCreators } from 'redux';\r\nimport { Link, Redirect} from 'react-router-dom';\r\n//import { setAlert } from '../../actions/alert';\r\nimport { login } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nimport Alert from '../layout/Alert';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Login = ({auth:{isAuthenticated, token}, login}) => {\r\n    const { register, handleSubmit, errors, getValues } = useForm({\r\n        mode: 'onTouched',\r\n        });\r\n    const { email, password } = '';\r\n    const registerOptions = {\r\n        password: {\r\n            required: \"Password is required\",\r\n            minLength: {\r\n                value: 6,\r\n                message: \"Password must have at least 6 characters\"\r\n            }\r\n        },\r\n        email: {\r\n            required: \"Email is required\",\r\n            pattern: {\r\n                value: /^(([^<>()[\\]\\\\.,;:!*&$#\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,4}))$/,\r\n                message: \"Enter a valid e-mail address\",\r\n              }\r\n        }\r\n    };\r\n    const onSubmit = async () => {\r\n        const { email, password } = getValues();\r\n        // console.log('Email ',email);\r\n        // console.log('pass', password );\r\n        login(email, password);\r\n        //reset();\r\n        //console.log('IsAuthenticated = ', isAuthenticated);\r\n        \r\n    };\r\n    if (isAuthenticated && token !== null) {\r\n        return <Redirect to={{\r\n            pathname: '/dashboard',\r\n            state: {\r\n                showMyPost: false\r\n            }\r\n        }} />;\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className=\"form-wrapper auth\">\r\n\t\t        <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div id=\"brand-image\">\t\r\n                        <img src={process.env.PUBLIC_URL + '/img/AG-LogoFinal.png'} style={{width: \"100px\"}} alt=\"logo\" />\r\n                        <h2>\r\n                            <span>Log in to Agriculturist</span>\r\n                        </h2>\r\n                    </div> \r\n                    {/* <h2>\r\n                        <span>Log in to Agriculturist</span>\r\n                    </h2> */}\r\n                   \r\n                    <input type=\"text\" \r\n                            name=\"email\" \r\n                            placeholder=\"Enter Email\"\r\n                            ref={register(registerOptions.email)}/>\r\n                     {errors.email && <span className=\"text-danger\">{errors.email.message}</span>}\r\n                    <input type=\"password\" \r\n                            name=\"password\" \r\n                            placeholder=\"Enter Password\"\r\n                            ref={register(registerOptions.password)} />\r\n                    {errors.password && <span className=\"text-danger\">{errors.password.message}</span>}\r\n                    <button>Login</button>\r\n                    <span>Not a user? <Link to=\"/register\">Register Here</Link></span>\r\n                    <span><Link to=\"/forgotpassword\">Forgot Password?</Link></span>\r\n                    <Alert />\r\n\t\t        </form>\r\n\t        </div>\r\n        </Fragment>\r\n    )\r\n}\r\nLogin.propTypes = {\r\n    //setAlert: PropTypes.func.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n  \r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\Posts.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\PostDetail.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\Register.js",["266","267"],"import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n//import { bindActionCreators } from 'redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { userRegister } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n//import { setAlert } from '../../actions/alert';\r\nimport Alert from '../layout/Alert';\r\nimport Compress from \"browser-image-compression\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// const initialState = {\r\n//     firstname: '',\r\n//     middlename: '',\r\n//     lastname: '',\r\n//     user_category: '',\r\n//     student_type: '',\r\n//     job_type: '',\r\n//     specialization_type: '',\r\n//     email: '',\r\n//     phone: '',\r\n//     password: '',\r\n//     passwordconfirm: '',\r\n//     address: '',\r\n//     country: '',\r\n//     referrer_name: '',\r\n//     referrer_email: '',\r\n//     emailconfirm: false\r\n//   }\r\nconst Register = ({userRegister, isAuthenticated}) => {\r\n    const { register, handleSubmit, errors, getValues, reset } = useForm({\r\n        mode: 'onTouched',\r\n        });\r\n    const {password} = getValues();\r\n    const registerOptions = {\r\n        firstname: { \r\n                required: \"Firstname is required\",\r\n                maxLength: {\r\n                value: 20,\r\n                message: \"Firstname consists of maximum 20 characters\"\r\n            } \r\n        },\r\n        middlename: { \r\n            maxLength: {\r\n                value: 20,\r\n                message: \"Middlename consists of maximum 20 characters\"\r\n            }  \r\n        },\r\n        lastname: { \r\n            maxLength: {\r\n            value: 20,\r\n            message: \"Lastname consists of maximum 20 characters\"\r\n            } \r\n        },\r\n\r\n        user_category: {required: \"User Category is required\"},\r\n        email: { \r\n            required: \"Email is required\",\r\n            pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                message: \"Enter a valid e-mail address\",\r\n              }\r\n        },\r\n        password: {\r\n            required: \"Password is required\",\r\n            minLength: {\r\n                value: 6,\r\n                message: \"Password must have at least 6 characters\"\r\n            }\r\n        },\r\n        phone: {\r\n            minLength: {\r\n                value: 6,\r\n                message: \"Phone must have at least 6 characters\"\r\n            },\r\n            maxLength: {\r\n                value: 15,\r\n                message: \"Phone must have maximum 15 characters\"\r\n            },\r\n            // pattern: {\r\n            //     value: /^[0-9]$/,\r\n            //     message: \"Phone number contains only digit\"\r\n            // }\r\n        },\r\n        referrer_name: {required: \"Referrer Name is required\"},\r\n        referrer_email: {\r\n            required: \"Referrer Email is required\",\r\n            pattern: {\r\n                value: /^(([^<>()[\\]\\\\.,;:!*&$#\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,4}))$/,\r\n                message: \"Enter a valid e-mail address\",\r\n              }\r\n        }\r\n    };\r\n    const [file, setFile] = useState('');\r\n    const [image, setImage] = useState('../../img/user-profile.png');\r\n    // const [formData, setFormData] = useState(initialState);\r\n    \r\n    // const { firstname, middlename, lastname, user_category, email, phone,\r\n    //    passwordconfirm, address, country,\r\n    //    referrer_name, referrer_email } = formData;\r\n    \r\n    // const onChange = (e) =>\r\n    //       setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    // function processfile(blob, options) {\r\n    //     // read the files\r\n    //     var reader = new FileReader();\r\n    //     reader.readAsArrayBuffer(blob);\r\n    //     var resized;\r\n    //     reader.onload = function (event) {\r\n    //       // blob stuff\r\n    //       var blob = new Blob([event.target.result]); // create blob...\r\n    //       window.URL = window.URL || window.webkitURL;\r\n    //       var blobURL = window.URL.createObjectURL(blob); // and get it's URL\r\n          \r\n    //       // helper Image object\r\n    //       var image = new Image();\r\n    //       image.src = blobURL;\r\n    //       image.onload = function() {\r\n    //         // have to wait till it's loaded\r\n    //         resized = resizeMe(image, options); // resized image url\r\n    //         setImage(resized);\r\n    //         console.log('Resize image = ', resized);\r\n    //       }\r\n    //     };\r\n    //     // console.log('Resize image = ', resized);\r\n    //     // return resized;\r\n    // }\r\n    \r\n    // === RESIZE ====\r\n    \r\n    // function resizeMe(img, options) {\r\n      \r\n    //   var canvas = document.createElement('canvas');\r\n    \r\n    //   var width = img.width;\r\n    //   var height = img.height;\r\n    \r\n    //   // calculate the width and height, constraining the proportions\r\n    //   if (width > height) {\r\n    //     if (width > options.maxWidth) {\r\n    //       //height *= max_width / width;\r\n    //       height = Math.round(height *= options.maxWidth / width);\r\n    //       width = options.maxWidth;\r\n    //     }\r\n    //   } else {\r\n    //     if (height > options.max_height) {\r\n    //       //width *= max_height / height;\r\n    //       width = Math.round(width *= options.max_height / height);\r\n    //       height = options.max_height;\r\n    //     }\r\n    //   }\r\n      \r\n    //   // resize the canvas and draw the image data into it\r\n    //   canvas.width = width;\r\n    //   canvas.height = height;\r\n    //   var ctx = canvas.getContext(\"2d\");\r\n    //   ctx.drawImage(img, 0, 0, width, height);\r\n      \r\n    //   return canvas.toDataURL(\"image/jpeg\",0.5); // get the data from canvas as 70% JPG (can be also PNG, etc.)\r\n      \r\n    //   // you can get BLOB too by using canvas.toBlob(blob => {});\r\n    \r\n    // }\r\n    const imageHandler = async (e) => {\r\n        setFile(e.target.files[0]);\r\n        var fileUpload = e.target.files[0];\r\n        if(fileUpload) setImage(URL.createObjectURL(e.target.files[0]));\r\n        //var convertedBlobFile;\r\n        const options = {\r\n            //maxSizeMB: 1.5,\r\n            maxWidth: 300, // the max width of the output image, defaults to 1920px\r\n            maxHeight: 300, // the max height of the output image, defaults to 1920px\r\n            resize: true,\r\n            useWebWorker: true\r\n        }\r\n        \r\n        const reader = new FileReader();\r\n        reader.onload = async () =>{\r\n            if(reader.readyState === 2){\r\n                try{\r\n                    const compressedFile = await Compress(fileUpload, options)\r\n                    //console.log(compressedFile);\r\n                    //processfile(compressedFile, options);\r\n                    // var compressURL = URL.createObjectURL(compressedFile);\r\n                    // console.log('image',compressURL)\r\n                }\r\n                catch(e){\r\n                    // Show the user a toast message or notification that something went wrong while compressing file\r\n                    alert('File size must be less than 20MB');\r\n                    console.log('Error in compress = ',e);\r\n                }\r\n            }\r\n        }\r\n        if(fileUpload) reader.readAsDataURL(fileUpload)\r\n    };\r\n    \r\n    const getFormData = object => Object.keys(object).reduce((formData, key) => {\r\n        formData.append(key, object[key]);\r\n        return formData;\r\n    }, new FormData());\r\n    const onSubmit = async (data) => {\r\n        //alert(data);\r\n        //e.preventDefault();\r\n        //console.log(formData);\r\n        const form_data = getFormData(data);\r\n        //console.log(form_data);\r\n        //alert(JSON.stringify(form_data))\r\n        form_data.append('file', file);\r\n        // form_data.append('image', image);\r\n        form_data.append('emailconfirm', false);\r\n        form_data.append('job_type','');\r\n        form_data.append('student_type','');\r\n        form_data.append('specialization_type','');\r\n        userRegister({ form_data })\r\n        //reset();\r\n        //setValue('');   \r\n    };\r\n    \r\n    // if(isAuthenticated) {\r\n    //     return <Redirect to=\"/login\" />\r\n    // }\r\n    return (\r\n        <div>\r\n            <div className=\"form-wrapper auth\">\r\n\t\t        <form onSubmit={handleSubmit(onSubmit)} id=\"registration-form\">\r\n                    {/* <div id=\"brand-image\">\t\r\n                        <img src=\"../../img/fish-logo.png\" alt=\"logo\" />\r\n                    </div> */}\r\n                    <h2>\r\n                        <span>Registration</span>\r\n                    </h2>\r\n                    <div className=\"flex-inline items-3 \">\t\t\r\n                        <label>Name: *</label>\t\r\n                        <div className=\"flex-inline \">\r\n                            <input type=\"text\" \r\n                                    name=\"firstname\" \r\n                                    placeholder=\"Enter First Name\"\r\n                                    ref={register(registerOptions.firstname)}\r\n                                      />\r\n                            \r\n                            <input type=\"text\"\r\n                                   name=\"middlename\" \r\n                                   placeholder=\"Enter Middle Name\"\r\n                                   ref={register(registerOptions.middlename)} />\r\n                            <input type=\"text\" \r\n                                   name=\"lastname\" \r\n                                   placeholder=\"Enter Last Name\"\r\n                                   ref={register(registerOptions.lastname)}/>\r\n                        </div>\r\n                    </div>\r\n                    {errors.firstname && <span className=\"text-danger\">{errors.firstname.message}</span>}\r\n                    {errors.middlename && <span className=\"text-danger\">{errors.middlename.message}</span>}\r\n                    {errors.lastname && <span className=\"text-danger\">{errors.lastname.message}</span>}\r\n                    <div className=\"flex-inline items-3\">\r\n                        <label>User Category: *</label>\r\n                        <div className=\"flex-inline\">\r\n                            <div className=\"select-wrapper\">\r\n                                <select name=\"user_category\"\r\n                                        ref={register(registerOptions.user_category)}\r\n                                >\r\n                                    <option value=\"\">Select User Category </option>\r\n                                    <option value=\"agriculture\">Agriculture</option>  \r\n                                    <option value=\"veterinary-science\">Veterinary Science</option>  \r\n                                    <option value=\"animal-husbandry\">Animal Husbandry</option>  \r\n                                    <option value=\"agricultural-economics-rural-sociology\">Agricultural Economics & Rural Sociology</option>  \r\n                                    <option value=\"agricultural-engineering-technology\">Agricultural Engineering & Technology</option>  \r\n                                    <option value=\"fisheries\">Fisheries</option>  \r\n                                    <option value=\"agri-business\">Agri-business</option>  \r\n                                    <option value=\"agro-information-technology\">Agro-information Technology</option>  \r\n                                    <option value=\"agriculture-related-job\">Agriculture Related Job</option>  \r\n                                    <option value=\"student\">Student</option>  \r\n                                </select>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    {errors.user_category && <span className=\"text-danger\">{errors.user_category.message}</span>}\r\n                    <div className=\"flex-inline \">\r\n                        <label>Email: *</label>\r\n                        <input type=\"email\" \r\n                               name=\"email\" \r\n                               placeholder=\"Enter Email\"\r\n                               ref={register(registerOptions.email)} />\r\n                        \r\n                    </div>\r\n                    {errors.email && <span className=\"text-danger\">{errors.email.message}</span>}\r\n                    <div className=\"flex-inline \">\r\n                        <label>Phone: </label>\r\n                        <input type=\"text\" \r\n                               name=\"phone\" \r\n                               placeholder=\"Enter Phone\"\r\n                               ref={register(registerOptions.phone)} />\r\n                    </div>\r\n                    {errors.phone && <span className=\"text-danger\">{errors.phone.message}</span>}\r\n                    <div className=\"flex-inline \">\r\n                        <label htmlFor=\"password\">Password: *</label>\r\n                        <input type=\"password\" \r\n                               name=\"password\" \r\n                               placeholder=\"Enter Password\"\r\n                               ref={register(registerOptions.password)} />\r\n                    </div>\r\n                    {errors.password && <span className=\"text-danger\">{errors.password.message}</span>}\r\n                    <div className=\"flex-inline \">\r\n                        <label>Confirm Password: *</label>\r\n                        <input type=\"password\" \r\n                               name=\"passwordconfirm\" \r\n                               placeholder=\"Enter Password Again\" \r\n                               ref={register({\r\n                                        required: true, \r\n                                        validate: value => value === password,\r\n                                   })}\r\n                               />\r\n                    </div>\r\n                    {errors.passwordconfirm && errors.passwordconfirm.type === 'required' && <span className=\"text-danger\">Confirm Password is required</span>}\r\n                    {errors.passwordconfirm && errors.passwordconfirm.type === 'validate' && <span className=\"text-danger\">Password is not matched</span>}\r\n                    <div className=\"flex-inline \">\r\n                        <label>Address:</label>\r\n                        <input type=\"text\" \r\n                                name=\"address\" \r\n                                placeholder=\"Enter Address\"\r\n                                ref={register} />\r\n                    </div>\r\n                    <div className=\"flex-inline \">\r\n                        <label>Country:</label>\r\n                        <div className=\"select-wrapper\">\r\n                            <select id=\"country\" \r\n                                    name=\"country\" \r\n                                    className=\"form-control\"\r\n                                    ref={register}>\r\n                                <option value=\"\">Select Country</option>\r\n                                <option value=\"Afghanistan\">Afghanistan</option>\r\n                                <option value=\"Åland Islands\">Åland Islands</option>\r\n                                <option value=\"Albania\">Albania</option>\r\n                                <option value=\"Algeria\">Algeria</option>\r\n                                <option value=\"American Samoa\">American Samoa</option>\r\n                                <option value=\"Andorra\">Andorra</option>\r\n                                <option value=\"Angola\">Angola</option>\r\n                                <option value=\"Anguilla\">Anguilla</option>\r\n                                <option value=\"Antarctica\">Antarctica</option>\r\n                                <option value=\"Antigua and Barbuda\">Antigua and Barbuda</option>\r\n                                <option value=\"Argentina\">Argentina</option>\r\n                                <option value=\"Armenia\">Armenia</option>\r\n                                <option value=\"Aruba\">Aruba</option>\r\n                                <option value=\"Australia\">Australia</option>\r\n                                <option value=\"Austria\">Austria</option>\r\n                                <option value=\"Azerbaijan\">Azerbaijan</option>\r\n                                <option value=\"Bahamas\">Bahamas</option>\r\n                                <option value=\"Bahrain\">Bahrain</option>\r\n                                <option value=\"Bangladesh\">Bangladesh</option>\r\n                                <option value=\"Barbados\">Barbados</option>\r\n                                <option value=\"Belarus\">Belarus</option>\r\n                                <option value=\"Belgium\">Belgium</option>\r\n                                <option value=\"Belize\">Belize</option>\r\n                                <option value=\"Benin\">Benin</option>\r\n                                <option value=\"Bermuda\">Bermuda</option>\r\n                                <option value=\"Bhutan\">Bhutan</option>\r\n                                <option value=\"Bolivia\">Bolivia</option>\r\n                                <option value=\"Bosnia and Herzegovina\">Bosnia and Herzegovina</option>\r\n                                <option value=\"Botswana\">Botswana</option>\r\n                                <option value=\"Bouvet Island\">Bouvet Island</option>\r\n                                <option value=\"Brazil\">Brazil</option>\r\n                                <option value=\"British Indian Ocean Territory\">British Indian Ocean Territory</option>\r\n                                <option value=\"Brunei Darussalam\">Brunei Darussalam</option>\r\n                                <option value=\"Bulgaria\">Bulgaria</option>\r\n                                <option value=\"Burkina Faso\">Burkina Faso</option>\r\n                                <option value=\"Burundi\">Burundi</option>\r\n                                <option value=\"Cambodia\">Cambodia</option>\r\n                                <option value=\"Cameroon\">Cameroon</option>\r\n                                <option value=\"Canada\">Canada</option>\r\n                                <option value=\"Cape Verde\">Cape Verde</option>\r\n                                <option value=\"Cayman Islands\">Cayman Islands</option>\r\n                                <option value=\"Central African Republic\">Central African Republic</option>\r\n                                <option value=\"Chad\">Chad</option>\r\n                                <option value=\"Chile\">Chile</option>\r\n                                <option value=\"China\">China</option>\r\n                                <option value=\"Christmas Island\">Christmas Island</option>\r\n                                <option value=\"Cocos (Keeling) Islands\">Cocos (Keeling) Islands</option>\r\n                                <option value=\"Colombia\">Colombia</option>\r\n                                <option value=\"Comoros\">Comoros</option>\r\n                                <option value=\"Congo\">Congo</option>\r\n                                <option value=\"Congo, The Democratic Republic of The\">Congo, The Democratic Republic of The</option>\r\n                                <option value=\"Cook Islands\">Cook Islands</option>\r\n                                <option value=\"Costa Rica\">Costa Rica</option>\r\n                                <option value=\"Cote D'ivoire\">Cote D'ivoire</option>\r\n                                <option value=\"Croatia\">Croatia</option>\r\n                                <option value=\"Cuba\">Cuba</option>\r\n                                <option value=\"Cyprus\">Cyprus</option>\r\n                                <option value=\"Czech Republic\">Czech Republic</option>\r\n                                <option value=\"Denmark\">Denmark</option>\r\n                                <option value=\"Djibouti\">Djibouti</option>\r\n                                <option value=\"Dominica\">Dominica</option>\r\n                                <option value=\"Dominican Republic\">Dominican Republic</option>\r\n                                <option value=\"Ecuador\">Ecuador</option>\r\n                                <option value=\"Egypt\">Egypt</option>\r\n                                <option value=\"El Salvador\">El Salvador</option>\r\n                                <option value=\"Equatorial Guinea\">Equatorial Guinea</option>\r\n                                <option value=\"Eritrea\">Eritrea</option>\r\n                                <option value=\"Estonia\">Estonia</option>\r\n                                <option value=\"Ethiopia\">Ethiopia</option>\r\n                                <option value=\"Falkland Islands (Malvinas)\">Falkland Islands (Malvinas)</option>\r\n                                <option value=\"Faroe Islands\">Faroe Islands</option>\r\n                                <option value=\"Fiji\">Fiji</option>\r\n                                <option value=\"Finland\">Finland</option>\r\n                                <option value=\"France\">France</option>\r\n                                <option value=\"French Guiana\">French Guiana</option>\r\n                                <option value=\"French Polynesia\">French Polynesia</option>\r\n                                <option value=\"French Southern Territories\">French Southern Territories</option>\r\n                                <option value=\"Gabon\">Gabon</option>\r\n                                <option value=\"Gambia\">Gambia</option>\r\n                                <option value=\"Georgia\">Georgia</option>\r\n                                <option value=\"Germany\">Germany</option>\r\n                                <option value=\"Ghana\">Ghana</option>\r\n                                <option value=\"Gibraltar\">Gibraltar</option>\r\n                                <option value=\"Greece\">Greece</option>\r\n                                <option value=\"Greenland\">Greenland</option>\r\n                                <option value=\"Grenada\">Grenada</option>\r\n                                <option value=\"Guadeloupe\">Guadeloupe</option>\r\n                                <option value=\"Guam\">Guam</option>\r\n                                <option value=\"Guatemala\">Guatemala</option>\r\n                                <option value=\"Guernsey\">Guernsey</option>\r\n                                <option value=\"Guinea\">Guinea</option>\r\n                                <option value=\"Guinea-bissau\">Guinea-bissau</option>\r\n                                <option value=\"Guyana\">Guyana</option>\r\n                                <option value=\"Haiti\">Haiti</option>\r\n                                <option value=\"Heard Island and Mcdonald Islands\">Heard Island and Mcdonald Islands</option>\r\n                                <option value=\"Holy See (Vatican City State)\">Holy See (Vatican City State)</option>\r\n                                <option value=\"Honduras\">Honduras</option>\r\n                                <option value=\"Hong Kong\">Hong Kong</option>\r\n                                <option value=\"Hungary\">Hungary</option>\r\n                                <option value=\"Iceland\">Iceland</option>\r\n                                <option value=\"India\">India</option>\r\n                                <option value=\"Indonesia\">Indonesia</option>\r\n                                <option value=\"Iran, Islamic Republic of\">Iran, Islamic Republic of</option>\r\n                                <option value=\"Iraq\">Iraq</option>\r\n                                <option value=\"Ireland\">Ireland</option>\r\n                                <option value=\"Isle of Man\">Isle of Man</option>\r\n                                <option value=\"Israel\">Israel</option>\r\n                                <option value=\"Italy\">Italy</option>\r\n                                <option value=\"Jamaica\">Jamaica</option>\r\n                                <option value=\"Japan\">Japan</option>\r\n                                <option value=\"Jersey\">Jersey</option>\r\n                                <option value=\"Jordan\">Jordan</option>\r\n                                <option value=\"Kazakhstan\">Kazakhstan</option>\r\n                                <option value=\"Kenya\">Kenya</option>\r\n                                <option value=\"Kiribati\">Kiribati</option>\r\n                                <option value=\"Korea, Democratic People's Republic of\">Korea, Democratic People's Republic of</option>\r\n                                <option value=\"Korea, Republic of\">Korea, Republic of</option>\r\n                                <option value=\"Kuwait\">Kuwait</option>\r\n                                <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\r\n                                <option value=\"Lao People's Democratic Republic\">Lao People's Democratic Republic</option>\r\n                                <option value=\"Latvia\">Latvia</option>\r\n                                <option value=\"Lebanon\">Lebanon</option>\r\n                                <option value=\"Lesotho\">Lesotho</option>\r\n                                <option value=\"Liberia\">Liberia</option>\r\n                                <option value=\"Libyan Arab Jamahiriya\">Libyan Arab Jamahiriya</option>\r\n                                <option value=\"Liechtenstein\">Liechtenstein</option>\r\n                                <option value=\"Lithuania\">Lithuania</option>\r\n                                <option value=\"Luxembourg\">Luxembourg</option>\r\n                                <option value=\"Macao\">Macao</option>\r\n                                <option value=\"Macedonia, The Former Yugoslav Republic of\">Macedonia, The Former Yugoslav Republic of</option>\r\n                                <option value=\"Madagascar\">Madagascar</option>\r\n                                <option value=\"Malawi\">Malawi</option>\r\n                                <option value=\"Malaysia\">Malaysia</option>\r\n                                <option value=\"Maldives\">Maldives</option>\r\n                                <option value=\"Mali\">Mali</option>\r\n                                <option value=\"Malta\">Malta</option>\r\n                                <option value=\"Marshall Islands\">Marshall Islands</option>\r\n                                <option value=\"Martinique\">Martinique</option>\r\n                                <option value=\"Mauritania\">Mauritania</option>\r\n                                <option value=\"Mauritius\">Mauritius</option>\r\n                                <option value=\"Mayotte\">Mayotte</option>\r\n                                <option value=\"Mexico\">Mexico</option>\r\n                                <option value=\"Micronesia, Federated States of\">Micronesia, Federated States of</option>\r\n                                <option value=\"Moldova, Republic of\">Moldova, Republic of</option>\r\n                                <option value=\"Monaco\">Monaco</option>\r\n                                <option value=\"Mongolia\">Mongolia</option>\r\n                                <option value=\"Montenegro\">Montenegro</option>\r\n                                <option value=\"Montserrat\">Montserrat</option>\r\n                                <option value=\"Morocco\">Morocco</option>\r\n                                <option value=\"Mozambique\">Mozambique</option>\r\n                                <option value=\"Myanmar\">Myanmar</option>\r\n                                <option value=\"Namibia\">Namibia</option>\r\n                                <option value=\"Nauru\">Nauru</option>\r\n                                <option value=\"Nepal\">Nepal</option>\r\n                                <option value=\"Netherlands\">Netherlands</option>\r\n                                <option value=\"Netherlands Antilles\">Netherlands Antilles</option>\r\n                                <option value=\"New Caledonia\">New Caledonia</option>\r\n                                <option value=\"New Zealand\">New Zealand</option>\r\n                                <option value=\"Nicaragua\">Nicaragua</option>\r\n                                <option value=\"Niger\">Niger</option>\r\n                                <option value=\"Nigeria\">Nigeria</option>\r\n                                <option value=\"Niue\">Niue</option>\r\n                                <option value=\"Norfolk Island\">Norfolk Island</option>\r\n                                <option value=\"Northern Mariana Islands\">Northern Mariana Islands</option>\r\n                                <option value=\"Norway\">Norway</option>\r\n                                <option value=\"Oman\">Oman</option>\r\n                                <option value=\"Pakistan\">Pakistan</option>\r\n                                <option value=\"Palau\">Palau</option>\r\n                                <option value=\"Palestinian Territory, Occupied\">Palestinian Territory, Occupied</option>\r\n                                <option value=\"Panama\">Panama</option>\r\n                                <option value=\"Papua New Guinea\">Papua New Guinea</option>\r\n                                <option value=\"Paraguay\">Paraguay</option>\r\n                                <option value=\"Peru\">Peru</option>\r\n                                <option value=\"Philippines\">Philippines</option>\r\n                                <option value=\"Pitcairn\">Pitcairn</option>\r\n                                <option value=\"Poland\">Poland</option>\r\n                                <option value=\"Portugal\">Portugal</option>\r\n                                <option value=\"Puerto Rico\">Puerto Rico</option>\r\n                                <option value=\"Qatar\">Qatar</option>\r\n                                <option value=\"Reunion\">Reunion</option>\r\n                                <option value=\"Romania\">Romania</option>\r\n                                <option value=\"Russian Federation\">Russian Federation</option>\r\n                                <option value=\"Rwanda\">Rwanda</option>\r\n                                <option value=\"Saint Helena\">Saint Helena</option>\r\n                                <option value=\"Saint Kitts and Nevis\">Saint Kitts and Nevis</option>\r\n                                <option value=\"Saint Lucia\">Saint Lucia</option>\r\n                                <option value=\"Saint Pierre and Miquelon\">Saint Pierre and Miquelon</option>\r\n                                <option value=\"Saint Vincent and The Grenadines\">Saint Vincent and The Grenadines</option>\r\n                                <option value=\"Samoa\">Samoa</option>\r\n                                <option value=\"San Marino\">San Marino</option>\r\n                                <option value=\"Sao Tome and Principe\">Sao Tome and Principe</option>\r\n                                <option value=\"Saudi Arabia\">Saudi Arabia</option>\r\n                                <option value=\"Senegal\">Senegal</option>\r\n                                <option value=\"Serbia\">Serbia</option>\r\n                                <option value=\"Seychelles\">Seychelles</option>\r\n                                <option value=\"Sierra Leone\">Sierra Leone</option>\r\n                                <option value=\"Singapore\">Singapore</option>\r\n                                <option value=\"Slovakia\">Slovakia</option>\r\n                                <option value=\"Slovenia\">Slovenia</option>\r\n                                <option value=\"Solomon Islands\">Solomon Islands</option>\r\n                                <option value=\"Somalia\">Somalia</option>\r\n                                <option value=\"South Africa\">South Africa</option>\r\n                                <option value=\"South Georgia and The South Sandwich Islands\">South Georgia and The South Sandwich Islands</option>\r\n                                <option value=\"Spain\">Spain</option>\r\n                                <option value=\"Sri Lanka\">Sri Lanka</option>\r\n                                <option value=\"Sudan\">Sudan</option>\r\n                                <option value=\"Suriname\">Suriname</option>\r\n                                <option value=\"Svalbard and Jan Mayen\">Svalbard and Jan Mayen</option>\r\n                                <option value=\"Swaziland\">Swaziland</option>\r\n                                <option value=\"Sweden\">Sweden</option>\r\n                                <option value=\"Switzerland\">Switzerland</option>\r\n                                <option value=\"Syrian Arab Republic\">Syrian Arab Republic</option>\r\n                                <option value=\"Taiwan, Province of China\">Taiwan, Province of China</option>\r\n                                <option value=\"Tajikistan\">Tajikistan</option>\r\n                                <option value=\"Tanzania, United Republic of\">Tanzania, United Republic of</option>\r\n                                <option value=\"Thailand\">Thailand</option>\r\n                                <option value=\"Timor-leste\">Timor-leste</option>\r\n                                <option value=\"Togo\">Togo</option>\r\n                                <option value=\"Tokelau\">Tokelau</option>\r\n                                <option value=\"Tonga\">Tonga</option>\r\n                                <option value=\"Trinidad and Tobago\">Trinidad and Tobago</option>\r\n                                <option value=\"Tunisia\">Tunisia</option>\r\n                                <option value=\"Turkey\">Turkey</option>\r\n                                <option value=\"Turkmenistan\">Turkmenistan</option>\r\n                                <option value=\"Turks and Caicos Islands\">Turks and Caicos Islands</option>\r\n                                <option value=\"Tuvalu\">Tuvalu</option>\r\n                                <option value=\"Uganda\">Uganda</option>\r\n                                <option value=\"Ukraine\">Ukraine</option>\r\n                                <option value=\"United Arab Emirates\">United Arab Emirates</option>\r\n                                <option value=\"United Kingdom\">United Kingdom</option>\r\n                                <option value=\"United States\">United States</option>\r\n                                <option value=\"United States Minor Outlying Islands\">United States Minor Outlying Islands</option>\r\n                                <option value=\"Uruguay\">Uruguay</option>\r\n                                <option value=\"Uzbekistan\">Uzbekistan</option>\r\n                                <option value=\"Vanuatu\">Vanuatu</option>\r\n                                <option value=\"Venezuela\">Venezuela</option>\r\n                                <option value=\"Viet Nam\">Viet Nam</option>\r\n                                <option value=\"Virgin Islands, British\">Virgin Islands, British</option>\r\n                                <option value=\"Virgin Islands, U.S.\">Virgin Islands, U.S.</option>\r\n                                <option value=\"Wallis and Futuna\">Wallis and Futuna</option>\r\n                                <option value=\"Western Sahara\">Western Sahara</option>\r\n                                <option value=\"Yemen\">Yemen</option>\r\n                                <option value=\"Zambia\">Zambia</option>\r\n                                <option value=\"Zimbabwe\">Zimbabwe</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\t\r\n                    <div className=\"flex-inline\">\r\n                        <label>Profile Picture:</label>\r\n                        <div id=\"registration-image\">\r\n                            <div id=\"registration-image-container\">\r\n                                <div className=\"full-row\">\r\n                                    <img src={image} alt=\"profile\" />\r\n                                </div>\r\n                                <div className=\"full-row\">\r\n                                    <input type=\"file\" \r\n                                        name=\"profile_picture\" \r\n                                        className=\"custom-select-input\"\r\n                                        accept='image/*'\r\n                                        onChange={imageHandler} />\r\n                                </div>\r\n                                <div className=\"full-row\">\r\n                                    <Link to=\"/register\" onClick={() => {setImage('../../img/user-profile.png')}}>Remove Image</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>     \r\n                    <h3>Referred By: </h3>   \r\n                    <div className=\"flex-inline \">\r\n                        <label>Name: * </label>\r\n                        <input type=\"text\" \r\n                                name=\"referrer_name\" \r\n                                placeholder=\"Enter Name\"\r\n                                ref={register(registerOptions.referrer_name)} />\r\n                    </div>\r\n                    {errors.referrer_name && <span className=\"text-danger\">{errors.referrer_name.message}</span>} \r\n                    <div className=\"flex-inline \">\r\n                        <label>Email: *</label>\r\n                        <input type=\"email\" \r\n                                name=\"referrer_email\" \r\n                                placeholder=\"Enter Email\"\r\n                                ref={register(registerOptions.referrer_email)} />\r\n                       \r\n                    </div>\r\n                    {errors.referrer_email && <span className=\"text-danger\">{errors.referrer_email.message}</span>}\r\n                    <button>Registration</button>\r\n                    <Alert />\r\n                    <p text-align=\"center\">* Marked fields are required. Please fill up these fields <br/><br/>\r\n                        Already have an account? <Link to=\"/login\">Login Here</Link>\r\n                    </p>\r\n\t\t        </form>\r\n\t        </div>\r\n        </div>\r\n        \r\n    )\r\n};\r\nRegister.propTypes = {\r\n    userRegister: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n  };\r\n  \r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         actions: bindActionCreators({\r\n//             setAlert,\r\n//             register\r\n//         }, dispatch)\r\n//     }\r\n// }\r\nexport default connect(mapStateToProps, {userRegister})(Register);\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Dashboard.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\auth.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\AddPost.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\ImageUpload.js",["268"],"import React, { Component } from 'react';\r\nimport '../css/login.css';\r\nimport '../css/responsive.css';\r\nexport class ImageUpload extends Component {\r\n    state = {\r\n        image: '../../img/user-profile.png'\r\n    }\r\n    //const [image, setImage] = useState('../../img/profile-picture.png');\r\n    imageHandler = (e) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () =>{\r\n          if(reader.readyState === 2){\r\n            this.setState({image: reader.result})\r\n          }\r\n        }\r\n        reader.readAsDataURL(e.target.files[0])\r\n        \r\n      };\r\n    \r\n    render() {\r\n        const { image } = this.state\r\n        console.log(\"Image = \", image);\r\n    return (\r\n        <div className=\"form-wrapper\">\r\n         <form id=\"registration-form\">\r\n         <div className=\"flex-inline\">\r\n                        <label>Profile Picture:</label>\r\n                        <div id=\"registration-image\">\r\n                            <div id=\"registration-image-container\">\r\n                                <div className=\"full-row\">\r\n                                    <img src={image} alt=\"profile\" />\r\n                                </div>\r\n                                <div className=\"full-row\">\r\n                                    <input type=\"file\" \r\n                                        name=\"profile_picture\" \r\n                                        className=\"customFileInput\"\r\n                                        onChange={this.imageHandler}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"full-row\">\r\n                                    <a href=\"\">Remove Image</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>     \r\n         </form>\r\n            \r\n        </div>\r\n    )\r\n    }\r\n}\r\nexport default ImageUpload;\r\n",["269","270"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\types.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Footer.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Topbar.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Sidebar.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\CommentForm.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Pages.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\post.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\CommentItem.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\NewPost.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\utils\\setAuthToken.js",[],["271","272"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\layout\\Spinner.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\utils\\formatDate.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\index.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\PostItem.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\auth.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\post.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\UploadImage.js",["273","274","275"],"import React, { useState } from 'react';\r\nimport {Alert} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nconst API = process.env.REACT_APP_API;\r\nconst UploadImage = () => {\r\n    const [file, setFile] = useState('');\r\n    //const [filename, setFilename] = useState('');\r\n    const [image, setImage] = useState('../../img/user-profile.png');\r\n    const [fileimg, setFileimg] = useState('');\r\n    const [formData, setFormData] = useState({\r\n        firstname:'',\r\n        middlename:''\r\n    })\r\n    const { firstname, middlename } = formData;\r\n    const onChange = (e) =>\r\n          setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const imageHandler = (e) => {\r\n        \r\n        setFile(e.target.files[0]);\r\n        //setFilename(e.target.files[0].name);\r\n        const reader = new FileReader();\r\n        reader.onload = () =>{\r\n          if(reader.readyState === 2){\r\n            setImage( reader.result)\r\n          }\r\n        }\r\n        const urlFile = reader.readAsDataURL(e.target.files[0])\r\n        console.log('URL = ',reader);\r\n       \r\n      };\r\n      const getFormData = object => Object.keys(object).reduce((formData, key) => {\r\n        formData.append(key, object[key]);\r\n        return formData;\r\n      }, new FormData());\r\n      const onSubmit = async e => {\r\n        e.preventDefault();\r\n        const form_data = getFormData(formData);\r\n\r\n        // for ( var key in formData ) {\r\n        //   form_data.append(key, formData[key]);\r\n        // }\r\n        //form_data.append('data', formData);\r\n        form_data.append('image', image);\r\n        //form_data.append('file', file);\r\n        //form_data.append('filename', filename);\r\n        \r\n        try {\r\n          // const res = await axios.post(`${API}/file_upload`, form_data);\r\n    \r\n          // const { fileName } = res.data;\r\n          \r\n          // //setUploadedFile({ fileName, filePath });\r\n          // <Alert>{res.data.result.message}</Alert>\r\n          //setMessage('File Uploaded');\r\n          const resFile = await axios.get(`${API}/getfile`);\r\n          const dataFile = JSON.parse(resFile.data.data);\r\n          console.log('Get Response File = ', dataFile[0].name );\r\n          setFileimg(dataFile[0].image)\r\n          //setFileimg(res.data)\r\n        } catch (err) {\r\n          if (err) {\r\n            <Alert>There was a problem with the server</Alert>;\r\n          } else {\r\n            <Alert>{err.response.data.msg}</Alert>;\r\n          }\r\n        }\r\n      };\r\n    return (\r\n        <div className=\"form-wrapper\">\r\n            <form id=\"registration-form\" onSubmit={onSubmit}>\r\n                <div className=\"flex-inline items-3 widthDiv\">\t\t\r\n                        <label>Name: *</label>\t\r\n                        <div className=\"flex-inline widthDiv\">\r\n                            <input type=\"text\" \r\n                                    name=\"firstname\" \r\n                                    placeholder=\"Enter First Name\"\r\n                                    value={firstname}\r\n                                    onChange={onChange}  />\r\n                            <input type=\"text\"\r\n                                   name=\"middlename\" \r\n                                   placeholder=\"Enter Middle Name\"\r\n                                   value={middlename}\r\n                                   onChange={onChange} />\r\n                        </div>\r\n                </div>\r\n                <div className=\"flex-inline\">\r\n                       <label>Profile Picture:</label>\r\n                       <div id=\"registration-image\">\r\n                           <div id=\"registration-image-container\">\r\n                               <div className=\"full-row\">\r\n                                   <img src={image} alt=\"profile\" />\r\n                               </div>\r\n                               <div className=\"full-row\">\r\n                                   <input type=\"file\" \r\n                                       name=\"profile_picture\" \r\n                                       className=\"customFileInput\"\r\n                                       onChange={imageHandler}\r\n                                   />\r\n                               </div>\r\n                               <div className=\"full-row\">\r\n                                   <a href=\"\">Remove Image</a>\r\n                               </div>\r\n                               <div className=\"full-row\">\r\n                                   <img src={fileimg} alt=\"profile\" />\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                </div>\r\n                <input\r\n                    type='submit'\r\n                    value='Upload'\r\n                    className='btn btn-primary btn-block mt-4'\r\n                />    \r\n            </form>\r\n           \r\n       </div>\r\n    )\r\n}\r\nexport default UploadImage;","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\instance.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\routing\\PrivateRoute.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\config.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\alert.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\layout\\Alert.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\alert.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileHome.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\Upload.js",["276"],"import React, { useState, useRef, Fragment } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Topbar from '../dashboard/Topbar';\r\nimport Footer from '../dashboard/Footer';\r\nimport FileHeader from './FileHeader';\r\nimport Advertisement from '../dashboard/Advertisement';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { addFile } from '../../actions/file';\r\nimport Alert from '../layout/Alert';\r\nconst Upload = ({props, addFile, file: {isSuccess}}) => {\r\n  const [file, setFile] = useState(null); // state for storing actual image\r\n  const [previewSrc, setPreviewSrc] = useState(''); // state for storing previewImage\r\n  const [state, setState] = useState({\r\n    title: '',\r\n    description: ''\r\n  });\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  //const [isPreviewAvailable, setIsPreviewAvailable] = useState(false); // state to show preview only for images\r\n  const dropRef = useRef(); // React ref for managing the hover state of droppable area\r\n  \r\n  const handleInputChange = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const onDrop = (files) => {\r\n    const [uploadedFile] = files;\r\n    setFile(uploadedFile);\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewSrc(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(uploadedFile);\r\n    //setIsPreviewAvailable(uploadedFile.name.match(/\\.(jpeg|jpg|png)$/));\r\n    dropRef.current.style.border = '2px dashed #e9ebeb';\r\n  };\r\n\r\n  const updateBorder = (dragState) => {\r\n    if (dragState === 'over') {\r\n      dropRef.current.style.border = '2px solid #000';\r\n    } else if (dragState === 'leave') {\r\n      dropRef.current.style.border = '2px dashed #e9ebeb';\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (event) => {\r\n    event.preventDefault(); \r\n\r\n    try {\r\n      const { title, description } = state;\r\n      if (title.trim() !== '' && description.trim() !== '') {\r\n        if (file) {\r\n          console.log('file uploadasd');\r\n          console.log('File ',file);\r\n          console.log(`originalFile size ${file.size / 1024/ 1024 } MB`);\r\n          const formData = new FormData();\r\n          formData.append('file', file);\r\n          formData.append('title', title);\r\n          formData.append('description', description);\r\n          //formData.append('filedata', previewSrc);\r\n          console.log('formdata', formData);\r\n          setErrorMsg('');\r\n          addFile({formData});\r\n          props.history.push('/list');\r\n        } else {\r\n          setErrorMsg('Please select a file to add.');\r\n        }\r\n      } else {\r\n        setErrorMsg('Please enter all the field values.');\r\n      }\r\n    } catch (error) {\r\n      error.response && setErrorMsg(error.response.data);\r\n    }\r\n    \r\n  };\r\n  if(isSuccess) {\r\n    return <Redirect to = \"/list\" />;\r\n  } \r\n  return (\r\n    <Fragment>\r\n      <div id=\"wrapper\" className=\"file\">\r\n          <Sidebar />\r\n          <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n              <div id=\"content\">\r\n                  <Topbar />\r\n                  <Alert />\r\n                  <Container>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-sm-12 col-md-6 col-lg-9\">\r\n                        <FileHeader />\r\n                        <Form className=\"search-form\" onSubmit={handleOnSubmit}>\r\n                            {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n                            <Row>\r\n                              <Col>\r\n                                <Form.Group controlId=\"title\">\r\n                                  <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"title\"\r\n                                    value={state.title || ''}\r\n                                    placeholder=\"Enter title\"\r\n                                    onChange={handleInputChange}\r\n                                  />\r\n                                </Form.Group>\r\n                              </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <Form.Group controlId=\"description\">\r\n                                <Form.Control\r\n                                  type=\"text\"\r\n                                  name=\"description\"\r\n                                  value={state.description || ''}\r\n                                  placeholder=\"Enter description\"\r\n                                  onChange={handleInputChange}\r\n                                />\r\n                              </Form.Group>\r\n                            </Col>\r\n                          </Row>\r\n                          <div className=\"upload-section\">\r\n                            <Dropzone\r\n                              onDrop={onDrop}\r\n                              onDragEnter={() => updateBorder('over')}\r\n                              onDragLeave={() => updateBorder('leave')}\r\n                              accept=\"application/pdf\"\r\n                              maxFiles={1}\r\n                            >\r\n                              {({ getRootProps, getInputProps }) => (\r\n                                <div {...getRootProps({ className: 'drop-zone' })} ref={dropRef}>\r\n                                  <input {...getInputProps()} />\r\n                                  <p>Drag and drop a pdf file OR click here to select a pdf file</p>\r\n                                  {file && (\r\n                                    <div>\r\n                                      <strong>Selected file:</strong> {file.name}\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              )}\r\n                            </Dropzone>\r\n                            {/* {previewSrc ? (\r\n                              isPreviewAvailable ? (\r\n                                <div className=\"image-preview\">\r\n                                  <img className=\"preview-image\" src={previewSrc} alt=\"Preview\" />\r\n                                </div>\r\n                              ) : (\r\n                                <div className=\"preview-message\">\r\n                                  <p>No preview available for this file</p>\r\n                                </div>\r\n                              )\r\n                            ) : (\r\n                              <div className=\"preview-message\">\r\n                                <p>Image preview will be shown here after selection</p>\r\n                              </div>\r\n                            )} */}\r\n                          </div>\r\n                          <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                          </Button>\r\n                        </Form>\r\n                      </div>\r\n                      <Advertisement />\r\n                    </div>\r\n                    \r\n                  </Container>\r\n              </div>\r\n              <Footer />\r\n          </div>\r\n          \r\n      </div>\r\n  </Fragment>\r\n    \r\n  )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  file: state.file\r\n});\r\nexport default connect(mapStateToProps, {addFile})(Upload);\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FilesList.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileHeader.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileView.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\Profile.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\ProfilePage.js",["277","278"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../layout/Spinner';\r\nimport Advertisement from '../dashboard/Advertisement';\r\nimport { loadUser, updateProfile, getAllUsers } from '../../actions/auth';\r\n//import { setAlert } from '../../actions/alert';\r\nimport Alert from '../layout/Alert';\r\nimport Compress from 'browser-image-compression';\r\nimport {Image} from 'cloudinary-react';\r\nconst ADMIN = process.env.REACT_APP_ADMIN;\r\nconst IMAGEURL = process.env.REACT_APP_CLOUDINARY;\r\nconst initialState = {\r\n  firstname: '',\r\n  middlename: '',\r\n  lastname: '',\r\n  user_category: '',\r\n  student_type: '',\r\n  job_type: '',\r\n  specialization_type: '',\r\n  email: '',\r\n  phone: '',\r\n  password: '',\r\n  passwordconfirm: '',\r\n  address: '',\r\n  country: '',\r\n  image: '',\r\n  referrer_name: '',\r\n  referrer_email: '',\r\n};\r\nconst ProfilePage = ({\r\n  auth: { user, loading, allUsers },\r\n  loadUser,\r\n  updateProfile,\r\n  getAllUsers,\r\n  props,\r\n}) => {\r\n  const [file, setFile] = useState('');\r\n  const [viewImage, setViewImage] = useState('../../img/user-profile.png');\r\n  const [showImageFlag, setShowImageFlag] = useState(false);\r\n  const [formData, setFormData] = useState(initialState);\r\n  useEffect(() => {\r\n    console.log('Calling profilePage useEffect');\r\n    if (user === null){\r\n        //console.log('Loading = ', loading);\r\n        loadUser();\r\n        getAllUsers();\r\n    } \r\n    \r\n    if (!loading && user) {\r\n      const profileData = { ...initialState };\r\n      for (const key in user) {\r\n        if (key in profileData) profileData[key] = user[key];\r\n      }\r\n      //console.log(\"Profile Data = \", profileData);\r\n      setFormData(profileData);\r\n    }\r\n  }, [loading, user, loadUser, getAllUsers]);\r\n  // console.log('Loading in Profilepage', loading);\r\n  //console.log('User in ProfilePage', user);\r\n  \r\n  let isSearch = false,\r\n    userEmail = null;\r\n  if (props.location.state) {\r\n    \r\n    if (user !== null) {\r\n      userEmail = user.email;\r\n      if (user._id.$oid !== props.location.state.id) {\r\n        //console.log('Search in profile ', allUsers);\r\n        let userSearch = [];\r\n        userSearch = allUsers.filter(\r\n          (user) => user._id.$oid === props.location.state.id\r\n        );\r\n        //console.log('Search in profile ', userSearch);\r\n        if(userSearch.length > 0){\r\n            user = Object.assign({}, userSearch[0]);\r\n            isSearch = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const {\r\n    firstname,\r\n    middlename,\r\n    lastname,\r\n    student_type,\r\n    job_type,\r\n    specialization_type,\r\n    email,\r\n    phone,\r\n    address,\r\n    country,\r\n    image,\r\n    referrer_name,\r\n    referrer_email,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  \r\n  const imageHandler = async (e) => {\r\n    setFile(e.target.files[0]);\r\n    var fileUpload = e.target.files[0];\r\n    if(fileUpload) setViewImage(URL.createObjectURL(e.target.files[0]));\r\n    //var convertedBlobFile;\r\n    //console.log('Calling image handlaer');\r\n    const options = {\r\n      //maxSizeMB: 5,\r\n      maxWidth: 300, // the max width of the output image, defaults to 1920px\r\n      maxHeight: 300, // the max height of the output image, defaults to 1920px\r\n      resize: true,\r\n      useWebWorker: true,\r\n    };\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = async () => {\r\n      if (reader.readyState === 2) {\r\n        try {\r\n          const compressedFile = await Compress(fileUpload, options);\r\n          //setFile(compressedFile);\r\n          //processfile(compressedFile, options);\r\n          \r\n        } catch (e) {\r\n          // Show the user a toast message or notification that something went wrong while compressing file\r\n          alert('File size must be less than 20MB');\r\n          console.log('Error in compress = ', e);\r\n        }\r\n        setShowImageFlag(true);\r\n        // console.log('Image flag ', showImageFlag);\r\n        // console.log('View Image ', viewImage);\r\n      }\r\n    };\r\n    if (fileUpload) reader.readAsDataURL(fileUpload);\r\n  };\r\n\r\n  const getFormData = (object) =>\r\n    Object.keys(object).reduce((formData, key) => {\r\n      formData.append(key, object[key]);\r\n      return formData;\r\n    }, new FormData());\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const form_data = getFormData(formData);\r\n    form_data.append('file', file);\r\n    if (showImageFlag) form_data.append('viewImage', viewImage);\r\n    else form_data.append('viewImage', image);\r\n    form_data.append('student_type', student_type);\r\n    form_data.append('job_type', job_type);\r\n    form_data.append('specialization_type', specialization_type);\r\n    console.log('Form Data = ', form_data);\r\n    updateProfile(user._id.$oid, { form_data });\r\n    //console.log('Return Value = ', returnValue);\r\n  };\r\n  \r\n  return (\r\n    <Fragment>\r\n      {user !== null ? (\r\n        <Fragment>\r\n          <div className='container-fluid'>\r\n            <div className='d-sm-flex align-items-center justify-content-between mb-4'>\r\n              <h1 className='h3 mb-0 text-gray-800'>Profile</h1>\r\n            </div>\r\n            <div id='profile-view' className='row'>\r\n              <div className='col-sm-12 col-md-6 col-lg-9'>\r\n                <div id='profile-image-card' className='common-card'>\r\n                  {userEmail === ADMIN || !isSearch ? (\r\n                    <Link\r\n                      to={{\r\n                        pathname: '/profile',\r\n                        state: {\r\n                                    id: user._id.$oid,\r\n                                  },\r\n                      }}\r\n                      className='pen picture-pen'\r\n                      data-toggle='modal'\r\n                      data-target='#myModal'\r\n                    >\r\n                      <i className='fas fa-camera'></i>\r\n                    </Link>\r\n                  ) : null}\r\n                  <div id='profile-image'>\r\n                    <div id='profile-image-container'> \r\n                    <Image cloudName=\"daf1cgy1c\" publicId={IMAGEURL+image}/>\r\n                    {/* <img src={window.location.origin+'../api/image/HM0010701-F.jpg'} alt='profile' /> */}\r\n                      {/* <img src={'F:/Coursera/React_Flask/SocialNetwork/frontend/api/image/garden-festival.jpg'} alt='profile' /> \r\n                      <img src={' http://127.0.0.1:8080/image/garden-festival.jpg'} alt='profile' />  */}\r\n                      <h6>{user.name}</h6>\r\n                    </div>\r\n                    {!isSearch ? (\r\n                      <Link to='/profile' className='profile-add-link'>\r\n                        Add Contact\r\n                      </Link>\r\n                    ) : (\r\n                      <Link\r\n                        to='/profile'\r\n                        className='profile-add-link'\r\n                        style={{ cursor: 'default' }}\r\n                        onClick={(event) => event.preventDefault()}\r\n                      >\r\n                        Add Contact\r\n                      </Link>\r\n                    )}\r\n                    {!isSearch ? (\r\n                      <Link to='/profile' className='profile-message-link'>\r\n                        Message\r\n                      </Link>\r\n                    ) : (\r\n                      <Link\r\n                        to='/profile'\r\n                        className='profile-message-link'\r\n                        style={{ cursor: 'default' }}\r\n                        onClick={(event) => event.preventDefault()}\r\n                      >\r\n                        Message\r\n                      </Link>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className='common-card'>\r\n                  <h5>Personal Info</h5>\r\n                  {!isSearch ? (\r\n                    <Link\r\n                      to='/profile'\r\n                      className='pen'\r\n                      data-toggle='modal'\r\n                      data-target='#myModal'\r\n                    >\r\n                      <i className='fas fa-pen'></i>\r\n                    </Link>\r\n                  ) : null}\r\n                  <p>\r\n                    <label>Name</label> {user.name}\r\n                  </p>\r\n                  <p>\r\n                    <label>Email</label> {user.email}\r\n                  </p>\r\n                  <p>\r\n                    <label>Phone</label> {user.phone}\r\n                  </p>\r\n                </div>\r\n                <div className='common-card'>\r\n                  <h5>User Type</h5>\r\n                  {!isSearch ? (\r\n                    <Link\r\n                      to='/profile'\r\n                      className='pen'\r\n                      data-toggle='modal'\r\n                      data-target='#myModal'\r\n                    >\r\n                      <i className='fas fa-pen'></i>\r\n                    </Link>\r\n                  ) : null}\r\n                  <p>\r\n                    <label>User Category</label>\r\n                    {user.user_category}\r\n                  </p>\r\n                  <p>\r\n                    <label>Job</label>\r\n                    {user.job_type}\r\n                  </p>\r\n                  <p>\r\n                    <label>Specialization</label>\r\n                    {user.specialization_type}\r\n                  </p>\r\n                </div>\r\n                <div className='common-card'>\r\n                  <h5>Other Info</h5>\r\n                  {!isSearch ? (\r\n                    <Link\r\n                      to='/profile'\r\n                      className='pen'\r\n                      data-toggle='modal'\r\n                      data-target='#myModal'\r\n                    >\r\n                      <i className='fas fa-pen'></i>\r\n                    </Link>\r\n                  ) : null}\r\n                  <p>\r\n                    <label>Address</label>\r\n                    {user.address}\r\n                  </p>\r\n                  <p>\r\n                    <label>Country</label>\r\n                    {user.country}\r\n                  </p>\r\n                </div>\r\n\r\n                <div className='modal fade' id='myModal'>\r\n                  <div className='modal-dialog modal-dialog-centered'>\r\n                    <div className='modal-content'>\r\n                      <form onSubmit={onSubmit}>\r\n                        <div className='modal-header'>\r\n                          <h4 className='modal-title'>Edit Profile</h4>\r\n                          <button\r\n                            type='button'\r\n                            className='close'\r\n                            data-dismiss='modal'\r\n                          >\r\n                            &times;\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className='modal-body'>\r\n                          <fieldset>\r\n                            <legend>Name *</legend>\r\n                            <div className='form-group'>\r\n                              <input\r\n                                type='text'\r\n                                className='form-control'\r\n                                placeholder='Enter First Name'\r\n                                id='firstname'\r\n                                name='firstname'\r\n                                value={firstname}\r\n                                onChange={onChange}\r\n                              />\r\n                            </div>\r\n                            <div className='form-group'>\r\n                              <input\r\n                                type='text'\r\n                                className='form-control'\r\n                                placeholder='Enter Middle Name'\r\n                                id='middlename'\r\n                                name='middlename'\r\n                                value={middlename}\r\n                                onChange={onChange}\r\n                              />\r\n                            </div>\r\n                            <div className='form-group'>\r\n                              <input\r\n                                type='text'\r\n                                className='form-control'\r\n                                placeholder='Enter Last Name'\r\n                                id='lastname'\r\n                                name='lastname'\r\n                                value={lastname}\r\n                                onChange={onChange}\r\n                              />\r\n                            </div>\r\n                          </fieldset>\r\n                          <fieldset>\r\n                            <legend>User Type *</legend>\r\n                            <div className='form-group'>\r\n                              <select\r\n                                name='student_type'\r\n                                className='form-control'\r\n                                value={student_type}\r\n                                onChange={onChange}\r\n                              >\r\n                                <option value=''>Select Student</option>\r\n                                <option value='bsc'>BSc.</option>\r\n                                <option value='msc'>MSc</option>\r\n                                <option value='phd'>PhD</option>\r\n                              </select>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                              <select\r\n                                name='job_type'\r\n                                className='form-control'\r\n                                value={job_type}\r\n                                onChange={onChange}\r\n                              >\r\n                                <option value=''>Select Job</option>\r\n                                <option value='job1'>Job 1</option>\r\n                                <option value='job2'>Job 2</option>\r\n                                <option value='job3'>Job 3</option>\r\n                              </select>\r\n                            </div>\r\n                            {/* <div className='form-group'>\r\n                              <select\r\n                                name='specialization_type'\r\n                                className='form-control'\r\n                                value={specialization_type}\r\n                                onChange={onChange}\r\n                              >\r\n                                <option value=''>Select Specialization</option>\r\n                                <option value='1'>Option1</option>\r\n                                <option value='2'>Option2</option>\r\n                                <option value='3'>Option3</option>\r\n                              </select>\r\n                            </div> */}\r\n                          </fieldset>\r\n                          <div className='form-group'>\r\n                            <label htmlFor='email'>Email Address *</label>\r\n                            <input\r\n                              type='email'\r\n                              className='form-control'\r\n                              placeholder='Enter email'\r\n                              id='email'\r\n                              name='email'\r\n                              value={email}\r\n                              onChange={onChange}\r\n                            />\r\n                          </div>\r\n                          <div className='form-group'>\r\n                            <label htmlFor='name'>Phone</label>\r\n                            <input\r\n                              type='text'\r\n                              className='form-control'\r\n                              placeholder='Enter Phone'\r\n                              id='phone'\r\n                              name='phone'\r\n                              value={phone}\r\n                              onChange={onChange}\r\n                            />\r\n                          </div>\r\n                          <div className='form-group'>\r\n                            <label htmlFor='name'>Address</label>\r\n                            <input\r\n                              type='text'\r\n                              className='form-control'\r\n                              placeholder='Enter Address'\r\n                              id='address'\r\n                              name='address'\r\n                              value={address}\r\n                              onChange={onChange}\r\n                            />\r\n                          </div>\r\n                          {/* <div className='form-group'>\r\n                            <label htmlFor='name'>Country:</label>\r\n                            <select\r\n                              id='country'\r\n                              name='country'\r\n                              className='form-control'\r\n                              value={country}\r\n                              onChange={onChange}\r\n                            >\r\n                              <option value=''>Select Country</option>\r\n                              <option value='Afghanistan'>Afghanistan</option>\r\n                              <option value='Åland Islands'>\r\n                                Åland Islands\r\n                              </option>\r\n                              <option value='Albania'>Albania</option>\r\n                              <option value='Algeria'>Algeria</option>\r\n                              <option value='American Samoa'>\r\n                                American Samoa\r\n                              </option>\r\n                              <option value='Andorra'>Andorra</option>\r\n                              <option value='Angola'>Angola</option>\r\n                              <option value='Anguilla'>Anguilla</option>\r\n                              <option value='Antarctica'>Antarctica</option>\r\n                              <option value='Antigua and Barbuda'>\r\n                                Antigua and Barbuda\r\n                              </option>\r\n                              <option value='Argentina'>Argentina</option>\r\n                              <option value='Armenia'>Armenia</option>\r\n                              <option value='Aruba'>Aruba</option>\r\n                              <option value='Australia'>Australia</option>\r\n                              <option value='Austria'>Austria</option>\r\n                              <option value='Azerbaijan'>Azerbaijan</option>\r\n                              <option value='Bahamas'>Bahamas</option>\r\n                              <option value='Bahrain'>Bahrain</option>\r\n                              <option value='Bangladesh'>Bangladesh</option>\r\n                              <option value='Barbados'>Barbados</option>\r\n                              <option value='Belarus'>Belarus</option>\r\n                              <option value='Belgium'>Belgium</option>\r\n                              <option value='Belize'>Belize</option>\r\n                              <option value='Benin'>Benin</option>\r\n                              <option value='Bermuda'>Bermuda</option>\r\n                              <option value='Bhutan'>Bhutan</option>\r\n                              <option value='Bolivia'>Bolivia</option>\r\n                              <option value='Bosnia and Herzegovina'>\r\n                                Bosnia and Herzegovina\r\n                              </option>\r\n                              <option value='Botswana'>Botswana</option>\r\n                              <option value='Bouvet Island'>\r\n                                Bouvet Island\r\n                              </option>\r\n                              <option value='Brazil'>Brazil</option>\r\n                              <option value='British Indian Ocean Territory'>\r\n                                British Indian Ocean Territory\r\n                              </option>\r\n                              <option value='Brunei Darussalam'>\r\n                                Brunei Darussalam\r\n                              </option>\r\n                              <option value='Bulgaria'>Bulgaria</option>\r\n                              <option value='Burkina Faso'>Burkina Faso</option>\r\n                              <option value='Burundi'>Burundi</option>\r\n                              <option value='Cambodia'>Cambodia</option>\r\n                              <option value='Cameroon'>Cameroon</option>\r\n                              <option value='Canada'>Canada</option>\r\n                              <option value='Cape Verde'>Cape Verde</option>\r\n                              <option value='Cayman Islands'>\r\n                                Cayman Islands\r\n                              </option>\r\n                              <option value='Central African Republic'>\r\n                                Central African Republic\r\n                              </option>\r\n                              <option value='Chad'>Chad</option>\r\n                              <option value='Chile'>Chile</option>\r\n                              <option value='China'>China</option>\r\n                              <option value='Christmas Island'>\r\n                                Christmas Island\r\n                              </option>\r\n                              <option value='Cocos (Keeling) Islands'>\r\n                                Cocos (Keeling) Islands\r\n                              </option>\r\n                              <option value='Colombia'>Colombia</option>\r\n                              <option value='Comoros'>Comoros</option>\r\n                              <option value='Congo'>Congo</option>\r\n                              <option value='Congo, The Democratic Republic of The'>\r\n                                Congo, The Democratic Republic of The\r\n                              </option>\r\n                              <option value='Cook Islands'>Cook Islands</option>\r\n                              <option value='Costa Rica'>Costa Rica</option>\r\n                              <option value=\"Cote D'ivoire\">\r\n                                Cote D'ivoire\r\n                              </option>\r\n                              <option value='Croatia'>Croatia</option>\r\n                              <option value='Cuba'>Cuba</option>\r\n                              <option value='Cyprus'>Cyprus</option>\r\n                              <option value='Czech Republic'>\r\n                                Czech Republic\r\n                              </option>\r\n                              <option value='Denmark'>Denmark</option>\r\n                              <option value='Djibouti'>Djibouti</option>\r\n                              <option value='Dominica'>Dominica</option>\r\n                              <option value='Dominican Republic'>\r\n                                Dominican Republic\r\n                              </option>\r\n                              <option value='Ecuador'>Ecuador</option>\r\n                              <option value='Egypt'>Egypt</option>\r\n                              <option value='El Salvador'>El Salvador</option>\r\n                              <option value='Equatorial Guinea'>\r\n                                Equatorial Guinea\r\n                              </option>\r\n                              <option value='Eritrea'>Eritrea</option>\r\n                              <option value='Estonia'>Estonia</option>\r\n                              <option value='Ethiopia'>Ethiopia</option>\r\n                              <option value='Falkland Islands (Malvinas)'>\r\n                                Falkland Islands (Malvinas)\r\n                              </option>\r\n                              <option value='Faroe Islands'>\r\n                                Faroe Islands\r\n                              </option>\r\n                              <option value='Fiji'>Fiji</option>\r\n                              <option value='Finland'>Finland</option>\r\n                              <option value='France'>France</option>\r\n                              <option value='French Guiana'>\r\n                                French Guiana\r\n                              </option>\r\n                              <option value='French Polynesia'>\r\n                                French Polynesia\r\n                              </option>\r\n                              <option value='French Southern Territories'>\r\n                                French Southern Territories\r\n                              </option>\r\n                              <option value='Gabon'>Gabon</option>\r\n                              <option value='Gambia'>Gambia</option>\r\n                              <option value='Georgia'>Georgia</option>\r\n                              <option value='Germany'>Germany</option>\r\n                              <option value='Ghana'>Ghana</option>\r\n                              <option value='Gibraltar'>Gibraltar</option>\r\n                              <option value='Greece'>Greece</option>\r\n                              <option value='Greenland'>Greenland</option>\r\n                              <option value='Grenada'>Grenada</option>\r\n                              <option value='Guadeloupe'>Guadeloupe</option>\r\n                              <option value='Guam'>Guam</option>\r\n                              <option value='Guatemala'>Guatemala</option>\r\n                              <option value='Guernsey'>Guernsey</option>\r\n                              <option value='Guinea'>Guinea</option>\r\n                              <option value='Guinea-bissau'>\r\n                                Guinea-bissau\r\n                              </option>\r\n                              <option value='Guyana'>Guyana</option>\r\n                              <option value='Haiti'>Haiti</option>\r\n                              <option value='Heard Island and Mcdonald Islands'>\r\n                                Heard Island and Mcdonald Islands\r\n                              </option>\r\n                              <option value='Holy See (Vatican City State)'>\r\n                                Holy See (Vatican City State)\r\n                              </option>\r\n                              <option value='Honduras'>Honduras</option>\r\n                              <option value='Hong Kong'>Hong Kong</option>\r\n                              <option value='Hungary'>Hungary</option>\r\n                              <option value='Iceland'>Iceland</option>\r\n                              <option value='India'>India</option>\r\n                              <option value='Indonesia'>Indonesia</option>\r\n                              <option value='Iran, Islamic Republic of'>\r\n                                Iran, Islamic Republic of\r\n                              </option>\r\n                              <option value='Iraq'>Iraq</option>\r\n                              <option value='Ireland'>Ireland</option>\r\n                              <option value='Isle of Man'>Isle of Man</option>\r\n                              <option value='Israel'>Israel</option>\r\n                              <option value='Italy'>Italy</option>\r\n                              <option value='Jamaica'>Jamaica</option>\r\n                              <option value='Japan'>Japan</option>\r\n                              <option value='Jersey'>Jersey</option>\r\n                              <option value='Jordan'>Jordan</option>\r\n                              <option value='Kazakhstan'>Kazakhstan</option>\r\n                              <option value='Kenya'>Kenya</option>\r\n                              <option value='Kiribati'>Kiribati</option>\r\n                              <option value=\"Korea, Democratic People's Republic of\">\r\n                                Korea, Democratic People's Republic of\r\n                              </option>\r\n                              <option value='Korea, Republic of'>\r\n                                Korea, Republic of\r\n                              </option>\r\n                              <option value='Kuwait'>Kuwait</option>\r\n                              <option value='Kyrgyzstan'>Kyrgyzstan</option>\r\n                              <option value=\"Lao People's Democratic Republic\">\r\n                                Lao People's Democratic Republic\r\n                              </option>\r\n                              <option value='Latvia'>Latvia</option>\r\n                              <option value='Lebanon'>Lebanon</option>\r\n                              <option value='Lesotho'>Lesotho</option>\r\n                              <option value='Liberia'>Liberia</option>\r\n                              <option value='Libyan Arab Jamahiriya'>\r\n                                Libyan Arab Jamahiriya\r\n                              </option>\r\n                              <option value='Liechtenstein'>\r\n                                Liechtenstein\r\n                              </option>\r\n                              <option value='Lithuania'>Lithuania</option>\r\n                              <option value='Luxembourg'>Luxembourg</option>\r\n                              <option value='Macao'>Macao</option>\r\n                              <option value='Macedonia, The Former Yugoslav Republic of'>\r\n                                Macedonia, The Former Yugoslav Republic of\r\n                              </option>\r\n                              <option value='Madagascar'>Madagascar</option>\r\n                              <option value='Malawi'>Malawi</option>\r\n                              <option value='Malaysia'>Malaysia</option>\r\n                              <option value='Maldives'>Maldives</option>\r\n                              <option value='Mali'>Mali</option>\r\n                              <option value='Malta'>Malta</option>\r\n                              <option value='Marshall Islands'>\r\n                                Marshall Islands\r\n                              </option>\r\n                              <option value='Martinique'>Martinique</option>\r\n                              <option value='Mauritania'>Mauritania</option>\r\n                              <option value='Mauritius'>Mauritius</option>\r\n                              <option value='Mayotte'>Mayotte</option>\r\n                              <option value='Mexico'>Mexico</option>\r\n                              <option value='Micronesia, Federated States of'>\r\n                                Micronesia, Federated States of\r\n                              </option>\r\n                              <option value='Moldova, Republic of'>\r\n                                Moldova, Republic of\r\n                              </option>\r\n                              <option value='Monaco'>Monaco</option>\r\n                              <option value='Mongolia'>Mongolia</option>\r\n                              <option value='Montenegro'>Montenegro</option>\r\n                              <option value='Montserrat'>Montserrat</option>\r\n                              <option value='Morocco'>Morocco</option>\r\n                              <option value='Mozambique'>Mozambique</option>\r\n                              <option value='Myanmar'>Myanmar</option>\r\n                              <option value='Namibia'>Namibia</option>\r\n                              <option value='Nauru'>Nauru</option>\r\n                              <option value='Nepal'>Nepal</option>\r\n                              <option value='Netherlands'>Netherlands</option>\r\n                              <option value='Netherlands Antilles'>\r\n                                Netherlands Antilles\r\n                              </option>\r\n                              <option value='New Caledonia'>\r\n                                New Caledonia\r\n                              </option>\r\n                              <option value='New Zealand'>New Zealand</option>\r\n                              <option value='Nicaragua'>Nicaragua</option>\r\n                              <option value='Niger'>Niger</option>\r\n                              <option value='Nigeria'>Nigeria</option>\r\n                              <option value='Niue'>Niue</option>\r\n                              <option value='Norfolk Island'>\r\n                                Norfolk Island\r\n                              </option>\r\n                              <option value='Northern Mariana Islands'>\r\n                                Northern Mariana Islands\r\n                              </option>\r\n                              <option value='Norway'>Norway</option>\r\n                              <option value='Oman'>Oman</option>\r\n                              <option value='Pakistan'>Pakistan</option>\r\n                              <option value='Palau'>Palau</option>\r\n                              <option value='Palestinian Territory, Occupied'>\r\n                                Palestinian Territory, Occupied\r\n                              </option>\r\n                              <option value='Panama'>Panama</option>\r\n                              <option value='Papua New Guinea'>\r\n                                Papua New Guinea\r\n                              </option>\r\n                              <option value='Paraguay'>Paraguay</option>\r\n                              <option value='Peru'>Peru</option>\r\n                              <option value='Philippines'>Philippines</option>\r\n                              <option value='Pitcairn'>Pitcairn</option>\r\n                              <option value='Poland'>Poland</option>\r\n                              <option value='Portugal'>Portugal</option>\r\n                              <option value='Puerto Rico'>Puerto Rico</option>\r\n                              <option value='Qatar'>Qatar</option>\r\n                              <option value='Reunion'>Reunion</option>\r\n                              <option value='Romania'>Romania</option>\r\n                              <option value='Russian Federation'>\r\n                                Russian Federation\r\n                              </option>\r\n                              <option value='Rwanda'>Rwanda</option>\r\n                              <option value='Saint Helena'>Saint Helena</option>\r\n                              <option value='Saint Kitts and Nevis'>\r\n                                Saint Kitts and Nevis\r\n                              </option>\r\n                              <option value='Saint Lucia'>Saint Lucia</option>\r\n                              <option value='Saint Pierre and Miquelon'>\r\n                                Saint Pierre and Miquelon\r\n                              </option>\r\n                              <option value='Saint Vincent and The Grenadines'>\r\n                                Saint Vincent and The Grenadines\r\n                              </option>\r\n                              <option value='Samoa'>Samoa</option>\r\n                              <option value='San Marino'>San Marino</option>\r\n                              <option value='Sao Tome and Principe'>\r\n                                Sao Tome and Principe\r\n                              </option>\r\n                              <option value='Saudi Arabia'>Saudi Arabia</option>\r\n                              <option value='Senegal'>Senegal</option>\r\n                              <option value='Serbia'>Serbia</option>\r\n                              <option value='Seychelles'>Seychelles</option>\r\n                              <option value='Sierra Leone'>Sierra Leone</option>\r\n                              <option value='Singapore'>Singapore</option>\r\n                              <option value='Slovakia'>Slovakia</option>\r\n                              <option value='Slovenia'>Slovenia</option>\r\n                              <option value='Solomon Islands'>\r\n                                Solomon Islands\r\n                              </option>\r\n                              <option value='Somalia'>Somalia</option>\r\n                              <option value='South Africa'>South Africa</option>\r\n                              <option value='South Georgia and The South Sandwich Islands'>\r\n                                South Georgia and The South Sandwich Islands\r\n                              </option>\r\n                              <option value='Spain'>Spain</option>\r\n                              <option value='Sri Lanka'>Sri Lanka</option>\r\n                              <option value='Sudan'>Sudan</option>\r\n                              <option value='Suriname'>Suriname</option>\r\n                              <option value='Svalbard and Jan Mayen'>\r\n                                Svalbard and Jan Mayen\r\n                              </option>\r\n                              <option value='Swaziland'>Swaziland</option>\r\n                              <option value='Sweden'>Sweden</option>\r\n                              <option value='Switzerland'>Switzerland</option>\r\n                              <option value='Syrian Arab Republic'>\r\n                                Syrian Arab Republic\r\n                              </option>\r\n                              <option value='Taiwan, Province of China'>\r\n                                Taiwan, Province of China\r\n                              </option>\r\n                              <option value='Tajikistan'>Tajikistan</option>\r\n                              <option value='Tanzania, United Republic of'>\r\n                                Tanzania, United Republic of\r\n                              </option>\r\n                              <option value='Thailand'>Thailand</option>\r\n                              <option value='Timor-leste'>Timor-leste</option>\r\n                              <option value='Togo'>Togo</option>\r\n                              <option value='Tokelau'>Tokelau</option>\r\n                              <option value='Tonga'>Tonga</option>\r\n                              <option value='Trinidad and Tobago'>\r\n                                Trinidad and Tobago\r\n                              </option>\r\n                              <option value='Tunisia'>Tunisia</option>\r\n                              <option value='Turkey'>Turkey</option>\r\n                              <option value='Turkmenistan'>Turkmenistan</option>\r\n                              <option value='Turks and Caicos Islands'>\r\n                                Turks and Caicos Islands\r\n                              </option>\r\n                              <option value='Tuvalu'>Tuvalu</option>\r\n                              <option value='Uganda'>Uganda</option>\r\n                              <option value='Ukraine'>Ukraine</option>\r\n                              <option value='United Arab Emirates'>\r\n                                United Arab Emirates\r\n                              </option>\r\n                              <option value='United Kingdom'>\r\n                                United Kingdom\r\n                              </option>\r\n                              <option value='United States'>\r\n                                United States\r\n                              </option>\r\n                              <option value='United States Minor Outlying Islands'>\r\n                                United States Minor Outlying Islands\r\n                              </option>\r\n                              <option value='Uruguay'>Uruguay</option>\r\n                              <option value='Uzbekistan'>Uzbekistan</option>\r\n                              <option value='Vanuatu'>Vanuatu</option>\r\n                              <option value='Venezuela'>Venezuela</option>\r\n                              <option value='Viet Nam'>Viet Nam</option>\r\n                              <option value='Virgin Islands, British'>\r\n                                Virgin Islands, British\r\n                              </option>\r\n                              <option value='Virgin Islands, U.S.'>\r\n                                Virgin Islands, U.S.\r\n                              </option>\r\n                              <option value='Wallis and Futuna'>\r\n                                Wallis and Futuna\r\n                              </option>\r\n                              <option value='Western Sahara'>\r\n                                Western Sahara\r\n                              </option>\r\n                              <option value='Yemen'>Yemen</option>\r\n                              <option value='Zambia'>Zambia</option>\r\n                              <option value='Zimbabwe'>Zimbabwe</option>\r\n                            </select>\r\n                          </div> */}\r\n                          <div className='form-group'>\r\n                            <label htmlFor='name'>Profile Picture:</label>\r\n                            <input\r\n                              type='file'\r\n                              className='custom-select-input'\r\n                              id='exampleFormControlFile1'\r\n                              accept='image/*'\r\n                              onChange={imageHandler}\r\n                            />\r\n                            <div\r\n                              id='modal-profile-picture'\r\n                              className='text-center'\r\n                            >\r\n                              <img\r\n                                src={showImageFlag === true ? viewImage :  IMAGEURL+image}\r\n                                alt='profile'\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <fieldset>\r\n                            <legend>Referred By *</legend>\r\n                            <div className='form-group'>\r\n                              <input\r\n                                type='text'\r\n                                className='form-control'\r\n                                placeholder='Enter Name'\r\n                                name='referrer_name'\r\n                                value={referrer_name}\r\n                                onChange={onChange}\r\n                              />\r\n                            </div>\r\n                            <div className='form-group'>\r\n                              <input\r\n                                type='email'\r\n                                className='form-control'\r\n                                placeholder='Enter Email'\r\n                                name='referrer_email'\r\n                                value={referrer_email}\r\n                                onChange={onChange}\r\n                              />\r\n                            </div>\r\n                          </fieldset>\r\n                          <Alert />\r\n                        </div>\r\n\r\n                        <div className='modal-footer'>\r\n                          <button\r\n                            className='btn btn-danger'\r\n                            type='button'\r\n                            data-dismiss='modal'\r\n                          >\r\n                            Close\r\n                          </button>\r\n                          <button type='submit' className='btn btn-secondary'>\r\n                            Save\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Advertisement />\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nProfilePage.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  updateProfile: PropTypes.func.isRequired,\r\n  loadUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { loadUser, updateProfile,getAllUsers })(\r\n  ProfilePage\r\n);\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Advertisement.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\ForgotPassword.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\ProfileSearchView.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\NamesContainer.js",[],["279","280"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\Name.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\file.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\file.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\ResetPassword.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\HomePage.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\advertisement\\ImageSlider.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\advertisement\\SquareSlider.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\TopSidebar.js",["281"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n//import { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { logout } from '../../actions/auth';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from 'autosuggest-highlight/match';\r\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse';\r\nimport Pages from './Pages';\r\nimport Footer from './Footer';\r\nimport Alert from '../layout/Alert';\r\nconst ADMIN = process.env.REACT_APP_ADMIN;\r\nconst IMAGEURL = process.env.REACT_APP_CLOUDINARY;\r\n\r\nconst TopSidebar = ({ props, auth: { user, allUsers }, logout }) => {\r\n  const [value, setValue] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [addClass, setAddClass] = useState(false);\r\n  const [stopCondition, setStopCondition] = useState(true);\r\n  // useEffect(() => {\r\n  //     if(window.innerWidth > 767) {\r\n  //         setSideToggle(true);\r\n  //     }\r\n  //     else {\r\n  //         setSideToggle(false);\r\n  //     }\r\n  // }, [])\r\n  // console.log('Toggg', sideToggle);\r\n  const toggleClass = () => {\r\n    //console.log('Tobbar addclass before set ', addClass);\r\n    setAddClass(!addClass);\r\n    //setSideToggle(!sideToggle);\r\n    //toggleCssClass(addClass);\r\n    //console.log('Tobbar addclass after set ', addClass);\r\n  };\r\n  if (window.innerWidth < 767) {\r\n    if (stopCondition) {\r\n      //console.log('Calling window', addClass);\r\n      setAddClass(!addClass);\r\n      setStopCondition(false);\r\n    }\r\n  }\r\n  var pendinFriend = [];\r\n  pendinFriend = allUsers.reduce(function (filtered, option) {\r\n    var matchFriend = [];\r\n    if (user !== null) {\r\n      if(user.hasOwnProperty('friend_pending')){\r\n        matchFriend = user.friend_pending.filter(\r\n          (friend) => friend.$id.$oid === option._id.$oid\r\n        );\r\n        }\r\n    }\r\n    if (matchFriend.length > 0) {\r\n      filtered.push(option);\r\n    }\r\n    return filtered;\r\n  }, []);\r\n  function escapeRegexCharacters(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n  }\r\n  function getSuggestions(value) {\r\n    const escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n    if (escapedValue === '') {\r\n      return [];\r\n    }\r\n\r\n    const regex = new RegExp('\\\\b' + escapedValue, 'i');\r\n\r\n    return allUsers.filter((user) => regex.test(getSuggestionValue(user)));\r\n  }\r\n\r\n  function getSuggestionValue(suggestion) {\r\n    return `${suggestion.firstname} ${suggestion.middlename} ${suggestion.lastname}`;\r\n  }\r\n\r\n  function renderSuggestion(suggestion, { query }) {\r\n    const suggestionText = `${suggestion.firstname} ${suggestion.middlename} ${suggestion.lastname}`;\r\n    const matches = AutosuggestHighlightMatch(suggestionText, query);\r\n    const parts = AutosuggestHighlightParse(suggestionText, matches);\r\n    return (\r\n      <span className='suggestion-content'>\r\n        <img\r\n          src={IMAGEURL+suggestion.image}\r\n          alt='user'\r\n          className='user-img-profile rounded-circle'\r\n        />\r\n        <span className='name'>\r\n          <Link\r\n            to={{\r\n              pathname: '/profile',\r\n              state: {\r\n                id: suggestion._id.$oid,\r\n              },\r\n            }}\r\n          >\r\n            {parts.map((part, index) => {\r\n              const className = part.highlight ? 'highlight' : null;\r\n              return (\r\n                <span className={className} key={index}>\r\n                  {part.text}\r\n                </span>\r\n              );\r\n            })}\r\n          </Link>\r\n        </span>\r\n      </span>\r\n    );\r\n  }\r\n  const onChange = (event, { newValue, method }) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(value));\r\n  };\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const submitSearchData = async (e) => {\r\n    e.preventDefault();\r\n    let userArrayData = allUsers.filter(\r\n      (user) => user.name.toLowerCase() === value.toLowerCase()\r\n    );\r\n    let userData = Object.assign({}, userArrayData[0]);\r\n    //console.log('User in search = ', userData)\r\n    if (value === '') alert('User input search data is not given');\r\n    if (userArrayData.length > 0) {\r\n      return (\r\n        <Link\r\n          to={{\r\n            pathname: '/profile',\r\n            state: {\r\n              id: userData._id.$oid,\r\n            },\r\n          }}\r\n        >\r\n          {' '}\r\n          {value}{' '}\r\n        </Link>\r\n      );\r\n    } else if (value !== '') {\r\n      alert('Searching user is not found');\r\n    }\r\n  };\r\n  const inputProps = {\r\n    placeholder: 'Search for...',\r\n    value,\r\n    onChange: onChange,\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <ul\r\n        className={`navbar-nav bgGradientPrimary sidebar sidebar-dark accordion \r\n                        ${addClass ? 'toggled' : ''}`}\r\n        id='accordionSidebar'\r\n      >\r\n        <Link\r\n          to={{\r\n            pathname: '/dashboard',\r\n            state: {\r\n              showMyPost: false,\r\n            },\r\n          }}\r\n          id='brand-image'\r\n        >\r\n          <img\r\n            src={process.env.PUBLIC_URL + '/img/AG-LogoFinal.png'}\r\n            alt='Agriculturist Logo'\r\n          />\r\n          {/* <img src=\"../../../public/img/Social_Fish2.png\" alt=\"Agriculturist Logo\"/> */}\r\n          <span>Agriculturist</span>\r\n        </Link>\r\n        <hr className='sidebar-divider my-0' />\r\n        <li className='nav-item active'>\r\n          <Link\r\n            className='nav-link'\r\n            to={{\r\n              pathname: '/dashboard',\r\n              state: {\r\n                showMyPost: false,\r\n              },\r\n            }}\r\n          >\r\n            <i className='fas fa-fw fa-tachometer-alt'></i>\r\n            <span>Dashboard</span>\r\n          </Link>\r\n        </li>\r\n        <li className='nav-item'>\r\n          <a\r\n            className='nav-link collapsed'\r\n            href='/#'\r\n            data-toggle='collapse'\r\n            data-target='#collapsePosts'\r\n            aria-expanded='true'\r\n            aria-controls='collapsePosts'\r\n          >\r\n            <i className='fas fa-user-plus' aria-hidden='true'></i>\r\n            <span>Posts</span>\r\n          </a>\r\n          <div\r\n            id='collapsePosts'\r\n            className='collapse'\r\n            aria-labelledby='headingPages'\r\n            data-parent='#accordionSidebar'\r\n          >\r\n            <div className='bg-white py-2 collapse-inner rounded'>\r\n              <Link\r\n                className='nav-link collapse-item'\r\n                to={{\r\n                  pathname: '/addpost',\r\n                  state: {\r\n                    id: null,\r\n                    edit: false,\r\n                  },\r\n                }}\r\n              >\r\n                Add Post\r\n              </Link>\r\n              <Link\r\n                className='collapse-item'\r\n                to={{\r\n                  pathname: '/dashboard',\r\n                  state: {\r\n                    showMyPost: true,\r\n                  },\r\n                }}\r\n              >\r\n                Show MyPost\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </li>\r\n\r\n        <li className='nav-item'>\r\n          <a\r\n            className='nav-link collapsed'\r\n            href='/#'\r\n            data-toggle='collapse'\r\n            data-target='#collapseFiles'\r\n            aria-expanded='true'\r\n            aria-controls='collapseFiles'\r\n          >\r\n            <i className='fas fa-fw fa-folder'></i>\r\n            <span>Files</span>\r\n          </a>\r\n          <div\r\n            id='collapseFiles'\r\n            className='collapse'\r\n            aria-labelledby='headingPages'\r\n            data-parent='#accordionSidebar'\r\n          >\r\n            <div className='bg-white py-2 collapse-inner rounded'>\r\n              <Link className='collapse-item' to='/upload'>\r\n                Add File\r\n              </Link>\r\n              <Link className='collapse-item' to='/list'>\r\n                Show Files\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </li>\r\n        <li className='nav-item'>\r\n          <a\r\n            className='nav-link collapsed'\r\n            href='/#'\r\n            data-toggle='collapse'\r\n            data-target='#collapseFriends'\r\n            aria-expanded='true'\r\n            aria-controls='collapseFiles'\r\n          >\r\n            <i className='fas fa-user-friends'></i>\r\n            <span>Friends</span>\r\n          </a>\r\n          <div\r\n            id='collapseFriends'\r\n            className='collapse'\r\n            aria-labelledby='headingPages'\r\n            data-parent='#accordionSidebar'\r\n          >\r\n            <div className='bg-white py-2 collapse-inner rounded'>\r\n              <Link className='collapse-item' to='/friends'>\r\n                Add Friends\r\n              </Link>\r\n              <Link className='collapse-item' to='/friendlist'>\r\n                My Friends\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </li>\r\n        {user !== null ? (\r\n          user.email === ADMIN ? (\r\n            <li className='nav-item'>\r\n              <Link to='/userlist' className='nav-link collapsed'>\r\n                <i className='fa fa-user'></i>\r\n                <span>UserList</span>\r\n              </Link>\r\n            </li>\r\n          ) : null\r\n        ) : null}\r\n\r\n        <hr className='sidebar-divider' />\r\n\r\n        <hr className='sidebar-divider d-none d-md-block' />\r\n\r\n        <div className='text-center d-none d-md-inline'>\r\n          <button\r\n            className='rounded-circle border-0'\r\n            id='sidebarToggle'\r\n            onClick={toggleClass}\r\n          ></button>\r\n        </div>\r\n      </ul>\r\n      <div id='content-wrapper' className='d-flex flex-column'>\r\n        <div id='content'>\r\n          <nav\r\n            className='navbar navbar-expand navbar-light \r\n                            bg-white topbar mb-4 static-top shadow'\r\n          >\r\n            <button\r\n              id='sidebarToggleTop'\r\n              onClick={toggleClass}\r\n              className='btn btn-link d-md-none rounded-circle mr-3'\r\n            >\r\n              <i className='fa fa-bars'></i>\r\n            </button>\r\n\r\n            <div id='dashboard-header-dropdown' className='dropdown'>\r\n              <a\r\n                className='btn dropdown-toggle'\r\n                href='/#'\r\n                role='button'\r\n                id='dropdownMenuLink'\r\n                data-toggle='dropdown'\r\n                aria-haspopup='true'\r\n                aria-expanded='false'\r\n              >\r\n                Applications\r\n              </a>\r\n              <div\r\n                className='dropdown-menu dropdown-menu-left shadow animated--fade-in'\r\n                aria-labelledby='dropdownMenuLink'\r\n              >\r\n                <Link\r\n                  className='dropdown-item'\r\n                  to={{\r\n                    pathname: '/dashboard',\r\n                    state: {\r\n                      showMyPost: false,\r\n                    },\r\n                  }}\r\n                >\r\n                  Pages\r\n                </Link>\r\n                <Link\r\n                  className='dropdown-item'\r\n                  to={{\r\n                    pathname: '/dashboard',\r\n                    state: {\r\n                      showMyPost: false,\r\n                    },\r\n                  }}\r\n                >\r\n                  Groups\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n            <form\r\n              className='d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search'\r\n              onSubmit={submitSearchData}\r\n            >\r\n              <div className='input-group'>\r\n                <Autosuggest\r\n                  suggestions={suggestions}\r\n                  onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n                  onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n                  getSuggestionValue={getSuggestionValue}\r\n                  renderSuggestion={renderSuggestion}\r\n                  inputProps={inputProps}\r\n                />\r\n                <div className='input-group-append'>\r\n                  <button className='btn btn-primary' type='submit'>\r\n                    <i className='fas fa-search fa-sm'></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <ul className='navbar-nav ml-auto'>\r\n              <li className='nav-item dropdown no-arrow d-sm-none'>\r\n                <a\r\n                  className='nav-link dropdown-toggle'\r\n                  href='/#'\r\n                  id='searchDropdown'\r\n                  role='button'\r\n                  data-toggle='dropdown'\r\n                  aria-haspopup='true'\r\n                  aria-expanded='false'\r\n                >\r\n                  <i className='fas fa-search fa-fw'></i>\r\n                </a>\r\n                <div\r\n                  className='dropdown-menu dropdown-menu-right p-3 \r\n                                            shadow animated--grow-in'\r\n                  aria-labelledby='searchDropdown'\r\n                >\r\n                  <form\r\n                    className='form-inline mr-auto w-100 navbar-search'\r\n                    onSubmit={submitSearchData}\r\n                  >\r\n                    <div className='input-group'>\r\n                      <Autosuggest\r\n                        suggestions={suggestions}\r\n                        onSuggestionsFetchRequested={\r\n                          onSuggestionsFetchRequested\r\n                        }\r\n                        onSuggestionsClearRequested={\r\n                          onSuggestionsClearRequested\r\n                        }\r\n                        getSuggestionValue={getSuggestionValue}\r\n                        renderSuggestion={renderSuggestion}\r\n                        inputProps={inputProps}\r\n                      />\r\n                      <div className='input-group-append'>\r\n                        <button className='btn btn-primary' type='submit'>\r\n                          <i className='fas fa-search fa-sm'></i>\r\n                        </button>\r\n                      </div>\r\n                      {/* <input type=\"text\" \r\n                                                className=\"form-control bg-light border-0 small\"\r\n                                                placeholder=\"Search for...\" aria-label=\"Search\"\r\n                                                aria-describedby=\"basic-addon2\" /> */}\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </li>\r\n\r\n              <li className='nav-item dropdown no-arrow mx-1'>\r\n                <a\r\n                  className='nav-link dropdown-toggle'\r\n                  href='/#'\r\n                  id='alertsDropdown'\r\n                  role='button'\r\n                  data-toggle='dropdown'\r\n                  aria-haspopup='true'\r\n                  aria-expanded='false'\r\n                >\r\n                  <i className='fas fa-bell fa-fw'></i>\r\n                  <span className='badge badge-danger badge-counter'>\r\n                    {pendinFriend.length > 0 ? pendinFriend.length : null}\r\n                  </span>\r\n                </a>\r\n                {pendinFriend.length > 0 ? (\r\n                  <div\r\n                    className='dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in'\r\n                    aria-labelledby='alertsDropdown'\r\n                  >\r\n                    <h6 className='dropdown-header'>Notification Center</h6>\r\n                    {pendinFriend.length > 0\r\n                      ? pendinFriend.map((pendingUser) => (\r\n                          <Link\r\n                            className='dropdown-item d-flex align-items-center'\r\n                            to=\"/friends\"\r\n                            key={pendingUser._id.$oid}\r\n                          >\r\n                            <div className='mr-3'>\r\n                              <div className='icon-circle bg-primary'>\r\n                                <img\r\n                                  className='img-profile rounded-circle'\r\n                                  src={\r\n                                    pendingUser !== null\r\n                                      ? IMAGEURL+pendingUser.image\r\n                                      : null\r\n                                  }\r\n                                  alt={pendingUser.name}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div>\r\n                              <span className='font-weight-bold'>\r\n                              <span\r\n                              style={{\r\n                                fontSize: 15,\r\n                                fontWeight: 'bold',\r\n                                fontFamily: 'cursive',\r\n                                color: 'green'\r\n                              }}\r\n                            >\r\n                              {pendingUser.name}\r\n                            </span>{' '}\r\n                            wants to be your friend.\r\n                              </span>\r\n                            </div>\r\n                          </Link>\r\n                        ))\r\n                      : null}\r\n                  </div>\r\n                ) : null}\r\n              </li>\r\n\r\n              <li className='nav-item dropdown no-arrow mx-1'>\r\n                <a\r\n                  className='nav-link dropdown-toggle'\r\n                  href='/#'\r\n                  id='messagesDropdown'\r\n                  role='button'\r\n                  data-toggle='dropdown'\r\n                  aria-haspopup='true'\r\n                  aria-expanded='false'\r\n                >\r\n                  <i className='fas fa-envelope fa-fw'></i>\r\n                  <span className='badge badge-danger badge-counter'></span>\r\n                </a>\r\n              </li>\r\n\r\n              <div className='topbar-divider d-none d-sm-block'></div>\r\n\r\n              <li className='nav-item dropdown no-arrow'>\r\n                <a\r\n                  href='/#'\r\n                  className='nav-link dropdown-toggle'\r\n                  id='userDropdown'\r\n                  role='button'\r\n                  data-toggle='dropdown'\r\n                  aria-haspopup='true'\r\n                  aria-expanded='false'\r\n                >\r\n                  <span className='mr-2 d-none d-lg-inline text-gray-600 small'>\r\n                    {user !== null ? user.name : 'UserName'}{' '}\r\n                  </span>\r\n                  <img\r\n                    className='img-profile rounded-circle'\r\n                    src={user !== null ? IMAGEURL+user.image : null}\r\n                    alt='userName'\r\n                  />\r\n                </a>\r\n                <div\r\n                  className='dropdown-menu dropdown-menu-right \r\n                                            shadow animated--grow-in'\r\n                  aria-labelledby='userDropdown'\r\n                >\r\n                  <Link className='dropdown-item' to='/profile'>\r\n                    <i className='fas fa-user fa-sm fa-fw mr-2 text-gray-400'></i>\r\n                    Profile\r\n                  </Link>\r\n                  <div className='dropdown-divider'></div>\r\n                  <a\r\n                    href='/#'\r\n                    className='dropdown-item'\r\n                    data-toggle='modal'\r\n                    data-target='#logoutModal'\r\n                  >\r\n                    <i className='fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400'></i>\r\n                    Logout\r\n                  </a>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          <Alert />\r\n          <Pages props={props} />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n\r\n      {/* {searchUser.length > 0 ? \r\n                        <ListGroup className=\"list-group\">\r\n                            {searchUser.map(user=>(<ListGroupItem key={user.key}><Link to=\"/profile\">{user.name}</Link></ListGroupItem>))}\r\n                        </ListGroup> : null\r\n                    } */}\r\n      <div\r\n        className='modal fade'\r\n        id='logoutModal'\r\n        tabIndex='-1'\r\n        role='dialog'\r\n        aria-labelledby='exampleModalLabel'\r\n        aria-hidden='true'\r\n      >\r\n        <div className='modal-dialog' role='document'>\r\n          <div className='modal-content'>\r\n            <div className='modal-header'>\r\n              <h5 className='modal-title' id='exampleModalLabel'>\r\n                Ready to Leave?\r\n              </h5>\r\n              <button\r\n                className='close'\r\n                type='button'\r\n                data-dismiss='modal'\r\n                aria-label='Close'\r\n              >\r\n                <span aria-hidden='true'>×</span>\r\n              </button>\r\n            </div>\r\n            <div className='modal-body'>\r\n              Select \"Logout\" below if you are ready to end your current\r\n              session.\r\n            </div>\r\n            <div className='modal-footer'>\r\n              <button\r\n                className='btn btn-secondary'\r\n                type='button'\r\n                data-dismiss='modal'\r\n              >\r\n                Cancel\r\n              </button>\r\n              <Link to='/' className='btn btn-primary' onClick={logout}>\r\n                Logout\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div>\r\n                <Modal isOpen={display} toggle={toggle} className=\"suggestion-container\">\r\n                    <ModalHeader toggle={toggle}>Users List</ModalHeader>\r\n                    <ModalBody>\r\n                        hello\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>  */}\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logout })(TopSidebar);\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\ShowAdvertise.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\UserList.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\AddFriend.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\FriendList.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\AddFriendList.js",["282","283"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\friends.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\friends.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\FriendListContainer.js",[],{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":17,"column":13,"nodeType":"290","messageId":"291","endLine":17,"endColumn":18},{"ruleId":"288","severity":1,"message":"292","line":17,"column":20,"nodeType":"290","messageId":"291","endLine":17,"endColumn":28},{"ruleId":"288","severity":1,"message":"293","line":32,"column":56,"nodeType":"290","messageId":"291","endLine":32,"endColumn":61},{"ruleId":"288","severity":1,"message":"294","line":182,"column":27,"nodeType":"290","messageId":"291","endLine":182,"endColumn":41},{"ruleId":"295","severity":1,"message":"296","line":41,"column":37,"nodeType":"297","endLine":41,"endColumn":48},{"ruleId":"284","replacedBy":"298"},{"ruleId":"286","replacedBy":"299"},{"ruleId":"284","replacedBy":"300"},{"ruleId":"286","replacedBy":"301"},{"ruleId":"288","severity":1,"message":"302","line":7,"column":12,"nodeType":"290","messageId":"291","endLine":7,"endColumn":16},{"ruleId":"288","severity":1,"message":"303","line":28,"column":15,"nodeType":"290","messageId":"291","endLine":28,"endColumn":22},{"ruleId":"295","severity":1,"message":"296","line":102,"column":36,"nodeType":"297","endLine":102,"endColumn":47},{"ruleId":"288","severity":1,"message":"304","line":15,"column":10,"nodeType":"290","messageId":"291","endLine":15,"endColumn":20},{"ruleId":"288","severity":1,"message":"305","line":94,"column":5,"nodeType":"290","messageId":"291","endLine":94,"endColumn":12},{"ruleId":"288","severity":1,"message":"294","line":122,"column":17,"nodeType":"290","messageId":"291","endLine":122,"endColumn":31},{"ruleId":"284","replacedBy":"306"},{"ruleId":"286","replacedBy":"307"},{"ruleId":"288","severity":1,"message":"308","line":1,"column":37,"nodeType":"290","messageId":"291","endLine":1,"endColumn":46},{"ruleId":"309","severity":1,"message":"310","line":94,"column":14,"nodeType":"290","messageId":"311","endLine":94,"endColumn":15},{"ruleId":"309","severity":1,"message":"312","line":95,"column":11,"nodeType":"290","messageId":"311","endLine":95,"endColumn":14},"no-native-reassign",["313"],"no-negated-in-lhs",["314"],"no-unused-vars","'email' is assigned a value but never used.","Identifier","unusedVar","'password' is assigned a value but never used.","'reset' is assigned a value but never used.","'compressedFile' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["313"],["314"],["313"],["314"],"'file' is assigned a value but never used.","'urlFile' is assigned a value but never used.","'previewSrc' is assigned a value but never used.","'country' is assigned a value but never used.",["313"],["314"],"'useEffect' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","'obj' is already defined.","no-global-assign","no-unsafe-negation"]