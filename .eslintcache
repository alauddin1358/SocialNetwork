[{"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\index.js":"1","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\App.js":"2","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reportWebVitals.js":"3","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\store.js":"4","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\Login.js":"5","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\Posts.js":"6","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\PostDetail.js":"7","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\Register.js":"8","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Dashboard.js":"9","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\auth.js":"10","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\AddPost.js":"11","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\ImageUpload.js":"12","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\types.js":"13","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Footer.js":"14","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Topbar.js":"15","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Sidebar.js":"16","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\CommentForm.js":"17","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Pages.js":"18","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\post.js":"19","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\CommentItem.js":"20","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\NewPost.js":"21","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\utils\\setAuthToken.js":"22","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\layout\\Spinner.js":"23","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\utils\\formatDate.js":"24","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\index.js":"25","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\PostItem.js":"26","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\auth.js":"27","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\post.js":"28","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\UploadImage.js":"29","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\instance.js":"30","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\routing\\PrivateRoute.js":"31","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\config.js":"32","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\alert.js":"33","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\layout\\Alert.js":"34","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\alert.js":"35","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileHome.js":"36","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\Upload.js":"37","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FilesList.js":"38","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileHeader.js":"39","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileView.js":"40","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\Profile.js":"41","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\ProfilePage.js":"42","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Advertisement.js":"43","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\ForgotPassword.js":"44","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\ProfileSearchView.js":"45","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\NamesContainer.js":"46","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\Name.js":"47","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\file.js":"48","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\file.js":"49","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\ResetPassword.js":"50","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\HomePage.js":"51","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\advertisement\\ImageSlider.js":"52","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\advertisement\\SquareSlider.js":"53","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\TopSidebar.js":"54","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\ShowAdvertise.js":"55","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\UserList.js":"56","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\AddFriend.js":"57","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\FriendList.js":"58","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\AddFriendList.js":"59","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\friends.js":"60","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\friends.js":"61","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\FriendListContainer.js":"62","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\AddFile.js":"63","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\AllFIleViewer.js":"64","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\UserListContainer.js":"65","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FilesListContainer.js":"66","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileViewContainer.js":"67","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\SearchUserList.js":"68","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\SearchUserListContainer.js":"69","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Share\\SharePage.js":"70","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\ShareModal.js":"71","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Share\\SharePageDetail.js":"72","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\PostDeleteModal.js":"73","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\UnfriendModal.js":"74","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Share\\PrivacyPolicy.js":"75","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\FilePostDeleteModal.js":"76"},{"size":564,"mtime":1616294269362,"results":"77","hashOfConfig":"78"},{"size":3607,"mtime":1698059221621,"results":"79","hashOfConfig":"78"},{"size":362,"mtime":499162500000,"results":"80","hashOfConfig":"78"},{"size":449,"mtime":1698432322153,"results":"81","hashOfConfig":"78"},{"size":3628,"mtime":1631338102242,"results":"82","hashOfConfig":"78"},{"size":1218,"mtime":1632322630729,"results":"83","hashOfConfig":"78"},{"size":4506,"mtime":1648285269308,"results":"84","hashOfConfig":"78"},{"size":36461,"mtime":1698817549823,"results":"85","hashOfConfig":"78"},{"size":3584,"mtime":1645813061020,"results":"86","hashOfConfig":"78"},{"size":6612,"mtime":1698432712800,"results":"87","hashOfConfig":"78"},{"size":953,"mtime":1632288559562,"results":"88","hashOfConfig":"78"},{"size":1928,"mtime":1611683479495,"results":"89","hashOfConfig":"90"},{"size":1666,"mtime":1637430148739,"results":"91","hashOfConfig":"78"},{"size":489,"mtime":1616169717444,"results":"92","hashOfConfig":"78"},{"size":15233,"mtime":1644680285524,"results":"93","hashOfConfig":"78"},{"size":7103,"mtime":1636044454338,"results":"94","hashOfConfig":"78"},{"size":1359,"mtime":1616570113559,"results":"95","hashOfConfig":"78"},{"size":3048,"mtime":1648890462060,"results":"96","hashOfConfig":"78"},{"size":8041,"mtime":1645720813541,"results":"97","hashOfConfig":"78"},{"size":4351,"mtime":1630686883586,"results":"98","hashOfConfig":"78"},{"size":7227,"mtime":1645855623347,"results":"99","hashOfConfig":"78"},{"size":461,"mtime":1612108020800,"results":"100","hashOfConfig":"90"},{"size":296,"mtime":1609391760548,"results":"101","hashOfConfig":"78"},{"size":128,"mtime":1611224225690,"results":"102","hashOfConfig":"78"},{"size":275,"mtime":1618767374884,"results":"103","hashOfConfig":"78"},{"size":10956,"mtime":1648890346237,"results":"104","hashOfConfig":"78"},{"size":2265,"mtime":1698432120322,"results":"105","hashOfConfig":"78"},{"size":1889,"mtime":1635984357717,"results":"106","hashOfConfig":"78"},{"size":4866,"mtime":1612296335134,"results":"107","hashOfConfig":"90"},{"size":97,"mtime":1612167076362,"results":"108","hashOfConfig":"78"},{"size":665,"mtime":1613150980353,"results":"109","hashOfConfig":"78"},{"size":248,"mtime":1612115392683,"results":"110","hashOfConfig":"90"},{"size":416,"mtime":1612168001855,"results":"111","hashOfConfig":"78"},{"size":533,"mtime":1612169244118,"results":"112","hashOfConfig":"78"},{"size":352,"mtime":1612167956681,"results":"113","hashOfConfig":"78"},{"size":1392,"mtime":1615353892089,"results":"114","hashOfConfig":"78"},{"size":9162,"mtime":1648273663315,"results":"115","hashOfConfig":"78"},{"size":10517,"mtime":1698896748750,"results":"116","hashOfConfig":"78"},{"size":782,"mtime":1630602903416,"results":"117","hashOfConfig":"78"},{"size":4700,"mtime":1699023691966,"results":"118","hashOfConfig":"78"},{"size":836,"mtime":1698058625792,"results":"119","hashOfConfig":"78"},{"size":33383,"mtime":1698059216208,"results":"120","hashOfConfig":"78"},{"size":11328,"mtime":1629434917614,"results":"121","hashOfConfig":"78"},{"size":2073,"mtime":1615528801975,"results":"122","hashOfConfig":"78"},{"size":3754,"mtime":1614789893333,"results":"123","hashOfConfig":"78"},{"size":309,"mtime":1614406233718,"results":"124","hashOfConfig":"90"},{"size":495,"mtime":1614526862413,"results":"125","hashOfConfig":"90"},{"size":7802,"mtime":1648139904999,"results":"126","hashOfConfig":"78"},{"size":1784,"mtime":1630589809421,"results":"127","hashOfConfig":"78"},{"size":4172,"mtime":1615541770263,"results":"128","hashOfConfig":"78"},{"size":248,"mtime":1630592667578,"results":"129","hashOfConfig":"78"},{"size":1568,"mtime":1629438381224,"results":"130","hashOfConfig":"78"},{"size":1182,"mtime":1629438379037,"results":"131","hashOfConfig":"78"},{"size":22895,"mtime":1644680271725,"results":"132","hashOfConfig":"78"},{"size":4525,"mtime":1632288470598,"results":"133","hashOfConfig":"78"},{"size":3598,"mtime":1632290009480,"results":"134","hashOfConfig":"78"},{"size":785,"mtime":1632288857746,"results":"135","hashOfConfig":"78"},{"size":5246,"mtime":1637632441801,"results":"136","hashOfConfig":"78"},{"size":10387,"mtime":1637777116879,"results":"137","hashOfConfig":"78"},{"size":10305,"mtime":1644679393368,"results":"138","hashOfConfig":"78"},{"size":2023,"mtime":1637627722135,"results":"139","hashOfConfig":"78"},{"size":795,"mtime":1632421551063,"results":"140","hashOfConfig":"78"},{"size":724,"mtime":1632288636075,"results":"141","hashOfConfig":"78"},{"size":399,"mtime":1632243839196,"results":"142","hashOfConfig":"143"},{"size":784,"mtime":1632290006964,"results":"144","hashOfConfig":"78"},{"size":791,"mtime":1632290274991,"results":"145","hashOfConfig":"78"},{"size":805,"mtime":1632322654570,"results":"146","hashOfConfig":"78"},{"size":5119,"mtime":1632502250088,"results":"147","hashOfConfig":"78"},{"size":807,"mtime":1632417816770,"results":"148","hashOfConfig":"78"},{"size":803,"mtime":1643813848929,"results":"149","hashOfConfig":"78"},{"size":2911,"mtime":1637431531023,"results":"150","hashOfConfig":"78"},{"size":2788,"mtime":1645723142729,"results":"151","hashOfConfig":"78"},{"size":1231,"mtime":1645888077003,"results":"152","hashOfConfig":"78"},{"size":2468,"mtime":1637632353694,"results":"153","hashOfConfig":"78"},{"size":7274,"mtime":1643815628897,"results":"154","hashOfConfig":"78"},{"size":1334,"mtime":1645883186047,"results":"155","hashOfConfig":"78"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"1ikv7u6",{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"158"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"158"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"158"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"185"},"e2euwd",{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"158"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"158"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"158"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"185"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"158"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"158"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"158"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"158"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"158"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"158"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"36tojz",{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"158"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"158"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"158"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"158"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"158"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"158"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"158"},"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\index.js",[],["333","334"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\App.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reportWebVitals.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\store.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\Login.js",["335","336"],"import React, { Fragment } from 'react';\r\n//import {Alert} from 'reactstrap';\r\n//import axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n//import { bindActionCreators } from 'redux';\r\nimport { Link, Redirect} from 'react-router-dom';\r\n//import { setAlert } from '../../actions/alert';\r\nimport { login } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nimport Alert from '../layout/Alert';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Login = ({auth:{isAuthenticated, token}, login}) => {\r\n    const { register, handleSubmit, errors, getValues } = useForm({\r\n        mode: 'onTouched',\r\n        });\r\n    const { email, password } = '';\r\n    const registerOptions = {\r\n        password: {\r\n            required: \"Password is required\",\r\n            minLength: {\r\n                value: 6,\r\n                message: \"Password must have at least 6 characters\"\r\n            }\r\n        },\r\n        email: {\r\n            required: \"Email is required\",\r\n            pattern: {\r\n                value: /^(([^<>()[\\]\\\\.,;:!*&$#\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,4}))$/,\r\n                message: \"Enter a valid e-mail address\",\r\n              }\r\n        }\r\n    };\r\n    const onSubmit = async () => {\r\n        const { email, password } = getValues();\r\n        // console.log('Email ',email);\r\n        // console.log('pass', password );\r\n        login(email, password);\r\n        //reset();\r\n        //console.log('IsAuthenticated = ', isAuthenticated);\r\n        \r\n    };\r\n    if (isAuthenticated && token !== null) {\r\n        return <Redirect to={{\r\n            pathname: '/dashboard',\r\n            state: {\r\n                showMyPost: false\r\n            }\r\n        }} />;\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className=\"form-wrapper auth\">\r\n\t\t        <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"text-center\">\t\r\n                        <img src={process.env.PUBLIC_URL + '/img/Agriculturist-logo_150x191.png'} alt=\"logo\" />\r\n                        <h2>\r\n                            <span>Login to Agriculturist</span>\r\n                        </h2>\r\n                    </div> \r\n                    {/* <h2>\r\n                        <span>Log in to Agriculturist</span>\r\n                    </h2> */}\r\n                   \r\n                    <input type=\"text\" \r\n                            name=\"email\" \r\n                            placeholder=\"Enter Email\"\r\n                            ref={register(registerOptions.email)}/>\r\n                     {errors.email && <span className=\"text-danger\">{errors.email.message}</span>}\r\n                    <input type=\"password\" \r\n                            name=\"password\" \r\n                            placeholder=\"Enter Password\"\r\n                            ref={register(registerOptions.password)} />\r\n                    {errors.password && <span className=\"text-danger\">{errors.password.message}</span>}\r\n                    <button>Login</button>\r\n                    <span>Not a user? <Link to=\"/register\">Register Here</Link></span>\r\n                    <span><Link to=\"/forgotpassword\">Forgot Password?</Link></span>\r\n                    <Alert />\r\n\t\t        </form>\r\n\t        </div>\r\n        </Fragment>\r\n    )\r\n}\r\nLogin.propTypes = {\r\n    //setAlert: PropTypes.func.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n  \r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\Posts.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\PostDetail.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\Register.js",["337"],"import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n//import { bindActionCreators } from 'redux';\r\nimport { Link } from 'react-router-dom';\r\n//import { userRegister } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nimport Alert from '../layout/Alert';\r\nimport Compress from \"browser-image-compression\";\r\nimport store from '../../store';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL\r\n  } from '../../actions/types';\r\nimport axios from 'axios';\r\nimport { setAlert } from '../../actions/alert';\r\nconst API = process.env.REACT_APP_API;\r\n\r\nconst Register = ({isAuthenticated}) => {\r\n    const { register, handleSubmit, errors, getValues, reset } = useForm({\r\n        mode: 'onTouched',\r\n        });\r\n    const { password } = getValues();\r\n    const [disable, setDisable] = useState(false);\r\n    const registerOptions = {\r\n        firstname: { \r\n                required: \"Firstname is required\",\r\n                maxLength: {\r\n                value: 20,\r\n                message: \"Firstname consists of maximum 20 characters\"\r\n            } \r\n        },\r\n        middlename: { \r\n            maxLength: {\r\n                value: 20,\r\n                message: \"Middlename consists of maximum 20 characters\"\r\n            }  \r\n        },\r\n        lastname: { \r\n            maxLength: {\r\n            value: 20,\r\n            message: \"Lastname consists of maximum 20 characters\"\r\n            } \r\n        },\r\n\r\n        user_category: {required: \"User Category is required\"},\r\n        email: { \r\n            required: \"Email is required\",\r\n            pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                message: \"Enter a valid e-mail address\",\r\n              }\r\n        },\r\n        password: {\r\n            required: \"Password is required\",\r\n            minLength: {\r\n                value: 6,\r\n                message: \"Password must have at least 6 characters\"\r\n            }\r\n        },\r\n        phone: {\r\n            minLength: {\r\n                value: 6,\r\n                message: \"Phone must have at least 6 characters\"\r\n            },\r\n            maxLength: {\r\n                value: 15,\r\n                message: \"Phone must have maximum 15 characters\"\r\n            },\r\n            // pattern: {\r\n            //     value: /^[0-9]$/,\r\n            //     message: \"Phone number contains only digit\"\r\n            // }\r\n        },\r\n        /*referrer_name: {required: \"Referrer Name is required\"},\r\n        referrer_email: {\r\n            required: \"Referrer Email is required\",\r\n            pattern: {\r\n                value: /^(([^<>()[\\]\\\\.,;:!*&$#\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,4}))$/,\r\n                message: \"Enter a valid e-mail address\",\r\n              }\r\n        } */\r\n    };\r\n    const [file, setFile] = useState('');\r\n    const [image, setImage] = useState('../../img/user-profile.png');\r\n    \r\n    const imageHandler = async (e) => {\r\n        setFile(e.target.files[0]);\r\n        var fileUpload = e.target.files[0];\r\n        console.log(\"Image file \",e.target.files[0]);\r\n        console.log(\"file URL\", URL.createObjectURL(e.target.files[0]));\r\n        if(fileUpload) setImage(URL.createObjectURL(e.target.files[0]));\r\n        //var convertedBlobFile;\r\n        const options = {\r\n            //maxSizeMB: 1.5,\r\n            maxWidth: 300, // the max width of the output image, defaults to 1920px\r\n            maxHeight: 300, // the max height of the output image, defaults to 1920px\r\n            resize: true,\r\n            useWebWorker: true\r\n        }\r\n        \r\n        const reader = new FileReader();\r\n        reader.onload = async () =>{\r\n            if(reader.readyState === 2){\r\n                try{\r\n                    const compressedFile = await Compress(fileUpload, options)\r\n                    //console.log(compressedFile);\r\n                    //processfile(compressedFile, options);\r\n                    // var compressURL = URL.createObjectURL(compressedFile);\r\n                    // console.log('image',compressURL)\r\n                }\r\n                catch(e){\r\n                    // Show the user a toast message or notification that something went wrong while compressing file\r\n                    alert('File size must be less than 20MB');\r\n                    console.log('Error in compress = ',e);\r\n                }\r\n            }\r\n        }\r\n        if(fileUpload) reader.readAsDataURL(fileUpload)\r\n    };\r\n    \r\n    const getFormData = object => Object.keys(object).reduce((formData, key) => {\r\n        formData.append(key, object[key]);\r\n        return formData;\r\n    }, new FormData());\r\n    const onSubmit = async (data) => {\r\n        //alert(data);\r\n        //e.preventDefault();\r\n        //console.log(formData);\r\n        setDisable(true);\r\n        const form_data = getFormData(data);\r\n        //console.log(form_data);\r\n        //alert(JSON.stringify(form_data))\r\n        form_data.append('file', file);\r\n        // form_data.append('image', image);\r\n        //form_data.append('emailconfirm', false);\r\n        form_data.append('job_type','');\r\n        form_data.append('student_type','');\r\n        form_data.append('specialization_type', '');\r\n        //const val = await userRegister({ form_data })\r\n        try {\r\n    \r\n            const res = await axios.post(`${API}/add`, form_data);\r\n            console.log('Users data', res.data);\r\n            if (res.data.result.isError === 'true') {\r\n                store.dispatch({\r\n                    type: REGISTER_FAIL\r\n                });\r\n                store.dispatch(setAlert(res.data.result.message, 'danger'));\r\n            }\r\n            else {\r\n                store.dispatch({\r\n                    type: REGISTER_SUCCESS,\r\n                    payload: res.data\r\n                });\r\n                store.dispatch(setAlert(res.data.result.message, 'success'));\r\n                reset();\r\n                setImage('../../img/user-profile.png');\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Error in registration = \", err);\r\n            store.dispatch(setAlert('Server Error', 'danger'));\r\n            // const errors = err.response;\r\n            // console.log(errors);\r\n            store.dispatch({\r\n                type: REGISTER_FAIL\r\n            });\r\n        }\r\n        setDisable(false);\r\n    };\r\n    \r\n    // if(isAuthenticated) {\r\n    //     return <Redirect to=\"/login\" />\r\n    // }\r\n    return (\r\n        <div>\r\n            <div className=\"form-wrapper auth\">\r\n\t\t        <form onSubmit={handleSubmit(onSubmit)} id=\"registration-form\">\r\n                    {/* <div id=\"brand-image\">\t\r\n                        <img src=\"../../img/fish-logo.png\" alt=\"logo\" />\r\n                    </div> */}\r\n                    <h2>\r\n                        <span>Registration</span>\r\n                    </h2>\r\n                    <div className=\"flex-inline items-3 \">\t\t\r\n                        <label>Name: *</label>\t\r\n                        <div className=\"flex-inline \">\r\n                            <input type=\"text\" \r\n                                    name=\"firstname\" \r\n                                    placeholder=\"Enter First Name\"\r\n                                    ref={register(registerOptions.firstname)}\r\n                                      />\r\n                            \r\n                            <input type=\"text\"\r\n                                   name=\"middlename\" \r\n                                   placeholder=\"Enter Middle Name\"\r\n                                   ref={register(registerOptions.middlename)} />\r\n                            <input type=\"text\" \r\n                                   name=\"lastname\" \r\n                                   placeholder=\"Enter Last Name\"\r\n                                   ref={register(registerOptions.lastname)}/>\r\n                        </div>\r\n                    </div>\r\n                    {errors.firstname && <span className=\"text-danger\">{errors.firstname.message}</span>}\r\n                    {errors.middlename && <span className=\"text-danger\">{errors.middlename.message}</span>}\r\n                    {errors.lastname && <span className=\"text-danger\">{errors.lastname.message}</span>}\r\n                    <div className=\"flex-inline items-3\">\r\n                        <label>User Category: *</label>\r\n                        <div className=\"flex-inline\">\r\n                            <div className=\"select-wrapper\">\r\n                                <select name=\"user_category\"\r\n                                        ref={register(registerOptions.user_category)}\r\n                                >\r\n                                    <option value=\"\">Select User Category </option>\r\n                                    <option value=\"agriculture\">Agriculture</option>  \r\n                                    <option value=\"veterinary-science\">Veterinary Science</option>  \r\n                                    <option value=\"animal-husbandry\">Animal Husbandry</option>  \r\n                                    <option value=\"agricultural-economics-rural-sociology\">Agricultural Economics & Rural Sociology</option>  \r\n                                    <option value=\"agricultural-engineering-technology\">Agricultural Engineering & Technology</option>  \r\n                                    <option value=\"fisheries\">Fisheries</option>  \r\n                                    <option value=\"agri-business\">Agri-business</option>  \r\n                                    <option value=\"agro-information-technology\">Agro-information Technology</option>  \r\n                                    <option value=\"agriculture-related-job\">Agriculture Related Job</option>  \r\n                                    <option value=\"student\">Student</option>  \r\n                                </select>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    {errors.user_category && <span className=\"text-danger\">{errors.user_category.message}</span>}\r\n                    <div className=\"flex-inline \">\r\n                        <label>Email: *</label>\r\n                        <input type=\"email\" \r\n                               name=\"email\" \r\n                               placeholder=\"Enter Email\"\r\n                               ref={register(registerOptions.email)} />\r\n                        \r\n                    </div>\r\n                    {errors.email && <span className=\"text-danger\">{errors.email.message}</span>}\r\n                    <div className=\"flex-inline \">\r\n                        <label>Phone: </label>\r\n                        <input type=\"text\" \r\n                               name=\"phone\" \r\n                               placeholder=\"Enter Phone\"\r\n                               ref={register(registerOptions.phone)} />\r\n                    </div>\r\n                    {errors.phone && <span className=\"text-danger\">{errors.phone.message}</span>}\r\n                    <div className=\"flex-inline \">\r\n                        <label htmlFor=\"password\">Password: *</label>\r\n                        <input type=\"password\" \r\n                               name=\"password\" \r\n                               placeholder=\"Enter Password\"\r\n                               ref={register(registerOptions.password)} />\r\n                    </div>\r\n                    {errors.password && <span className=\"text-danger\">{errors.password.message}</span>}\r\n                    <div className=\"flex-inline \">\r\n                        <label>Confirm Password: *</label>\r\n                        <input type=\"password\" \r\n                               name=\"passwordconfirm\" \r\n                               placeholder=\"Enter Password Again\" \r\n                               ref={register({\r\n                                        required: true, \r\n                                        validate: value => value === password,\r\n                                   })}\r\n                               />\r\n                    </div>\r\n                    {errors.passwordconfirm && errors.passwordconfirm.type === 'required' && <span className=\"text-danger\">Confirm Password is required</span>}\r\n                    {errors.passwordconfirm && errors.passwordconfirm.type === 'validate' && <span className=\"text-danger\">Password is not matched</span>}\r\n                    <div className=\"flex-inline \">\r\n                        <label>Address:</label>\r\n                        <input type=\"text\" \r\n                                name=\"address\" \r\n                                placeholder=\"Enter Address\"\r\n                                ref={register} />\r\n                    </div>\r\n                    <div className=\"flex-inline \">\r\n                        <label>Country:</label>\r\n                        <div className=\"select-wrapper\">\r\n                            <select id=\"country\" \r\n                                    name=\"country\" \r\n                                    className=\"form-control\"\r\n                                    ref={register}>\r\n                                <option value=\"\">Select Country</option>\r\n                                <option value=\"Afghanistan\">Afghanistan</option>\r\n                                <option value=\"Åland Islands\">Åland Islands</option>\r\n                                <option value=\"Albania\">Albania</option>\r\n                                <option value=\"Algeria\">Algeria</option>\r\n                                <option value=\"American Samoa\">American Samoa</option>\r\n                                <option value=\"Andorra\">Andorra</option>\r\n                                <option value=\"Angola\">Angola</option>\r\n                                <option value=\"Anguilla\">Anguilla</option>\r\n                                <option value=\"Antarctica\">Antarctica</option>\r\n                                <option value=\"Antigua and Barbuda\">Antigua and Barbuda</option>\r\n                                <option value=\"Argentina\">Argentina</option>\r\n                                <option value=\"Armenia\">Armenia</option>\r\n                                <option value=\"Aruba\">Aruba</option>\r\n                                <option value=\"Australia\">Australia</option>\r\n                                <option value=\"Austria\">Austria</option>\r\n                                <option value=\"Azerbaijan\">Azerbaijan</option>\r\n                                <option value=\"Bahamas\">Bahamas</option>\r\n                                <option value=\"Bahrain\">Bahrain</option>\r\n                                <option value=\"Bangladesh\">Bangladesh</option>\r\n                                <option value=\"Barbados\">Barbados</option>\r\n                                <option value=\"Belarus\">Belarus</option>\r\n                                <option value=\"Belgium\">Belgium</option>\r\n                                <option value=\"Belize\">Belize</option>\r\n                                <option value=\"Benin\">Benin</option>\r\n                                <option value=\"Bermuda\">Bermuda</option>\r\n                                <option value=\"Bhutan\">Bhutan</option>\r\n                                <option value=\"Bolivia\">Bolivia</option>\r\n                                <option value=\"Bosnia and Herzegovina\">Bosnia and Herzegovina</option>\r\n                                <option value=\"Botswana\">Botswana</option>\r\n                                <option value=\"Bouvet Island\">Bouvet Island</option>\r\n                                <option value=\"Brazil\">Brazil</option>\r\n                                <option value=\"British Indian Ocean Territory\">British Indian Ocean Territory</option>\r\n                                <option value=\"Brunei Darussalam\">Brunei Darussalam</option>\r\n                                <option value=\"Bulgaria\">Bulgaria</option>\r\n                                <option value=\"Burkina Faso\">Burkina Faso</option>\r\n                                <option value=\"Burundi\">Burundi</option>\r\n                                <option value=\"Cambodia\">Cambodia</option>\r\n                                <option value=\"Cameroon\">Cameroon</option>\r\n                                <option value=\"Canada\">Canada</option>\r\n                                <option value=\"Cape Verde\">Cape Verde</option>\r\n                                <option value=\"Cayman Islands\">Cayman Islands</option>\r\n                                <option value=\"Central African Republic\">Central African Republic</option>\r\n                                <option value=\"Chad\">Chad</option>\r\n                                <option value=\"Chile\">Chile</option>\r\n                                <option value=\"China\">China</option>\r\n                                <option value=\"Christmas Island\">Christmas Island</option>\r\n                                <option value=\"Cocos (Keeling) Islands\">Cocos (Keeling) Islands</option>\r\n                                <option value=\"Colombia\">Colombia</option>\r\n                                <option value=\"Comoros\">Comoros</option>\r\n                                <option value=\"Congo\">Congo</option>\r\n                                <option value=\"Congo, The Democratic Republic of The\">Congo, The Democratic Republic of The</option>\r\n                                <option value=\"Cook Islands\">Cook Islands</option>\r\n                                <option value=\"Costa Rica\">Costa Rica</option>\r\n                                <option value=\"Cote D'ivoire\">Cote D'ivoire</option>\r\n                                <option value=\"Croatia\">Croatia</option>\r\n                                <option value=\"Cuba\">Cuba</option>\r\n                                <option value=\"Cyprus\">Cyprus</option>\r\n                                <option value=\"Czech Republic\">Czech Republic</option>\r\n                                <option value=\"Denmark\">Denmark</option>\r\n                                <option value=\"Djibouti\">Djibouti</option>\r\n                                <option value=\"Dominica\">Dominica</option>\r\n                                <option value=\"Dominican Republic\">Dominican Republic</option>\r\n                                <option value=\"Ecuador\">Ecuador</option>\r\n                                <option value=\"Egypt\">Egypt</option>\r\n                                <option value=\"El Salvador\">El Salvador</option>\r\n                                <option value=\"Equatorial Guinea\">Equatorial Guinea</option>\r\n                                <option value=\"Eritrea\">Eritrea</option>\r\n                                <option value=\"Estonia\">Estonia</option>\r\n                                <option value=\"Ethiopia\">Ethiopia</option>\r\n                                <option value=\"Falkland Islands (Malvinas)\">Falkland Islands (Malvinas)</option>\r\n                                <option value=\"Faroe Islands\">Faroe Islands</option>\r\n                                <option value=\"Fiji\">Fiji</option>\r\n                                <option value=\"Finland\">Finland</option>\r\n                                <option value=\"France\">France</option>\r\n                                <option value=\"French Guiana\">French Guiana</option>\r\n                                <option value=\"French Polynesia\">French Polynesia</option>\r\n                                <option value=\"French Southern Territories\">French Southern Territories</option>\r\n                                <option value=\"Gabon\">Gabon</option>\r\n                                <option value=\"Gambia\">Gambia</option>\r\n                                <option value=\"Georgia\">Georgia</option>\r\n                                <option value=\"Germany\">Germany</option>\r\n                                <option value=\"Ghana\">Ghana</option>\r\n                                <option value=\"Gibraltar\">Gibraltar</option>\r\n                                <option value=\"Greece\">Greece</option>\r\n                                <option value=\"Greenland\">Greenland</option>\r\n                                <option value=\"Grenada\">Grenada</option>\r\n                                <option value=\"Guadeloupe\">Guadeloupe</option>\r\n                                <option value=\"Guam\">Guam</option>\r\n                                <option value=\"Guatemala\">Guatemala</option>\r\n                                <option value=\"Guernsey\">Guernsey</option>\r\n                                <option value=\"Guinea\">Guinea</option>\r\n                                <option value=\"Guinea-bissau\">Guinea-bissau</option>\r\n                                <option value=\"Guyana\">Guyana</option>\r\n                                <option value=\"Haiti\">Haiti</option>\r\n                                <option value=\"Heard Island and Mcdonald Islands\">Heard Island and Mcdonald Islands</option>\r\n                                <option value=\"Holy See (Vatican City State)\">Holy See (Vatican City State)</option>\r\n                                <option value=\"Honduras\">Honduras</option>\r\n                                <option value=\"Hong Kong\">Hong Kong</option>\r\n                                <option value=\"Hungary\">Hungary</option>\r\n                                <option value=\"Iceland\">Iceland</option>\r\n                                <option value=\"India\">India</option>\r\n                                <option value=\"Indonesia\">Indonesia</option>\r\n                                <option value=\"Iran, Islamic Republic of\">Iran, Islamic Republic of</option>\r\n                                <option value=\"Iraq\">Iraq</option>\r\n                                <option value=\"Ireland\">Ireland</option>\r\n                                <option value=\"Isle of Man\">Isle of Man</option>\r\n                                <option value=\"Israel\">Israel</option>\r\n                                <option value=\"Italy\">Italy</option>\r\n                                <option value=\"Jamaica\">Jamaica</option>\r\n                                <option value=\"Japan\">Japan</option>\r\n                                <option value=\"Jersey\">Jersey</option>\r\n                                <option value=\"Jordan\">Jordan</option>\r\n                                <option value=\"Kazakhstan\">Kazakhstan</option>\r\n                                <option value=\"Kenya\">Kenya</option>\r\n                                <option value=\"Kiribati\">Kiribati</option>\r\n                                <option value=\"Korea, Democratic People's Republic of\">Korea, Democratic People's Republic of</option>\r\n                                <option value=\"Korea, Republic of\">Korea, Republic of</option>\r\n                                <option value=\"Kuwait\">Kuwait</option>\r\n                                <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\r\n                                <option value=\"Lao People's Democratic Republic\">Lao People's Democratic Republic</option>\r\n                                <option value=\"Latvia\">Latvia</option>\r\n                                <option value=\"Lebanon\">Lebanon</option>\r\n                                <option value=\"Lesotho\">Lesotho</option>\r\n                                <option value=\"Liberia\">Liberia</option>\r\n                                <option value=\"Libyan Arab Jamahiriya\">Libyan Arab Jamahiriya</option>\r\n                                <option value=\"Liechtenstein\">Liechtenstein</option>\r\n                                <option value=\"Lithuania\">Lithuania</option>\r\n                                <option value=\"Luxembourg\">Luxembourg</option>\r\n                                <option value=\"Macao\">Macao</option>\r\n                                <option value=\"Macedonia, The Former Yugoslav Republic of\">Macedonia, The Former Yugoslav Republic of</option>\r\n                                <option value=\"Madagascar\">Madagascar</option>\r\n                                <option value=\"Malawi\">Malawi</option>\r\n                                <option value=\"Malaysia\">Malaysia</option>\r\n                                <option value=\"Maldives\">Maldives</option>\r\n                                <option value=\"Mali\">Mali</option>\r\n                                <option value=\"Malta\">Malta</option>\r\n                                <option value=\"Marshall Islands\">Marshall Islands</option>\r\n                                <option value=\"Martinique\">Martinique</option>\r\n                                <option value=\"Mauritania\">Mauritania</option>\r\n                                <option value=\"Mauritius\">Mauritius</option>\r\n                                <option value=\"Mayotte\">Mayotte</option>\r\n                                <option value=\"Mexico\">Mexico</option>\r\n                                <option value=\"Micronesia, Federated States of\">Micronesia, Federated States of</option>\r\n                                <option value=\"Moldova, Republic of\">Moldova, Republic of</option>\r\n                                <option value=\"Monaco\">Monaco</option>\r\n                                <option value=\"Mongolia\">Mongolia</option>\r\n                                <option value=\"Montenegro\">Montenegro</option>\r\n                                <option value=\"Montserrat\">Montserrat</option>\r\n                                <option value=\"Morocco\">Morocco</option>\r\n                                <option value=\"Mozambique\">Mozambique</option>\r\n                                <option value=\"Myanmar\">Myanmar</option>\r\n                                <option value=\"Namibia\">Namibia</option>\r\n                                <option value=\"Nauru\">Nauru</option>\r\n                                <option value=\"Nepal\">Nepal</option>\r\n                                <option value=\"Netherlands\">Netherlands</option>\r\n                                <option value=\"Netherlands Antilles\">Netherlands Antilles</option>\r\n                                <option value=\"New Caledonia\">New Caledonia</option>\r\n                                <option value=\"New Zealand\">New Zealand</option>\r\n                                <option value=\"Nicaragua\">Nicaragua</option>\r\n                                <option value=\"Niger\">Niger</option>\r\n                                <option value=\"Nigeria\">Nigeria</option>\r\n                                <option value=\"Niue\">Niue</option>\r\n                                <option value=\"Norfolk Island\">Norfolk Island</option>\r\n                                <option value=\"Northern Mariana Islands\">Northern Mariana Islands</option>\r\n                                <option value=\"Norway\">Norway</option>\r\n                                <option value=\"Oman\">Oman</option>\r\n                                <option value=\"Pakistan\">Pakistan</option>\r\n                                <option value=\"Palau\">Palau</option>\r\n                                <option value=\"Palestinian Territory, Occupied\">Palestinian Territory, Occupied</option>\r\n                                <option value=\"Panama\">Panama</option>\r\n                                <option value=\"Papua New Guinea\">Papua New Guinea</option>\r\n                                <option value=\"Paraguay\">Paraguay</option>\r\n                                <option value=\"Peru\">Peru</option>\r\n                                <option value=\"Philippines\">Philippines</option>\r\n                                <option value=\"Pitcairn\">Pitcairn</option>\r\n                                <option value=\"Poland\">Poland</option>\r\n                                <option value=\"Portugal\">Portugal</option>\r\n                                <option value=\"Puerto Rico\">Puerto Rico</option>\r\n                                <option value=\"Qatar\">Qatar</option>\r\n                                <option value=\"Reunion\">Reunion</option>\r\n                                <option value=\"Romania\">Romania</option>\r\n                                <option value=\"Russian Federation\">Russian Federation</option>\r\n                                <option value=\"Rwanda\">Rwanda</option>\r\n                                <option value=\"Saint Helena\">Saint Helena</option>\r\n                                <option value=\"Saint Kitts and Nevis\">Saint Kitts and Nevis</option>\r\n                                <option value=\"Saint Lucia\">Saint Lucia</option>\r\n                                <option value=\"Saint Pierre and Miquelon\">Saint Pierre and Miquelon</option>\r\n                                <option value=\"Saint Vincent and The Grenadines\">Saint Vincent and The Grenadines</option>\r\n                                <option value=\"Samoa\">Samoa</option>\r\n                                <option value=\"San Marino\">San Marino</option>\r\n                                <option value=\"Sao Tome and Principe\">Sao Tome and Principe</option>\r\n                                <option value=\"Saudi Arabia\">Saudi Arabia</option>\r\n                                <option value=\"Senegal\">Senegal</option>\r\n                                <option value=\"Serbia\">Serbia</option>\r\n                                <option value=\"Seychelles\">Seychelles</option>\r\n                                <option value=\"Sierra Leone\">Sierra Leone</option>\r\n                                <option value=\"Singapore\">Singapore</option>\r\n                                <option value=\"Slovakia\">Slovakia</option>\r\n                                <option value=\"Slovenia\">Slovenia</option>\r\n                                <option value=\"Solomon Islands\">Solomon Islands</option>\r\n                                <option value=\"Somalia\">Somalia</option>\r\n                                <option value=\"South Africa\">South Africa</option>\r\n                                <option value=\"South Georgia and The South Sandwich Islands\">South Georgia and The South Sandwich Islands</option>\r\n                                <option value=\"Spain\">Spain</option>\r\n                                <option value=\"Sri Lanka\">Sri Lanka</option>\r\n                                <option value=\"Sudan\">Sudan</option>\r\n                                <option value=\"Suriname\">Suriname</option>\r\n                                <option value=\"Svalbard and Jan Mayen\">Svalbard and Jan Mayen</option>\r\n                                <option value=\"Swaziland\">Swaziland</option>\r\n                                <option value=\"Sweden\">Sweden</option>\r\n                                <option value=\"Switzerland\">Switzerland</option>\r\n                                <option value=\"Syrian Arab Republic\">Syrian Arab Republic</option>\r\n                                <option value=\"Taiwan, Province of China\">Taiwan, Province of China</option>\r\n                                <option value=\"Tajikistan\">Tajikistan</option>\r\n                                <option value=\"Tanzania, United Republic of\">Tanzania, United Republic of</option>\r\n                                <option value=\"Thailand\">Thailand</option>\r\n                                <option value=\"Timor-leste\">Timor-leste</option>\r\n                                <option value=\"Togo\">Togo</option>\r\n                                <option value=\"Tokelau\">Tokelau</option>\r\n                                <option value=\"Tonga\">Tonga</option>\r\n                                <option value=\"Trinidad and Tobago\">Trinidad and Tobago</option>\r\n                                <option value=\"Tunisia\">Tunisia</option>\r\n                                <option value=\"Turkey\">Turkey</option>\r\n                                <option value=\"Turkmenistan\">Turkmenistan</option>\r\n                                <option value=\"Turks and Caicos Islands\">Turks and Caicos Islands</option>\r\n                                <option value=\"Tuvalu\">Tuvalu</option>\r\n                                <option value=\"Uganda\">Uganda</option>\r\n                                <option value=\"Ukraine\">Ukraine</option>\r\n                                <option value=\"United Arab Emirates\">United Arab Emirates</option>\r\n                                <option value=\"United Kingdom\">United Kingdom</option>\r\n                                <option value=\"United States\">United States</option>\r\n                                <option value=\"United States Minor Outlying Islands\">United States Minor Outlying Islands</option>\r\n                                <option value=\"Uruguay\">Uruguay</option>\r\n                                <option value=\"Uzbekistan\">Uzbekistan</option>\r\n                                <option value=\"Vanuatu\">Vanuatu</option>\r\n                                <option value=\"Venezuela\">Venezuela</option>\r\n                                <option value=\"Viet Nam\">Viet Nam</option>\r\n                                <option value=\"Virgin Islands, British\">Virgin Islands, British</option>\r\n                                <option value=\"Virgin Islands, U.S.\">Virgin Islands, U.S.</option>\r\n                                <option value=\"Wallis and Futuna\">Wallis and Futuna</option>\r\n                                <option value=\"Western Sahara\">Western Sahara</option>\r\n                                <option value=\"Yemen\">Yemen</option>\r\n                                <option value=\"Zambia\">Zambia</option>\r\n                                <option value=\"Zimbabwe\">Zimbabwe</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\t\r\n                    <div className=\"flex-inline\">\r\n                        <label>Profile Picture:</label>\r\n                        <div id=\"registration-image\">\r\n                            <div id=\"registration-image-container\">\r\n                                <div className=\"full-row\">\r\n                                    <img src={image} alt=\"profile\" />\r\n                                </div>\r\n                                <div className=\"full-row\">\r\n                                    <input type=\"file\" \r\n                                        name=\"profile_picture\" \r\n                                        className=\"custom-select-input\"\r\n                                        accept='image/*'\r\n                                        onChange={imageHandler} />\r\n                                </div>\r\n                                <div className=\"full-row\">\r\n                                    <Link to=\"/register\" onClick={() => {setImage('../../img/user-profile.png')}}>Remove Image</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>     \r\n                    {/*\r\n                    <h3>Referred By: </h3>   \r\n                    <div className=\"flex-inline \">\r\n                        <label>Name: * </label>\r\n                        <input type=\"text\" \r\n                                name=\"referrer_name\" \r\n                                placeholder=\"Enter Name\"\r\n                                ref={register(registerOptions.referrer_name)} />\r\n                    </div>\r\n                    {errors.referrer_name && <span className=\"text-danger\">{errors.referrer_name.message}</span>} \r\n                    <div className=\"flex-inline \">\r\n                        <label>Email: *</label>\r\n                        <input type=\"email\" \r\n                                name=\"referrer_email\" \r\n                                placeholder=\"Enter Email\"\r\n                                ref={register(registerOptions.referrer_email)} />\r\n                       \r\n                    </div>\r\n                    {errors.referrer_email && <span className=\"text-danger\">{errors.referrer_email.message}</span>}\r\n                                */}\r\n                    <button disabled={disable}>Registration</button>\r\n                    <Alert />\r\n                    <p text-align=\"center\">* Marked fields are required. Please fill up these fields <br/><br/>\r\n                        Already have an account? <Link to=\"/login\">Login Here</Link>\r\n                    </p>\r\n\t\t        </form>\r\n\t        </div>\r\n        </div>\r\n        \r\n    )\r\n};\r\nRegister.propTypes = {\r\n    isAuthenticated: PropTypes.bool\r\n  };\r\n  \r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         actions: bindActionCreators({\r\n//             setAlert,\r\n//             register\r\n//         }, dispatch)\r\n//     }\r\n// }\r\nexport default connect(mapStateToProps)(Register);\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Dashboard.js",["338","339"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/auth';\r\nimport { getAllUsers, loadUser } from '../../actions/auth';\r\nimport {\r\n  getPendingFrUser,\r\n  getFriendSuggestion,\r\n  getUserMyFr,\r\n} from '../../actions/friends';\r\n\r\nimport TopSidebar from './TopSidebar';\r\nimport PropTypes from 'prop-types';\r\nimport { getFile } from '../../actions/file';\r\nconst ADMIN = process.env.REACT_APP_ADMIN;\r\nconst Dashboard = ({\r\n  props,\r\n  logout,\r\n  getAllUsers,\r\n  getPendingFrUser,\r\n  getFriendSuggestion,\r\n  getUserMyFr,\r\n  loadUser,\r\n  getFile,\r\n  auth: { isAuthenticated, token, user, loading },\r\n}) => {\r\n  const [fileLoading, setFileLoading] = useState(true);\r\n  useEffect(() => {\r\n    console.log('calling useEffect in Dashboard');\r\n    loadUser();\r\n    getAllUsers();\r\n    getPendingFrUser();\r\n    getUserMyFr();\r\n    if(user !== null) {\r\n      if(!loading){\r\n        if (fileLoading && user.email !== ADMIN) {\r\n          console.log('Calling User getFile');\r\n          getFile(user._id.$oid);\r\n          setFileLoading(false)\r\n        }\r\n        else if(fileLoading && user.email === ADMIN){\r\n          //console.log('Calling ADMIN getFile');\r\n          getFile(null);\r\n          setFileLoading(false)\r\n        }\r\n      }\r\n    }\r\n  }, [loadUser, getAllUsers, getPendingFrUser, getUserMyFr, getFile]);\r\n  //console.log('IsAuthenticated', isAuthenticated);\r\n  if (!isAuthenticated && token === null) {\r\n    return <Redirect to='/login' />;\r\n  }\r\n  //console.log(' Props dashboard = ',props);\r\n  return (\r\n    <Fragment>\r\n      <div id='wrapper'>\r\n        <TopSidebar props={props} />\r\n      </div>\r\n      <a className='scroll-to-top rounded' href='#page-top'>\r\n        <i className='fas fa-angle-up'></i>\r\n      </a>\r\n\r\n      <div\r\n        className='modal fade'\r\n        id='logoutModal'\r\n        tabIndex='-1'\r\n        role='dialog'\r\n        aria-labelledby='exampleModalLabel'\r\n        aria-hidden='true'\r\n      >\r\n        <div className='modal-dialog' role='document'>\r\n          <div className='modal-content'>\r\n            <div className='modal-header'>\r\n              <h5 className='modal-title' id='exampleModalLabel'>\r\n                Ready to Leave?\r\n              </h5>\r\n              <button\r\n                className='close'\r\n                type='button'\r\n                data-dismiss='modal'\r\n                aria-label='Close'\r\n              >\r\n                <span aria-hidden='true'>×</span>\r\n              </button>\r\n            </div>\r\n            <div className='modal-body'>\r\n              Select \"Logout\" below if you are ready to end your current\r\n              session.\r\n            </div>\r\n            <div className='modal-footer'>\r\n              <button\r\n                className='btn btn-secondary'\r\n                type='button'\r\n                data-dismiss='modal'\r\n              >\r\n                Cancel\r\n              </button>\r\n              <Link to='/' className='btn btn-primary' onClick={logout}>\r\n                Logout\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nDashboard.propTypes = {\r\n  //setAlert: PropTypes.func.isRequired,\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  logout,\r\n  loadUser,\r\n  getAllUsers,\r\n  getPendingFrUser,\r\n  getUserMyFr,\r\n  getFile\r\n})(Dashboard);\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\auth.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\AddPost.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\ImageUpload.js",["340"],"import React, { Component } from 'react';\r\nimport '../css/login.css';\r\nimport '../css/responsive.css';\r\nexport class ImageUpload extends Component {\r\n    state = {\r\n        image: '../../img/user-profile.png'\r\n    }\r\n    //const [image, setImage] = useState('../../img/profile-picture.png');\r\n    imageHandler = (e) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () =>{\r\n          if(reader.readyState === 2){\r\n            this.setState({image: reader.result})\r\n          }\r\n        }\r\n        reader.readAsDataURL(e.target.files[0])\r\n        \r\n      };\r\n    \r\n    render() {\r\n        const { image } = this.state\r\n        console.log(\"Image = \", image);\r\n    return (\r\n        <div className=\"form-wrapper\">\r\n         <form id=\"registration-form\">\r\n         <div className=\"flex-inline\">\r\n                        <label>Profile Picture:</label>\r\n                        <div id=\"registration-image\">\r\n                            <div id=\"registration-image-container\">\r\n                                <div className=\"full-row\">\r\n                                    <img src={image} alt=\"profile\" />\r\n                                </div>\r\n                                <div className=\"full-row\">\r\n                                    <input type=\"file\" \r\n                                        name=\"profile_picture\" \r\n                                        className=\"customFileInput\"\r\n                                        onChange={this.imageHandler}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"full-row\">\r\n                                    <a href=\"\">Remove Image</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>     \r\n         </form>\r\n            \r\n        </div>\r\n    )\r\n    }\r\n}\r\nexport default ImageUpload;\r\n",["341","342"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\types.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Footer.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Topbar.js",["343"],"import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n//import { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { logout, toggleCssClass } from '../../actions/auth';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from 'autosuggest-highlight/match';\r\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse';\r\nconst IMAGEURL = process.env.REACT_APP_CLOUDINARY;\r\n\r\nconst Topbar = ({props, auth: { user, allUsers }, \r\n  friend: {pendingFriend},\r\n  logout, toggleCssClass }) => {\r\n  const [value, setValue] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [addClass, setAddClass] = useState(true);\r\n  const toggleClass = () => {\r\n    //console.log('Tobbar addclass before set ', addClass);\r\n\r\n    setAddClass(!addClass);\r\n    toggleCssClass(addClass);\r\n    //console.log('Tobbar addclass after set ', addClass);\r\n  };\r\n \r\n  function escapeRegexCharacters(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n  }\r\n  function getSuggestions(value) {\r\n    const escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n    if (escapedValue === '') {\r\n      return [];\r\n    }\r\n\r\n    const regex = new RegExp('\\\\b' + escapedValue, 'i');\r\n\r\n    return allUsers.filter((user) => regex.test(getSuggestionValue(user)));\r\n  }\r\n\r\n  function getSuggestionValue(suggestion) {\r\n    return `${suggestion.firstname} ${suggestion.middlename} ${suggestion.lastname}`;\r\n  }\r\n\r\n  function renderSuggestion(suggestion, { query }) {\r\n    // console.log('Sugestion ', suggestion);\r\n    // console.log('Query ', query);\r\n    const suggestionText = `${suggestion.firstname} ${suggestion.middlename} ${suggestion.lastname}`;\r\n    const matches = AutosuggestHighlightMatch(suggestionText, query);\r\n    const parts = AutosuggestHighlightParse(suggestionText, matches);\r\n    return (\r\n      <span className='suggestion-content'>\r\n        <img\r\n          src={IMAGEURL+suggestion.image}\r\n          alt='user'\r\n          className='user-img-profile rounded-circle'\r\n        />\r\n        <span className='name'>\r\n          <Link\r\n            to={{\r\n              pathname: '/profile',\r\n              state: {\r\n                id: suggestion._id.$oid,\r\n              },\r\n            }}\r\n          >\r\n            {parts.map((part, index) => {\r\n              const className = part.highlight ? 'highlight' : null;\r\n              return (\r\n                <span className={className} key={index}>\r\n                  {part.text}\r\n                </span>\r\n              );\r\n            })}\r\n          </Link>\r\n        </span>\r\n      </span>\r\n    );\r\n  }\r\n  const onChange = (event, { newValue, method }) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(value));\r\n    //console.log('Suggestions list ', suggestions);\r\n  };\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const submitSearchData = async (e) => {\r\n    e.preventDefault();\r\n    // let userArrayData = allUsers.filter(\r\n    //   (user) => user.name.toLowerCase() === value.toLowerCase()\r\n    // );\r\n    // //console.log('User in search = ', userArrayData)\r\n    // let userData = Object.assign({}, userArrayData[0]);\r\n    // //console.log('User in search = ', userData)\r\n    // if (value === '') alert('User input search data is not given');\r\n    // if (userArrayData.length > 0) {\r\n      \r\n    //   props.history.push('/profile',{\r\n    //     id: userData._id.$oid,\r\n    //   });\r\n    //   // return (\r\n    //   //   <Redirect\r\n    //   //     to={{\r\n    //   //       pathname: '/profile',\r\n    //   //       state: {\r\n    //   //         id: userData._id.$oid,\r\n    //   //       },\r\n    //   //     }}\r\n    //   //   />\r\n    //   // );\r\n    // } else \r\n    if (value !== '') {\r\n        props.history.push('/searchuser',{\r\n          value: value,\r\n        });\r\n    }\r\n  };\r\n  \r\n  const inputProps = {\r\n    placeholder: 'Search for...',\r\n    value,\r\n    onChange: onChange,\r\n  };\r\n  \r\n  return (\r\n    <Fragment>\r\n     \r\n        \r\n          <nav\r\n        className='navbar navbar-expand navbar-light \r\n                    bg-white topbar mb-4 static-top shadow'\r\n      >\r\n       {\r\n      user !== null ? (\r\n        <>\r\n        <button\r\n          id='sidebarToggleTop'\r\n          onClick={toggleClass}\r\n          className='btn btn-link d-md-none rounded-circle mr-3'\r\n        >\r\n          <i className='fa fa-bars'></i>\r\n        </button>\r\n\r\n        {/* <div id='dashboard-header-dropdown' className='dropdown'>\r\n          <a\r\n            className='btn dropdown-toggle'\r\n            href='/#'\r\n            role='button'\r\n            id='dropdownMenuLink'\r\n            data-toggle='dropdown'\r\n            aria-haspopup='true'\r\n            aria-expanded='false'\r\n          >\r\n            Applications\r\n          </a>\r\n          <div\r\n            className='dropdown-menu dropdown-menu-left shadow animated--fade-in'\r\n            aria-labelledby='dropdownMenuLink'\r\n          >\r\n            <Link\r\n              className='dropdown-item'\r\n              to={{\r\n                pathname: '/dashboard',\r\n                state: {\r\n                  showMyPost: false,\r\n                },\r\n              }}\r\n            >\r\n              Pages\r\n            </Link>\r\n            <Link\r\n              className='dropdown-item'\r\n              to={{\r\n                pathname: '/dashboard',\r\n                state: {\r\n                  showMyPost: false,\r\n                },\r\n              }}\r\n            >\r\n              Groups\r\n            </Link>\r\n          </div>\r\n        </div> */}\r\n\r\n        <form\r\n          className='d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search'\r\n          onSubmit={submitSearchData}\r\n        >\r\n          <div className='input-group'>\r\n            <Autosuggest\r\n              suggestions={suggestions}\r\n              onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n              onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n              getSuggestionValue={getSuggestionValue}\r\n              renderSuggestion={renderSuggestion}\r\n              inputProps={inputProps}\r\n            />\r\n            <div className='input-group-append'>\r\n              <button className='btn btn-primary' type='submit'>\r\n                <i className='fas fa-search fa-sm'></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        <ul className='navbar-nav ml-auto'>\r\n          <li className='nav-item dropdown no-arrow d-sm-none'>\r\n            <a\r\n              className='nav-link dropdown-toggle'\r\n              href='/#'\r\n              id='searchDropdown'\r\n              role='button'\r\n              data-toggle='dropdown'\r\n              aria-haspopup='true'\r\n              aria-expanded='false'\r\n            >\r\n              <i className='fas fa-search fa-fw'></i>\r\n            </a>\r\n            <div\r\n              className='dropdown-menu dropdown-menu-right p-3 \r\n                                    shadow animated--grow-in'\r\n              aria-labelledby='searchDropdown'\r\n            >\r\n              <form\r\n                className='form-inline mr-auto w-100 navbar-search'\r\n                onSubmit={submitSearchData}\r\n              >\r\n                <div className='input-group'>\r\n                  <Autosuggest\r\n                    suggestions={suggestions}\r\n                    onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n                    onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n                    getSuggestionValue={getSuggestionValue}\r\n                    renderSuggestion={renderSuggestion}\r\n                    inputProps={inputProps}\r\n                  />\r\n                  <div className='input-group-append'>\r\n                    <button className='btn btn-primary' type='submit'>\r\n                      <i className='fas fa-search fa-sm'></i>\r\n                    </button>\r\n                  </div>\r\n                  {/* <input type=\"text\" \r\n                                        className=\"form-control bg-light border-0 small\"\r\n                                        placeholder=\"Search for...\" aria-label=\"Search\"\r\n                                        aria-describedby=\"basic-addon2\" /> */}\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </li>\r\n\r\n          <li className='nav-item dropdown no-arrow mx-1'>\r\n            <a\r\n              className='nav-link dropdown-toggle'\r\n              href='/#'\r\n              id='alertsDropdown'\r\n              role='button'\r\n              data-toggle='dropdown'\r\n              aria-haspopup='true'\r\n              aria-expanded='false'\r\n            >\r\n              <i className='fas fa-bell fa-fw'></i>\r\n              <span className='badge badge-danger badge-counter'>\r\n                {pendingFriend.length > 0 ? pendingFriend.length : null}\r\n              </span>\r\n            </a>\r\n            {pendingFriend.length > 0 ? (\r\n              <div\r\n                className='dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in'\r\n                aria-labelledby='alertsDropdown'\r\n              >\r\n                <h6 className='dropdown-header'>Notification Center</h6>\r\n                {pendingFriend.length > 0\r\n                  ? pendingFriend.map((pendingUser) => (\r\n                      <Link\r\n                        key={pendingUser._id.$oid}\r\n                        className='dropdown-item d-flex align-items-center'\r\n                        to='/friends'\r\n                      >\r\n                        <div className='mr-3'>\r\n                          <div className='icon-circle bg-primary'>\r\n                            <img\r\n                              className='img-profile rounded-circle'\r\n                              src={\r\n                                pendingUser !== null ? IMAGEURL+pendingUser.image : null\r\n                              }\r\n                              alt={pendingUser.name}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <span className='font-weight-bold'>\r\n                            <span\r\n                              style={{\r\n                                fontSize: 15,\r\n                                fontWeight: 'bold',\r\n                                fontFamily: 'cursive',\r\n                                color: 'green'\r\n                              }}\r\n                            >\r\n                              {pendingUser.name}\r\n                            </span>{' '}\r\n                            wants to be your friend.\r\n                          </span>\r\n                        </div>\r\n                      </Link>\r\n                    ))\r\n                  : null}\r\n              </div>\r\n            ) : null}\r\n          </li>\r\n\r\n          {/* <li className='nav-item dropdown no-arrow mx-1'>\r\n            <a\r\n              className='nav-link dropdown-toggle'\r\n              href='/#'\r\n              id='messagesDropdown'\r\n              role='button'\r\n              data-toggle='dropdown'\r\n              aria-haspopup='true'\r\n              aria-expanded='false'\r\n            >\r\n              <i className='fas fa-envelope fa-fw'></i>\r\n              <span className='badge badge-danger badge-counter'></span>\r\n            </a>\r\n          </li> */}\r\n\r\n          <div className='topbar-divider d-none d-sm-block'></div>\r\n\r\n          <li className='nav-item dropdown no-arrow'>\r\n            <a\r\n              href='/#'\r\n              className='nav-link dropdown-toggle'\r\n              id='userDropdown'\r\n              role='button'\r\n              data-toggle='dropdown'\r\n              aria-haspopup='true'\r\n              aria-expanded='false'\r\n            >\r\n              <span className='mr-2 d-none d-lg-inline text-gray-600 small'>\r\n                {user !== null ? user.name : 'UserName'}{' '}\r\n              </span>\r\n              <img\r\n                className='img-profile rounded-circle'\r\n                src={user !== null ? IMAGEURL+user.image : null}\r\n                alt='userName'\r\n              />\r\n            </a>\r\n            <div\r\n              className='dropdown-menu dropdown-menu-right \r\n                                    shadow animated--grow-in'\r\n              aria-labelledby='userDropdown'\r\n            >\r\n              <Link className='dropdown-item' to='/profile'>\r\n                <i className='fas fa-user fa-sm fa-fw mr-2 text-gray-400'></i>\r\n                Profile\r\n              </Link>\r\n              <div className='dropdown-divider'></div>\r\n              <a\r\n                href='/#'\r\n                className='dropdown-item'\r\n                data-toggle='modal'\r\n                data-target='#logoutModal'\r\n              >\r\n                <i className='fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400'></i>\r\n                Logout\r\n              </a>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        </>\r\n        ) : (\r\n          \r\n            <div className=\"not-user\">\r\n              <span>Not a user? <Link to=\"/register\">Register Here</Link></span>\r\n            </div>\r\n          \r\n        )\r\n        \r\n      }\r\n      </nav>\r\n        \r\n\r\n\r\n      {/* {searchUser.length > 0 ? \r\n                        <ListGroup className=\"list-group\">\r\n                            {searchUser.map(user=>(<ListGroupItem key={user.key}><Link to=\"/profile\">{user.name}</Link></ListGroupItem>))}\r\n                        </ListGroup> : null\r\n                    } */}\r\n      <div\r\n        className='modal fade'\r\n        id='logoutModal'\r\n        tabIndex='-1'\r\n        role='dialog'\r\n        aria-labelledby='exampleModalLabel'\r\n        aria-hidden='true'\r\n      >\r\n        <div className='modal-dialog' role='document'>\r\n          <div className='modal-content'>\r\n            <div className='modal-header'>\r\n              <h5 className='modal-title' id='exampleModalLabel'>\r\n                Ready to Leave?\r\n              </h5>\r\n              <button\r\n                className='close'\r\n                type='button'\r\n                data-dismiss='modal'\r\n                aria-label='Close'\r\n              >\r\n                <span aria-hidden='true'>×</span>\r\n              </button>\r\n            </div>\r\n            <div className='modal-body'>\r\n              Select \"Logout\" below if you are ready to end your current\r\n              session.\r\n            </div>\r\n            <div className='modal-footer'>\r\n              <button\r\n                className='btn btn-secondary'\r\n                type='button'\r\n                data-dismiss='modal'\r\n              >\r\n                Cancel\r\n              </button>\r\n              <Link to='/' className='btn btn-primary' onClick={logout}>\r\n                Logout\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     \r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  friend: state.friend\r\n});\r\nexport default connect(mapStateToProps, { logout, toggleCssClass })(Topbar);\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Sidebar.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\CommentForm.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Pages.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\post.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\CommentItem.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\posts\\NewPost.js",["344"],"import React, { Fragment, useState, useEffect } from 'react';\r\n//import { Alert } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { addPost, getPost } from '../../actions/post';\r\nimport Advertisement from '../dashboard/Advertisement';\r\nimport PropTypes from 'prop-types';\r\nimport Alert from '../layout/Alert';\r\nimport '../../css/style.css';\r\nconst initialState = {\r\n    title : '',\r\n    desc : ''\r\n}\r\nconst NewPost = ({propsFromLink, addPost, post:{posts, loading}}) => {\r\n    const [postData, setPostData] = useState(initialState)\r\n    const [isSubmit, setIsSubmit] = useState(false);\r\n    const [errorTitle, setErrorTitle] = useState('');\r\n    const [errorBody, setErrorBody] = useState('');\r\n    let {id, edit} = propsFromLink;\r\n    useEffect(() => {\r\n        \r\n        let post;\r\n        if (edit) {\r\n            //getPost(id);\r\n            post = posts.filter((post) => post._id.$oid === id)\r\n            post = Object.assign({}, post[0]);\r\n        } \r\n        console.log('Loading in newPost = ', loading);\r\n        if (!loading && post) {\r\n          const postData = { ...initialState };\r\n          for (const key in post) {\r\n            if (key in postData) {\r\n                postData[key] = post[key];\r\n            }\r\n          }\r\n          setPostData(postData);\r\n        }\r\n      },[loading,posts, propsFromLink]);\r\n    const { title, desc } = postData;\r\n    const onChange = (e) =>\r\n        setPostData({ ...postData, [e.target.name]: e.target.value });\r\n\r\n    const onPostSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const { title, desc } = postData;\r\n        if (title.trim() !== '' && desc.trim() !== '') {\r\n            setErrorTitle('');\r\n            setErrorBody('');\r\n            const formData = new FormData();\r\n            formData.append('title', title);\r\n            formData.append('desc', desc);\r\n            formData.append('filename', null);\r\n            addPost({formData},  propsFromLink.id, propsFromLink.edit);\r\n            setIsSubmit(true);\r\n        } else {\r\n            if(title.trim() === '')\r\n                setErrorTitle('Please enter the post title.');\r\n            if(desc.trim() === '')\r\n                setErrorBody('Please enter the post body.');\r\n          }\r\n    };\r\n    \r\n    if(isSubmit) {\r\n        // console.log('IsSubmit  ',isSubmit);\r\n        // setIsSubmit(false);\r\n        return <Redirect to = \"/dashboard\" />;\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12 col-md-6 col-lg-9\">\r\n                    <div className=\"card shadow mb-4\">\r\n                        <div className=\"card-header py-3\">\r\n                            <h6 className=\"m-0 font-weight-bold text-primary\">Add Post</h6>\r\n                        </div>\r\n                        <div id=\"posts-list\" className=\"card-body\">                 \r\n                            <form onSubmit={onPostSubmit} className='file'>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"title\">Title</label>\r\n                                    <input type=\"text\" \r\n                                            className=\"form-control\" \r\n                                            id=\"title\" \r\n                                            placeholder=\"Enter Title\" \r\n                                            name=\"title\"\r\n                                            value={title}\r\n                                            onChange={onChange} />\r\n                                    {errorTitle && <p className=\"errorMsg\">{errorTitle}</p>}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"body\">Description</label>\r\n                                    <textarea className=\"form-control\" id=\"body\" \r\n                                            placeholder=\"Enter the description of the post\" rows=\"5\" \r\n                                            name=\"desc\"  value={desc}\r\n                                            onChange={onChange} >\r\n                                    </textarea>\r\n                                    {errorBody && <p className=\"errorMsg\">{errorBody}</p>}\r\n                                </div>\r\n                                {/* <div className=\"form-group\">\r\n                                    <label htmlFor=\"category\">Category</label>\r\n                                        <select className=\"form-control\" id=\"category\" \r\n                                                name=\"category\"  value={category}\r\n                                            onChange={onChange}>\r\n                                            <option value=\"\">Select Category</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                        </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"tags\">Tags</label>\r\n                                        <input type=\"email\" \r\n                                                className=\"form-control\" id=\"tags\" \r\n                                                placeholder=\"Enter Tags\"\r\n                                                name=\"tags\" value={tags}\r\n                                                onChange={onChange} />\r\n                                </div> */}\r\n                                {\r\n                                    edit ? (\r\n                                        <div className='update-file-btn'>\r\n                                            <button type=\"submit\" className=\"btn btn-primary\">Update Post</button>\r\n                                            <Link to='/dashboard'\r\n                                                className='btn btn-danger'\r\n                                            >\r\n                                                Cancel\r\n                                            </Link>\r\n                                        </div>\r\n                                    ):(\r\n                                        <button type=\"submit\" className=\"btn btn-primary\">Add Post</button>\r\n                                    )\r\n                                    \r\n                                }\r\n                                \r\n                                <Alert />\r\n                            </form>      \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Advertisement />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nNewPost.propTypes = {\r\n    //setAlert: PropTypes.func.isRequired,\r\n    addPost: PropTypes.func.isRequired,\r\n    getPost: PropTypes.func.isRequired,\r\n    isSuccess: PropTypes.bool\r\n  };\r\n  \r\nconst mapStateToProps = (state) => ({\r\n    isSuccess: state.post.isSuccess,\r\n    post:state.post\r\n});\r\nexport default connect(mapStateToProps, { addPost, getPost })(NewPost);    \r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\utils\\setAuthToken.js",[],["345","346"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\layout\\Spinner.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\utils\\formatDate.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\index.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\PostItem.js",["347","348","349","350","351","352","353","354"],"import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport formatDate from '../../utils/formatDate';\r\nimport { FacebookShareButton, LinkedinShareButton } from \"react-share\";\r\nimport { FacebookIcon, LinkedinIcon} from \"react-share\";\r\nimport ShareModal from './ShareModal';\r\nimport PostDeleteModal from './PostDeleteModal';\r\nimport FilePostDeleteModal from './FilePostDeleteModal';\r\nimport {Image} from 'cloudinary-react';\r\n\r\nconst IMAGEURL = process.env.REACT_APP_CLOUDINARY;\r\nconst ADMIN = process.env.REACT_APP_ADMIN;\r\n\r\n\r\nconst PostItem = ({index, deletePost,deleteFile, postOwner, post:{_id, title, desc,filename,fileID, date,user}}) => {\r\n    //console.log('Id in postItem', _id);\r\n    const [deleteId, setDeleteId] = useState(null);\r\n    \r\n    const [fileDeleteId, setFileDeleteId] = useState(null);\r\n    const [postBody, setPostBody] = useState({\r\n        id: null,\r\n        desc: \"\",\r\n        title: \"\"\r\n    });\r\n    const url = \"https://agriculturist.org/\";\r\n    const [show, setshow] = useState(false);\r\n    \r\n    const [fileDeletemodalshow, setFileDeletemodalshow] = useState(false); \r\n    const [deletemodalshow, setDeletemodalshow] = useState(false); \r\n    \r\n    //Set ID for delete\r\n    const filePostDeleteId = (id, fID) => {\r\n        //console.log('Dellete id ',id);\r\n        setDeleteId(id);\r\n        setFileDeleteId(fID);\r\n        setFileDeletemodalshow(true);\r\n        //console.log('deletemodalshow', deletemodalshow);\r\n    }\r\n    const postDeleteId = (id) => {\r\n        //console.log('Dellete id ',id);\r\n        setDeleteId(id);\r\n        setDeletemodalshow(true);\r\n        //console.log('deletemodalshow', deletemodalshow);\r\n    }\r\n    const postBodyFunc = (id, desc, title) => {\r\n        setPostBody({\r\n            id: id,\r\n            desc:desc,\r\n            title:title\r\n        });\r\n        setshow(true);\r\n    }\r\n    const handleClose = () => {\r\n   \r\n        setshow(false);\r\n        setDeletemodalshow(false);\r\n        setFileDeletemodalshow(false);\r\n        \r\n      };\r\n    \r\n      const [isReadPostTitleMore, setIsReadPostTitleMore] = useState(true);\r\n      const toggleReadTitleMore = (data) => {\r\n        setIsReadPostTitleMore(data);\r\n      };\r\n      const [isReadDescMore, setIsReadDescMore] = useState(null);\r\n      const toggleReadMore = (data) => {\r\n        setIsReadDescMore(data);\r\n        //console.log('toggle data',data);\r\n      };\r\n    return (\r\n    <>\r\n        <div className=\"card-body\">\r\n            <h5><Link to={`/post/${_id.$oid}`}>\r\n            {\r\n                title.length > 160 ? title.slice(0, 161): title\r\n            }\r\n                </Link>\r\n            {\r\n                title.length > 160 ? <span style={{paddingLeft:3}}>....</span> : null\r\n            }\r\n            </h5>\r\n            <p>\r\n            {isReadDescMore === index ? desc : desc.slice(0, 300)}\r\n            {desc.length > 300 ? (\r\n                <>\r\n                <span style={{padding:5}}>.....</span>\r\n                <Link to={`/post/${_id.$oid}`} className=\"read-more-button\">\r\n                            Read more\r\n                </Link>\r\n                </> \r\n                \r\n            ) : null }\r\n            </p>\r\n            {\r\n                filename !== 'null' ? (\r\n                    <div>\r\n                        <Link to={`/view/${filename}`}>\r\n                            <div className='post-card card file-post'>\r\n                            {\r\n                                ( filename.split('.').pop() === 'pdf' ) ? (\r\n                                    <div className='row'>\r\n                                    <div className='col-lg-2 col-sm-3'>\r\n                                    <img className='file-post-icon' src={process.env.PUBLIC_URL + '/img/pdfIcon.png'} alt=\"PDF FILE\"/>\r\n                                    </div>\r\n                                    <div className='col-lg-10 col-sm-9'>\r\n                                        <p className='file-post-title'>\r\n                                        {\r\n                                            title.length > 60 ? title.slice(0, 67): title\r\n                                        }\r\n                                        {\r\n                                            title.length > 60 ? <span style={{paddingLeft:3}}>....</span> : null\r\n                                        }\r\n                                        </p>\r\n                                    </div>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className='row'>\r\n                                        <Image className=\"image-file-post\" cloudName=\"daf1cgy1c\" publicId={IMAGEURL+filename}/>\r\n                                        {/* <div className='col-lg-2 col-sm-3'>\r\n                                            <img className='file-post-icon' src={process.env.PUBLIC_URL + '/img/postImageIcon.png'} alt=\"IMAGE FILE\"/>\r\n                                        </div>\r\n                                        <div className='col-lg-10 col-sm-9'>\r\n                                            <h6 className='file-post-header'>\r\n                                            IMAGE\r\n                                            </h6>\r\n                                            <p className='file-post-title'>{filename}</p>\r\n                                        </div> */}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                                \r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                ): null\r\n            }\r\n            \r\n            <div>\r\n                <small><i className=\"fa fa-calendar\"></i>\r\n                    Publish Date: {formatDate(date.$date)}\r\n                </small>\r\n                <small><i className=\"fa fa-user\"></i>\r\n                    Author: {user.status}\r\n                </small>\r\n                <small><i className=\"fa fa-comments\"></i>\r\n                    <Link to={`/post/${_id.$oid}`}>\r\n                        comment\r\n                    </Link>\r\n                </small>\r\n                <small><i className=\"fas fa-share\"></i>\r\n                    <Link to=\"/dashboard\" \r\n                          onClick={()=>postBodyFunc(_id.$oid, desc, title)}\r\n                    >\r\n                        share\r\n                    </Link>\r\n                </small>\r\n                {postOwner._id.$oid === user.userId.$oid || postOwner.email === ADMIN ? (\r\n                    <small>\r\n                    {\r\n                        filename === 'null' ? (\r\n                            <>\r\n                            <i className=\"fas fa-pen\"></i>\r\n                            <Link to={{\r\n                                pathname: '/addpost',\r\n                                state: {\r\n                                    id: _id.$oid,\r\n                                    edit: true\r\n                                }\r\n                            }}>\r\n                                edit\r\n                            </Link>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                            <i className=\"fas fa-pen\"></i>\r\n                            <Link to={{\r\n                                        pathname: '/addfile',\r\n                                        state: {\r\n                                                    id: fileID.$oid,\r\n                                                    edit:true\r\n                                                },\r\n                                    }}>\r\n                                edit\r\n                            </Link>\r\n                            </>\r\n                        )\r\n                    }\r\n                    </small>\r\n                ):null }\r\n                { postOwner._id.$oid === user.userId.$oid || postOwner.email === ADMIN ?\r\n                (<small>\r\n                    {\r\n                        filename === 'null' ? (\r\n                            <>\r\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                            <Link to=\"/dashboard\"\r\n                                onClick={()=>postDeleteId(_id.$oid)}>\r\n                                delete\r\n                            </Link>\r\n                            </>\r\n                        ):(\r\n                            <>\r\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                            <Link to=\"/dashboard\"\r\n                                onClick={()=>filePostDeleteId(_id.$oid, fileID.$oid)}>\r\n                                delete\r\n                            </Link>\r\n                            </>\r\n                            \r\n                        )\r\n                    }\r\n                    \r\n                </small> ): null}\r\n            </div>\r\n        </div>\r\n        {/* <div className=\"modal fade\" id=\"postDeleteModal\" tabIndex=\"-1\" \r\n                role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n                aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Delete Post</h5>\r\n                        <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">×</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">Do you really want to delete the Post?</div>\r\n                    <div className=\"modal-footer\">\r\n                    <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\r\n                    <Link to=\"/dashboard\" className=\"btn btn-primary\" \r\n                          onClick={() => deletePost(deleteId)} data-dismiss=\"modal\"\r\n                    >\r\n                        Delete\r\n                    </Link>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n        </div> */}\r\n        <ShareModal\r\n          show={show}\r\n          data={postBody}\r\n          onClick={handleClose}\r\n          onHide={handleClose} />\r\n        \r\n        <PostDeleteModal\r\n          show={deletemodalshow}\r\n          deleteId={deleteId}\r\n          onClick={handleClose}\r\n          onHide={handleClose}\r\n          deletePost = {deletePost}\r\n          />\r\n        <FilePostDeleteModal\r\n          show={fileDeletemodalshow}\r\n          deleteId={deleteId}\r\n          fileDeleteId = {fileDeleteId}\r\n          onClick={handleClose}\r\n          onHide={handleClose}\r\n          deletePost = {deletePost}\r\n          deleteFile = {deleteFile} />\r\n        \r\n                           \r\n    </>\r\n    )\r\n}\r\nexport default PostItem;","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\auth.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\post.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\UploadImage.js",["355","356","357"],"import React, { useState } from 'react';\r\nimport {Alert} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nconst API = process.env.REACT_APP_API;\r\nconst UploadImage = () => {\r\n    const [file, setFile] = useState('');\r\n    //const [filename, setFilename] = useState('');\r\n    const [image, setImage] = useState('../../img/user-profile.png');\r\n    const [fileimg, setFileimg] = useState('');\r\n    const [formData, setFormData] = useState({\r\n        firstname:'',\r\n        middlename:''\r\n    })\r\n    const { firstname, middlename } = formData;\r\n    const onChange = (e) =>\r\n          setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const imageHandler = (e) => {\r\n        \r\n        setFile(e.target.files[0]);\r\n        //setFilename(e.target.files[0].name);\r\n        const reader = new FileReader();\r\n        reader.onload = () =>{\r\n          if(reader.readyState === 2){\r\n            setImage( reader.result)\r\n          }\r\n        }\r\n        const urlFile = reader.readAsDataURL(e.target.files[0])\r\n        console.log('URL = ',reader);\r\n       \r\n      };\r\n      const getFormData = object => Object.keys(object).reduce((formData, key) => {\r\n        formData.append(key, object[key]);\r\n        return formData;\r\n      }, new FormData());\r\n      const onSubmit = async e => {\r\n        e.preventDefault();\r\n        const form_data = getFormData(formData);\r\n\r\n        // for ( var key in formData ) {\r\n        //   form_data.append(key, formData[key]);\r\n        // }\r\n        //form_data.append('data', formData);\r\n        form_data.append('image', image);\r\n        //form_data.append('file', file);\r\n        //form_data.append('filename', filename);\r\n        \r\n        try {\r\n          // const res = await axios.post(`${API}/file_upload`, form_data);\r\n    \r\n          // const { fileName } = res.data;\r\n          \r\n          // //setUploadedFile({ fileName, filePath });\r\n          // <Alert>{res.data.result.message}</Alert>\r\n          //setMessage('File Uploaded');\r\n          const resFile = await axios.get(`${API}/getfile`);\r\n          const dataFile = JSON.parse(resFile.data.data);\r\n          console.log('Get Response File = ', dataFile[0].name );\r\n          setFileimg(dataFile[0].image)\r\n          //setFileimg(res.data)\r\n        } catch (err) {\r\n          if (err) {\r\n            <Alert>There was a problem with the server</Alert>;\r\n          } else {\r\n            <Alert>{err.response.data.msg}</Alert>;\r\n          }\r\n        }\r\n      };\r\n    return (\r\n        <div className=\"form-wrapper\">\r\n            <form id=\"registration-form\" onSubmit={onSubmit}>\r\n                <div className=\"flex-inline items-3 widthDiv\">\t\t\r\n                        <label>Name: *</label>\t\r\n                        <div className=\"flex-inline widthDiv\">\r\n                            <input type=\"text\" \r\n                                    name=\"firstname\" \r\n                                    placeholder=\"Enter First Name\"\r\n                                    value={firstname}\r\n                                    onChange={onChange}  />\r\n                            <input type=\"text\"\r\n                                   name=\"middlename\" \r\n                                   placeholder=\"Enter Middle Name\"\r\n                                   value={middlename}\r\n                                   onChange={onChange} />\r\n                        </div>\r\n                </div>\r\n                <div className=\"flex-inline\">\r\n                       <label>Profile Picture:</label>\r\n                       <div id=\"registration-image\">\r\n                           <div id=\"registration-image-container\">\r\n                               <div className=\"full-row\">\r\n                                   <img src={image} alt=\"profile\" />\r\n                               </div>\r\n                               <div className=\"full-row\">\r\n                                   <input type=\"file\" \r\n                                       name=\"profile_picture\" \r\n                                       className=\"customFileInput\"\r\n                                       onChange={imageHandler}\r\n                                   />\r\n                               </div>\r\n                               <div className=\"full-row\">\r\n                                   <a href=\"\">Remove Image</a>\r\n                               </div>\r\n                               <div className=\"full-row\">\r\n                                   <img src={fileimg} alt=\"profile\" />\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                </div>\r\n                <input\r\n                    type='submit'\r\n                    value='Upload'\r\n                    className='btn btn-primary btn-block mt-4'\r\n                />    \r\n            </form>\r\n           \r\n       </div>\r\n    )\r\n}\r\nexport default UploadImage;","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\instance.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\routing\\PrivateRoute.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\config.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\alert.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\layout\\Alert.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\alert.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileHome.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\Upload.js",["358","359","360","361","362","363","364"],"import React, { useState, useRef, Fragment, useEffect } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Topbar from '../dashboard/Topbar';\r\nimport Footer from '../dashboard/Footer';\r\nimport FileHeader from './FileHeader';\r\nimport Advertisement from '../dashboard/Advertisement';\r\nimport {Redirect, Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { addFile, getFile,updateFile } from '../../actions/file';\r\nimport Spinner from '../layout/Spinner';\r\nimport Alert from '../layout/Alert';\r\nimport { updateProfile } from '../../actions/auth';\r\nconst ADMIN = process.env.REACT_APP_ADMIN;\r\n\r\nconst initialState = {\r\n  title : '',\r\n  desc : '',\r\n  filename: ''\r\n}\r\nconst Upload = ({props, addFile,getFile,updateFile,auth, file: {files, isSuccess,loading}}) => {\r\n  const [file, setFile] = useState(null); // state for storing actual image\r\n  const [previewSrc, setPreviewSrc] = useState(''); // state for storing previewImage\r\n  const [fileData, setFileData] = useState(initialState);\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const [fileLoading, setFileLoading] = useState(true);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [filePostID, setFilePostID] = useState(null);\r\n  //const [isPreviewAvailable, setIsPreviewAvailable] = useState(false); // state to show preview only for images\r\n  const dropRef = useRef(); // React ref for managing the hover state of droppable area\r\n  const propsFromLink = props.location.state;\r\n  let {id, edit} = propsFromLink;\r\n  let filteredFile;\r\n  useEffect(() => {\r\n    if (edit) {\r\n        //getPost(id);\r\n        setIsEdit(true);\r\n        if(auth.user !== null) {\r\n          if(!auth.loading){\r\n            if (fileLoading && auth.user.email !== ADMIN) {\r\n              //console.log('Calling User getFile');\r\n              getFile(auth.user._id.$oid);\r\n              setFileLoading(false)\r\n            }\r\n            else if(fileLoading && auth.user.email === ADMIN){\r\n              //console.log('Calling ADMIN getFile');\r\n              getFile(null);\r\n              setFileLoading(false)\r\n            }\r\n          }\r\n        }\r\n        filteredFile = files.filter((fl) => fl._id.$oid === id)\r\n        filteredFile = Object.assign({}, filteredFile[0]);\r\n        setFilePostID(filteredFile['postID']);\r\n        //console.log('filtered file ',filePostID);\r\n        // console.log('filtered id ',id);\r\n    } \r\n    if (!loading && filteredFile) {\r\n      const fileData = { ...initialState };\r\n      for (const key in filteredFile) {\r\n        if (key in fileData) {\r\n          fileData[key] = filteredFile[key];\r\n        }\r\n      }\r\n      setFileData(fileData);\r\n      //console.log('file data ', fileData);\r\n    }\r\n  },[loading,files, props]);\r\n  let { title, desc, filename } = fileData;\r\n  //console.log('Loading in upload = ', loading);\r\n  const handleInputChange = (event) => {\r\n    setFileData({\r\n      ...fileData,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const onDrop = (files) => {\r\n    const [uploadedFile] = files;\r\n    setFile(uploadedFile);\r\n    setIsEdit(false);\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewSrc(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(uploadedFile);\r\n    //setIsPreviewAvailable(uploadedFile.name.match(/\\.(jpeg|jpg|png)$/));\r\n    dropRef.current.style.border = '2px dashed #e9ebeb';\r\n  };\r\n\r\n  const updateBorder = (dragState) => {\r\n    if (dragState === 'over') {\r\n      dropRef.current.style.border = '2px solid #000';\r\n    } else if (dragState === 'leave') {\r\n      dropRef.current.style.border = '2px dashed #e9ebeb';\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (event) => {\r\n    event.preventDefault(); \r\n\r\n    try {\r\n      const { title, desc, filename } = fileData;\r\n      if (title.trim() !== '' && desc.trim() !== '') {\r\n        const formData = new FormData();\r\n        formData.append('title', title);\r\n        formData.append('desc', desc);\r\n        formData.append('filename', filename);\r\n        if(edit) {\r\n          \r\n          if (file) {\r\n            formData.append('file', file);\r\n          }\r\n          \r\n          setErrorMsg('');\r\n          \r\n          updateFile({formData},id, filePostID.$oid);\r\n          props.history.push('/dashboard');\r\n        }\r\n        else {\r\n          if (file) {\r\n            formData.append('file', file);  \r\n            setErrorMsg(''); \r\n            addFile({formData},id);\r\n            props.history.push('/dashboard');\r\n          } \r\n          else {\r\n            setErrorMsg('Please select a file.');\r\n          }\r\n        }\r\n        \r\n      } else {\r\n        setErrorMsg('Please enter all the field values.');\r\n      }\r\n    } catch (error) {\r\n      error.response && setErrorMsg(error.response.data);\r\n    }\r\n    \r\n  };\r\n  if(isSuccess) {\r\n    return <Redirect to = \"/dashboard\" />;\r\n  } \r\n  return loading ? (\r\n      <Spinner />\r\n  ) : (\r\n    <Fragment>   \r\n      <Container>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-9\">\r\n            <FileHeader />\r\n            <Form className=\"search-form\" onSubmit={handleOnSubmit}>\r\n                {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group controlId=\"title\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        value={title || ''}\r\n                        placeholder=\"Enter title\"\r\n                        onChange={handleInputChange}\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group controlId=\"desc\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"desc\"\r\n                      value={desc || ''}\r\n                      placeholder=\"Enter description\"\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"upload-section\">\r\n                <Dropzone\r\n                  onDrop={onDrop}\r\n                  onDragEnter={() => updateBorder('over')}\r\n                  onDragLeave={() => updateBorder('leave')}\r\n                  accept=\"image/*, application/pdf\"\r\n                  maxFiles={1}\r\n                >\r\n                  {({ getRootProps, getInputProps }) => (\r\n                    <div {...getRootProps({ className: 'drop-zone' })} ref={dropRef}>\r\n                      <input {...getInputProps()} />\r\n                      <p>Click here OR drag and drop to select a pdf file or image</p>\r\n                      {file && (\r\n                              <div>\r\n                                <strong>Selected file:</strong> {file.name}\r\n                              </div>\r\n                      )}\r\n                        {\r\n                          isEdit ? (\r\n                            <div>\r\n                              <strong>Selected file:</strong> {filename}\r\n                            </div>\r\n                          ): null\r\n                            \r\n      \r\n                        }\r\n                    </div>\r\n                  )}\r\n                </Dropzone>\r\n                {/* {previewSrc ? (\r\n                  isPreviewAvailable ? (\r\n                    <div className=\"image-preview\">\r\n                      <img className=\"preview-image\" src={previewSrc} alt=\"Preview\" />\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"preview-message\">\r\n                      <p>No preview available for this file</p>\r\n                    </div>\r\n                  )\r\n                ) : (\r\n                  <div className=\"preview-message\">\r\n                    <p>Image preview will be shown here after selection</p>\r\n                  </div>\r\n                )} */}\r\n              </div>\r\n              {\r\n                edit ? (\r\n                  <div className='update-file-btn'>\r\n                      <Button variant=\"primary\" type=\"submit\">\r\n                          Update\r\n                      </Button>\r\n                      <Link to='/dashboard'\r\n                            className='btn btn-danger'\r\n                      >\r\n                          Cancel\r\n                      </Link>\r\n                  </div>\r\n                  ):(\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                      )\r\n              }\r\n              \r\n            </Form>\r\n          </div>\r\n          <Advertisement />\r\n        </div>\r\n        \r\n      </Container>\r\n              \r\n              \r\n          \r\n     \r\n  </Fragment>\r\n    \r\n  )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  file: state.file,\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps, {addFile, getFile, updateFile})(Upload);\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FilesList.js",["365"],"import React, { useState, Fragment, useEffect } from 'react';\r\nimport download from 'downloadjs';\r\nimport axios from 'axios';\r\n// import Sidebar from '../dashboard/Sidebar';\r\n// import Topbar from '../dashboard/Topbar';\r\n// import Footer from '../dashboard/Footer';\r\nimport Spinner from '../layout/Spinner';\r\nimport { Container } from 'reactstrap';\r\nimport FileHeader from './FileHeader';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { deleteFile, getFile } from '../../actions/file';\r\nimport { deletePost } from '../../actions/post';\r\n// import Alert from '../layout/Alert';\r\nimport Advertisement from '../dashboard/Advertisement';\r\nconst API = process.env.REACT_APP_API;\r\nconst ADMIN = process.env.REACT_APP_ADMIN;\r\n\r\nconst FilesList = ({getFile, deleteFile, deletePost, auth, file:{files, loading}}) => {\r\n  //const [filesList, setFilesList] = useState([]);\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const [deleteId, setDeleteId] = useState(null);\r\n  const [postDeleteID, setPostDeleteID] = useState(null);\r\n  const [fileLoading, setFileLoading] = useState(true);\r\n  useEffect(() => {\r\n    console.log('calling filelist useEffect');\r\n    if(auth.user !== null) {\r\n      if(!auth.loading){\r\n        if (fileLoading && auth.user.email !== ADMIN) {\r\n          //console.log('Calling User getFile');\r\n          getFile(auth.user._id.$oid);\r\n          setFileLoading(false)\r\n        }\r\n        else if(fileLoading && auth.user.email === ADMIN){\r\n          //console.log('Calling ADMIN getFile');\r\n          getFile(null);\r\n          setFileLoading(false)\r\n        }\r\n      }\r\n    }\r\n  }, [getFile, auth]);\r\n  //console.log('Loading file',fileLoading);\r\n  // if(auth.user !== null) {\r\n  //   if(!auth.loading){\r\n  //     if (fileLoading && auth.user.email !== ADMIN) {\r\n  //       //console.log('Calling User getFile');\r\n  //       getFile(auth.user._id.$oid);\r\n  //       setFileLoading(false)\r\n  //     }\r\n  //     else if(fileLoading && auth.user.email === ADMIN){\r\n  //       //console.log('Calling ADMIN getFile');\r\n  //       getFile(null);\r\n  //       setFileLoading(false)\r\n  //     }\r\n  //   }\r\n  // }\r\n  const downloadFile = async (filename, mimetype) => {\r\n    try {\r\n      const result = await axios.get(`${API}/file/${filename}`, {\r\n        responseType: 'blob'\r\n      });\r\n      //console.log(\"File Return Data = \", result.data);\r\n      // const split = path.split('/');\r\n      // const filename = split[split.length - 1];\r\n      setErrorMsg('');\r\n      return download(result.data, filename, mimetype);\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        setErrorMsg('Error while downloading file. Try again later');\r\n      }\r\n    }\r\n  };\r\n\r\n  //const text = children;\r\n  const [isReadTitleMore, setIsReadTitleMore] = useState(true);\r\n  const toggleReadTitleMore = (data) => {\r\n    setIsReadTitleMore(data);\r\n  };\r\n  const [isReadMore, setIsReadMore] = useState(null);\r\n  const toggleReadMore = (data) => {\r\n    setIsReadMore(data);\r\n    //console.log('toggle data',data);\r\n  };\r\n  //Set ID for delete\r\n  const fileDeleteId = (id, pID) => {\r\n    //console.log('Dellete id ',id);\r\n    setDeleteId(id);\r\n    setPostDeleteID(pID);\r\n  }\r\n  return (\r\n    <Fragment>\r\n        \r\n      <Container>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-9\">\r\n            <FileHeader />\r\n            <div className=\"files-container\">\r\n              {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n              {\r\n                loading ? <Spinner /> : (\r\n                  <table className=\"files-table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Type</th>\r\n                        <th>Title</th>\r\n                        <th>Description</th>\r\n                        <th>Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {files.length > 0 ? (\r\n                        files.map(\r\n                          ({ _id, title, desc,postID, filename, user, file_mimetype }, index) => (\r\n                            <tr key={index}>\r\n                              <td className=\"file-type\">\r\n                                  {(filename.split('.').pop() === 'pdf')?(\r\n                                    <i className=\"fas fa-file-pdf\"></i>\r\n                                  ):(\r\n                                    <i className=\"fas fa-image\"></i>\r\n                                  )}\r\n                              </td>\r\n                              <td className=\"file-title\">\r\n                              {isReadTitleMore === index ? title : title.slice(0, 20)}\r\n                                {title.length > 20 ? (\r\n                                isReadTitleMore === index ? (\r\n                                    <span onClick={()=>toggleReadTitleMore(index+files.length)} className=\"read-or-hide\">\r\n                                    Read less ▲\r\n                                    </span>\r\n                                  ): (\r\n                                    <span onClick={()=>toggleReadTitleMore(index)} className=\"read-or-hide\">\r\n                                    Read more ▼\r\n                                    </span>\r\n                                  )\r\n                                ) : null }\r\n                              </td>\r\n                              <td className=\"file-description\">\r\n                                {isReadMore === index ? desc : desc.slice(0, 50)}\r\n                                {desc.length > 50 ? (\r\n                                  isReadMore === index ? (\r\n                                    <span onClick={()=>toggleReadMore(index+files.length)} className=\"read-or-hide\">\r\n                                    Read less ▲\r\n                                    </span>\r\n                                  ): (\r\n                                    <span onClick={()=>toggleReadMore(index)} className=\"read-or-hide\">\r\n                                    Read more ▼\r\n                                    </span>\r\n                                  )\r\n                                  \r\n                                ) : null }\r\n                                \r\n                              </td>\r\n                              <td className=\"file-actions\">\r\n                                { auth.user._id.$oid === user.userId.$oid || auth.user.email === ADMIN ?\r\n                                  (<Link to={{\r\n                                        pathname: '/addfile',\r\n                                        state: {\r\n                                                    id: _id.$oid,\r\n                                                    edit:true\r\n                                                },\r\n                                      }}\r\n                                      className=\"action\"\r\n                                  >\r\n                                  <i className=\"fas fa-edit\"></i>\r\n                                  </Link>) : null\r\n                                }\r\n                              \r\n                                <Link to={`/view/${filename}`} className=\"action\">\r\n                                  <i className=\"fas fa-eye\"></i>\r\n                                </Link>\r\n                              \r\n                                <Link to=\"/list\" className=\"action\" onClick={() =>\r\n                                    downloadFile(filename, file_mimetype)\r\n                                  }>\r\n                                  <i className=\"fas fa-file-download\"></i>\r\n                                </Link>\r\n                            \r\n                              { auth.user._id.$oid === user.userId.$oid || auth.user.email === ADMIN ?\r\n                                \r\n                                (<a\r\n                                  href='/#'\r\n                                  className='action'\r\n                                  data-toggle='modal'\r\n                                  data-target='#fileDeleteModal'\r\n                                  onClick={() => fileDeleteId(_id.$oid, postID.$oid)}\r\n                                >\r\n                                  <i className=\"fas fa-trash-alt\"></i>\r\n                                </a>):null\r\n                              }\r\n                              </td>\r\n                            </tr>\r\n                          )\r\n                        )\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan={3} style={{ fontWeight: '300' }}>\r\n                            No files found. Please add some.\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                )\r\n              }\r\n            \r\n            </div>       \r\n          </div>\r\n          <Advertisement />\r\n        </div>\r\n          \r\n      </Container>\r\n        <div className=\"modal fade\" id=\"fileDeleteModal\" tabIndex=\"-1\" \r\n              role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n              aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Delete File</h5>\r\n                    <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                      <span aria-hidden=\"true\">×</span>\r\n                    </button>\r\n                </div>\r\n              <div className=\"modal-body\">Do you want to delete the file?</div>\r\n              <div className=\"modal-footer\">\r\n                <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\r\n                <Link to=\"/list\" className=\"btn btn-primary\" \r\n                      onClick={() => {\r\n                        deleteFile(deleteId);\r\n                        deletePost(postDeleteID);\r\n                      }}\r\n                      data-dismiss=\"modal\"\r\n                >\r\n                  Delete\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  file: state.file\r\n});\r\nexport default connect(mapStateToProps, {getFile, deleteFile, deletePost})(FilesList);","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileHeader.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileView.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\Profile.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\ProfilePage.js",["366","367","368"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../layout/Spinner';\r\nimport Advertisement from '../dashboard/Advertisement';\r\nimport { loadUser, updateProfile, getAllUsers } from '../../actions/auth';\r\nimport { getFile } from '../../actions/file';\r\n//import { setAlert } from '../../actions/alert';\r\nimport Alert from '../layout/Alert';\r\nimport Compress from 'browser-image-compression';\r\nimport {Image} from 'cloudinary-react';\r\nimport download from 'downloadjs';\r\nimport axios from 'axios';\r\nimport {\r\n  sendFriendRequest,\r\n  cancelFriendRequest\r\n} from '../../actions/friends';\r\n\r\nconst ADMIN = process.env.REACT_APP_ADMIN;\r\nconst IMAGEURL = process.env.REACT_APP_CLOUDINARY;\r\nconst API = process.env.REACT_APP_API;\r\nconst initialState = {\r\n  firstname: '',\r\n  middlename: '',\r\n  lastname: '',\r\n  user_category: '',\r\n  student_type: '',\r\n  job_type: '',\r\n  specialization_type: '',\r\n  email: '',\r\n  phone: '',\r\n  password: '',\r\n  passwordconfirm: '',\r\n  address: '',\r\n  country: '',\r\n  image: '',\r\n};\r\n\r\nconst ProfilePage = ({\r\n  auth: { user, loading, allUsers },\r\n  file:{files},\r\n  friend: {myFriend, friendSuggestion, loadingFriend},\r\n  getAllUsers,\r\n  sendFriendRequest,\r\n  cancelFriendRequest,\r\n  loadUser,\r\n  updateProfile,\r\n  props,\r\n  getFile,\r\n}) => {\r\n  const [file, setFile] = useState('');\r\n  const [viewImage, setViewImage] = useState('../../img/user-profile.png');\r\n  const [showImageFlag, setShowImageFlag] = useState(false);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const [fileLoading, setFileLoading] = useState(true);\r\n  const [isSendRequest, setIsSendRequest] = useState(false);\r\n  const [loadFriend, setLoadFriend] = useState(false);\r\n  //const [ownUser, setOwnUser] = useState(null);\r\n  let isSearch = false, userEmail = null, otherUserId=null, ownUser=[];\r\n  useEffect(() => {\r\n    console.log('Calling profilePage useEffect');\r\n    \r\n      getAllUsers();\r\n      loadUser();\r\n    \r\n    \r\n    if (!loading && user) {\r\n      const profileData = { ...initialState };\r\n      for (const key in user) {\r\n        if (key in profileData) profileData[key] = user[key];\r\n      }\r\n      //console.log(\"Profile Data = \", profileData);\r\n      setFormData(profileData);\r\n    }\r\n    //getPendingFrUser();\r\n    setIsSendRequest(isSendRequest);\r\n    //getFriends();\r\n    //getFriendSuggestion();\r\n    setTimeout(() => {\r\n      setLoadFriend(false) \r\n    }, 5000);\r\n    \r\n  }, [loading, user, loadUser, getAllUsers]);\r\n  console.log('Loading in Profilepage', loading);\r\n  //console.log('User in ProfilePage', user);\r\n  if (props.location.state) {\r\n    //console.log('Calling location state');\r\n    if (user !== null) {\r\n      userEmail = user.email;\r\n      otherUserId = props.location.state.id;\r\n      ownUser = user;\r\n      \r\n      if (user._id.$oid !== otherUserId) {\r\n        if(fileLoading) {\r\n          //console.log('Search in file profile page ', files);\r\n          getFile(otherUserId);\r\n          setFileLoading(false);\r\n        }\r\n        \r\n        let userSearch = [];\r\n        userSearch = allUsers.filter(\r\n          (us) => us._id.$oid === otherUserId\r\n        );\r\n        if(userSearch.length > 0){\r\n            user = Object.assign({}, userSearch[0]);\r\n            isSearch = true;\r\n        }\r\n        \r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  \r\n\r\n  const {\r\n    firstname,\r\n    middlename,\r\n    lastname,\r\n    user_category,\r\n    student_type,\r\n    job_type,\r\n    specialization_type,\r\n    email,\r\n    phone,\r\n    address,\r\n    country,\r\n    image,\r\n  } = formData;\r\n  const addFriendRequest = (id) => {\r\n    sendFriendRequest(id);\r\n    setIsSendRequest(!isSendRequest);\r\n    setLoadFriend(true);\r\n  };\r\n  const cancelFrRequest = (id) => {\r\n    cancelFriendRequest(id);\r\n    setIsSendRequest(!isSendRequest);\r\n    setLoadFriend(true);\r\n  };\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  \r\n  const imageHandler = async (e) => {\r\n    setFile(e.target.files[0]);\r\n    var fileUpload = e.target.files[0];\r\n    if(fileUpload) setViewImage(URL.createObjectURL(e.target.files[0]));\r\n    //var convertedBlobFile;\r\n    //console.log('Calling image handlaer');\r\n    const options = {\r\n      //maxSizeMB: 5,\r\n      maxWidth: 300, // the max width of the output image, defaults to 1920px\r\n      maxHeight: 300, // the max height of the output image, defaults to 1920px\r\n      resize: true,\r\n      useWebWorker: true,\r\n    };\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = async () => {\r\n      if (reader.readyState === 2) {\r\n        try {\r\n          const compressedFile = await Compress(fileUpload, options);\r\n          //setFile(compressedFile);\r\n          //processfile(compressedFile, options);\r\n          \r\n        } catch (e) {\r\n          // Show the user a toast message or notification that something went wrong while compressing file\r\n          alert('File size must be less than 10MB');\r\n          console.log('Error in compress = ', e);\r\n        }\r\n        setShowImageFlag(true);\r\n        // console.log('Image flag ', showImageFlag);\r\n        // console.log('View Image ', viewImage);\r\n      }\r\n    };\r\n    if (fileUpload) reader.readAsDataURL(fileUpload);\r\n  };\r\n\r\n  const getFormData = (object) =>\r\n    Object.keys(object).reduce((formData, key) => {\r\n      formData.append(key, object[key]);\r\n      return formData;\r\n    }, new FormData());\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const form_data = getFormData(formData);\r\n    form_data.append('file', file);\r\n    if (showImageFlag) form_data.append('viewImage', viewImage);\r\n    else form_data.append('viewImage', image);\r\n    form_data.append('student_type', student_type);\r\n    form_data.append('job_type', job_type);\r\n    form_data.append('specialization_type', specialization_type);\r\n    //console.log('Form Data = ', form_data);\r\n    updateProfile(user._id.$oid, { form_data });\r\n    //console.log('Return Value = ', returnValue);\r\n  };\r\n\r\n  const downloadFile = async (filename, mimetype) => {\r\n    try {\r\n      const result = await axios.get(`${API}/file/${filename}`, {\r\n        responseType: 'blob'\r\n      });\r\n      //console.log(\"File Return Data = \", result.data);\r\n      // const split = path.split('/');\r\n      // const filename = split[split.length - 1];\r\n      setErrorMsg('');\r\n      return download(result.data, filename, mimetype);\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        setErrorMsg('Error while downloading file. Try again later');\r\n      }\r\n    }\r\n  };\r\n  \r\n  return (\r\n    !loadFriend && user !== null ? (\r\n        <Fragment>\r\n          <div className='container-fluid'>\r\n            <div className='d-sm-flex align-items-center justify-content-between mb-4'>\r\n              <h1 className='h3 mb-0 text-gray-800'>Profile</h1>\r\n            </div>\r\n            <div id='profile-view' className='row'>\r\n              <div className='col-sm-12 col-md-6 col-lg-9'>\r\n                <div id='profile-image-card' className='common-card'>\r\n                  {userEmail === ADMIN || !isSearch ? (\r\n                    <Link\r\n                      to={{\r\n                        pathname: '/profile',\r\n                        state: {\r\n                                    id: user._id.$oid,\r\n                                  },\r\n                      }}\r\n                      className='pen picture-pen'\r\n                      data-toggle='modal'\r\n                      data-target='#myModal'\r\n                    >\r\n                      <i className='fas fa-camera'></i>\r\n                    </Link>\r\n                  ) : null}\r\n                  <div id='profile-image'>\r\n                    <div id='profile-image-container'> \r\n                    <Image cloudName=\"daf1cgy1c\" publicId={IMAGEURL+user.image}/>\r\n                    {/* <img src={window.location.origin+'../api/image/HM0010701-F.jpg'} alt='profile' /> */}\r\n                      {/* <img src={'F:/Coursera/React_Flask/SocialNetwork/frontend/api/image/garden-festival.jpg'} alt='profile' /> \r\n                      <img src={' http://127.0.0.1:8080/image/garden-festival.jpg'} alt='profile' />  */}\r\n                      {/* <h6>{user.name}</h6> */}\r\n                    </div>\r\n                    \r\n                    {/* {!isSearch ? (\r\n                      <Link to='/profile' className='profile-add-link'>\r\n                        Add Contact\r\n                      </Link>\r\n                    ) : (\r\n                      <Link\r\n                        to='/profile'\r\n                        className='profile-add-link'\r\n                        style={{ cursor: 'default' }}\r\n                        onClick={(event) => event.preventDefault()}\r\n                      >\r\n                        Add Contact\r\n                      </Link>\r\n                    )} */}\r\n                    {/* {!isSearch ? (\r\n                      <Link to='/profile' className='profile-message-link'>\r\n                        Message\r\n                      </Link>\r\n                    ) : (\r\n                      <Link\r\n                        to='/profile'\r\n                        className='profile-message-link'\r\n                        style={{ cursor: 'default' }}\r\n                        onClick={(event) => event.preventDefault()}\r\n                      >\r\n                        Message\r\n                      </Link>\r\n                    )} */}\r\n                    {\r\n                      isSearch ? (\r\n                        myFriend.length > 0 ? (\r\n                          myFriend.filter(\r\n                            (usr) => usr._id.$oid === user._id.$oid\r\n                          ).length > 0 ? (\r\n                            <button\r\n                              style={{ cursor: 'default' }} \r\n                              className='profile-add-link'>\r\n                              Already Friend\r\n                            </button>\r\n                          ):(\r\n                            user.hasOwnProperty('friend_pending') ? (\r\n                              user.friend_pending.filter(\r\n                                (usr) => usr.$id.$oid === ownUser._id.$oid\r\n                              ).length > 0 ? (\r\n                                <>\r\n                                  <Link\r\n                                    to={{\r\n                                pathname: '/profile',\r\n                                state: {\r\n                                  id: user._id.$oid,\r\n                                },\r\n                              }}\r\n                              className='profile-add-link'\r\n                                    onClick={() =>\r\n                                      cancelFrRequest(user._id.$oid)\r\n                                    }\r\n                            \r\n                                  >\r\n                                    Cancel Request\r\n                                  </Link>\r\n                                </>\r\n                              ) : (\r\n                                <>\r\n                                  <Link\r\n                                    to={{\r\n                                pathname: '/profile',\r\n                                state: {\r\n                                  id: user._id.$oid,\r\n                                },\r\n                              }}\r\n                              className='profile-add-link'\r\n                                    onClick={() =>\r\n                                      addFriendRequest(user._id.$oid)\r\n                                    }\r\n                                  >\r\n                                    Add Friend\r\n                                  </Link>\r\n                                </>\r\n                              )\r\n                            ) : (\r\n                              <>\r\n                                <Link\r\n                                  to={{\r\n                                pathname: '/profile',\r\n                                state: {\r\n                                  id: user._id.$oid,\r\n                                },\r\n                              }}\r\n                              className='profile-add-link'\r\n                                  onClick={() =>\r\n                                    sendFriendRequest(user._id.$oid)\r\n                                  }\r\n                                >\r\n                                  Add Friend\r\n                                </Link>\r\n                              </>\r\n                            )\r\n                          )\r\n                        ) : (\r\n                          user.hasOwnProperty('friend_pending') ? (\r\n                              user.friend_pending.filter(\r\n                                (usr) => usr.$id.$oid === ownUser._id.$oid\r\n                              ).length > 0 ? (\r\n                                <>\r\n                                  <Link\r\n                                    to={{\r\n                                pathname: '/profile',\r\n                                state: {\r\n                                  id: user._id.$oid,\r\n                                },\r\n                              }}\r\n                              className='profile-add-link'\r\n                                    onClick={() =>\r\n                                      cancelFrRequest(user._id.$oid)\r\n                                    }\r\n                            \r\n                                  >\r\n                                    Cancel Request\r\n                                  </Link>\r\n                                </>\r\n                              ) : (\r\n                                <>\r\n                                  <Link\r\n                                    to={{\r\n                                pathname: '/profile',\r\n                                state: {\r\n                                  id: user._id.$oid,\r\n                                },\r\n                              }}\r\n                              className='profile-add-link'\r\n                                    onClick={() =>\r\n                                      addFriendRequest(user._id.$oid)\r\n                                    }\r\n                                  >\r\n                                    Add Friend\r\n                                  </Link>\r\n                                </>\r\n                              )\r\n                            ) : (\r\n                              <>\r\n                                <Link\r\n                                  to={{\r\n                                pathname: '/profile',\r\n                                state: {\r\n                                  id: user._id.$oid,\r\n                                },\r\n                              }}\r\n                              className='profile-add-link'\r\n                                  onClick={() =>\r\n                                    sendFriendRequest(user._id.$oid)\r\n                                  }\r\n                                >\r\n                                  Add Friend\r\n                                </Link>\r\n                              </>\r\n                            )\r\n                          )\r\n                      ) : (null)\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <div className='common-card'>\r\n                  <h5>Personal Info</h5>\r\n                  {!isSearch ? (\r\n                    <Link\r\n                      to='/profile'\r\n                      className='pen'\r\n                      data-toggle='modal'\r\n                      data-target='#myModal'\r\n                    >\r\n                      <i className='fas fa-pen'></i>\r\n                    </Link>\r\n                  ) : null}\r\n                  <p>\r\n                    <label>Name</label> {user.name}\r\n                  </p>\r\n                  <p>\r\n                    <label>Email</label> {user.email}\r\n                  </p>\r\n                  <p>\r\n                    <label>Phone</label> {user.phone}\r\n                  </p>\r\n                </div>\r\n                <div className='common-card'>\r\n                  <h5>User Type</h5>\r\n                  {!isSearch ? (\r\n                    <Link\r\n                      to='/profile'\r\n                      className='pen'\r\n                      data-toggle='modal'\r\n                      data-target='#myModal'\r\n                    >\r\n                      <i className='fas fa-pen'></i>\r\n                    </Link>\r\n                  ) : null}\r\n                  <p>\r\n                    <label>User Category</label>\r\n                    {user.user_category}\r\n                  </p>\r\n                  <p>\r\n                    <label>Job</label>\r\n                    {user.job_type}\r\n                  </p>\r\n                  <p>\r\n                    <label>Specialization</label>\r\n                    {user.specialization_type}\r\n                  </p>\r\n                </div>\r\n                <div className='common-card'>\r\n                  <h5>Other Info</h5>\r\n                  {!isSearch ? (\r\n                    <Link\r\n                      to='/profile'\r\n                      className='pen'\r\n                      data-toggle='modal'\r\n                      data-target='#myModal'\r\n                    >\r\n                      <i className='fas fa-pen'></i>\r\n                    </Link>\r\n                  ) : null}\r\n                  <p>\r\n                    <label>Address</label>\r\n                    {user.address}\r\n                  </p>\r\n                  <p>\r\n                    <label>Country</label>\r\n                    {user.country}\r\n                  </p>\r\n                </div>\r\n                { user._id.$oid === otherUserId ? \r\n                (<div className='common-card'>\r\n                  <h5>User's File</h5>\r\n                  {!isSearch ? (\r\n                    <Link\r\n                      to='/profile'\r\n                      className='pen'\r\n                      data-toggle='modal'\r\n                      data-target='#myModal'\r\n                    >\r\n                      <i className='fas fa-pen'></i>\r\n                    </Link>\r\n                  ) : null}\r\n                  <div className=\"files-container\">\r\n                        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n                        {\r\n                          loading ? <Spinner /> : (\r\n                            <table className=\"files-table\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>Type</th>\r\n                                  <th>Title</th>\r\n                                  <th>Description</th>\r\n                                  <th>Actions</th>\r\n                                \r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {files.length > 0 ? (\r\n                                  files.map(\r\n                                    ({ _id, title, desc, filename, user, file_mimetype }, index) => (\r\n                                      <tr key={index}>\r\n                                        <td className=\"file-type\">\r\n                                          {(filename.split('.').pop() === 'pdf')?(\r\n                                            <i className=\"fas fa-file-pdf\"></i>\r\n                                          ):(\r\n                                            <i className=\"fas fa-image\"></i>\r\n                                          )}\r\n                                        </td>\r\n                                        <td className=\"file-title\">{title}</td>\r\n                                        <td className=\"file-description\">{desc}</td>\r\n                                        <td className=\"file-actions\">\r\n                                          <Link to={`/view/${filename}`} className=\"profile-action\" >\r\n                                            <i className=\"fas fa-eye\"></i>\r\n                                          </Link>\r\n                                        \r\n                                          <Link to=\"/profile\" className=\"profile-action\" onClick={() =>\r\n                                              downloadFile(filename, file_mimetype)\r\n                                            }>\r\n                                            <i className=\"fas fa-file-download\"></i>\r\n                                          </Link>\r\n                                        </td>\r\n                                        \r\n                                      </tr>\r\n                                    )\r\n                                  )\r\n                                ) : (\r\n                                  <tr>\r\n                                    <td colSpan={3} style={{ fontWeight: '300' }}>\r\n                                      No files found. Please add some.\r\n                                    </td>\r\n                                  </tr>\r\n                                )}\r\n                              </tbody>\r\n                            </table>\r\n                          )\r\n                        }\r\n                          \r\n                      </div>    \r\n                  </div>):null\r\n                }\r\n\r\n                <div className='modal fade' id='myModal'>\r\n                  <div className='modal-dialog modal-dialog-centered'>\r\n                    <div className='modal-content'>\r\n                      <form onSubmit={onSubmit}>\r\n                        <div className='modal-header'>\r\n                          <h4 className='modal-title'>Edit Profile</h4>\r\n                          <button\r\n                            type='button'\r\n                            className='close'\r\n                            data-dismiss='modal'\r\n                          >\r\n                            &times;\r\n                          </button>\r\n                        </div>\r\n\r\n                        <div className='modal-body'>\r\n                          <fieldset>\r\n                            <legend>Name *</legend>\r\n                            <div className='form-group'>\r\n                              <input\r\n                                type='text'\r\n                                className='form-control'\r\n                                placeholder='Enter First Name'\r\n                                id='firstname'\r\n                                name='firstname'\r\n                                value={firstname}\r\n                                onChange={onChange}\r\n                              />\r\n                            </div>\r\n                            <div className='form-group'>\r\n                              <input\r\n                                type='text'\r\n                                className='form-control'\r\n                                placeholder='Enter Middle Name'\r\n                                id='middlename'\r\n                                name='middlename'\r\n                                value={middlename}\r\n                                onChange={onChange}\r\n                              />\r\n                            </div>\r\n                            <div className='form-group'>\r\n                              <input\r\n                                type='text'\r\n                                className='form-control'\r\n                                placeholder='Enter Last Name'\r\n                                id='lastname'\r\n                                name='lastname'\r\n                                value={lastname}\r\n                                onChange={onChange}\r\n                              />\r\n                            </div>\r\n                          </fieldset>\r\n                          <fieldset>\r\n                            {/* <legend>User Type</legend>\r\n                             <div className='form-group'>\r\n                              <select\r\n                                name='student_type'\r\n                                className='form-control'\r\n                                value={student_type}\r\n                                onChange={onChange}\r\n                              >\r\n                                <option value=''>Select Student</option>\r\n                                <option value='bsc'>BSc.</option>\r\n                                <option value='msc'>MSc</option>\r\n                                <option value='phd'>PhD</option>\r\n                              </select>\r\n                            </div>  */}\r\n                            <div className='form-group'>\r\n                            <label htmlFor='user_category'>User Category</label>\r\n                            <input\r\n                              type='text'\r\n                              className='form-control'\r\n                              placeholder='Enter Educational Qualification'\r\n                              id='user_category' \r\n                              name='user_category'\r\n                              value={user_category}\r\n                              onChange={onChange}\r\n                              disabled\r\n                            />\r\n                            </div>\r\n                            <div className='form-group'>\r\n                            <label htmlFor='student_type'>Educational Qualification</label>\r\n                            <input\r\n                              type='text'\r\n                              className='form-control'\r\n                              placeholder='Enter Educational Qualification'\r\n                              id='student_type'\r\n                              name='student_type'\r\n                              value={student_type}\r\n                              onChange={onChange}\r\n                            />\r\n                          </div>\r\n                            <div className='form-group'>\r\n                            <label htmlFor='job_type'>Add/Edit Job</label>\r\n                            <input\r\n                              type='text'\r\n                              className='form-control'\r\n                              placeholder='Enter Job'\r\n                              id='job_type'\r\n                              name='job_type'\r\n                              value={job_type}\r\n                              onChange={onChange}\r\n                            />\r\n                          </div>\r\n                            {/* <div className='form-group'>\r\n                              <select\r\n                                name='job_type'\r\n                                className='form-control'\r\n                                value={job_type}\r\n                                onChange={onChange}\r\n                              >\r\n                                <option value=''>Add/Edit Job</option>\r\n                                <option value='job1'>Job 1</option>\r\n                                <option value='job2'>Job 2</option>\r\n                                <option value='job3'>Job 3</option>\r\n                              </select>\r\n                            </div> */}\r\n                            {/* <div className='form-group'>\r\n                              <select\r\n                                name='specialization_type'\r\n                                className='form-control'\r\n                                value={specialization_type}\r\n                                onChange={onChange}\r\n                              >\r\n                                <option value=''>Select Specialization</option>\r\n                                <option value='1'>Option1</option>\r\n                                <option value='2'>Option2</option>\r\n                                <option value='3'>Option3</option>\r\n                              </select>\r\n                            </div> */}\r\n                          </fieldset>\r\n                          \r\n                          <div className='form-group'>\r\n                            <label htmlFor='email'>Email Address *</label>\r\n                            <input\r\n                              type='email'\r\n                              className='form-control'\r\n                              placeholder='Enter email'\r\n                              id='email'\r\n                              name='email'\r\n                              value={email}\r\n                              onChange={onChange}\r\n                            />\r\n                          </div>\r\n                          <div className='form-group'>\r\n                            <label htmlFor='name'>Phone</label>\r\n                            <input\r\n                              type='text'\r\n                              className='form-control'\r\n                              placeholder='Enter Phone'\r\n                              id='phone'\r\n                              name='phone'\r\n                              value={phone}\r\n                              onChange={onChange}\r\n                            />\r\n                          </div>\r\n                          <div className='form-group'>\r\n                            <label htmlFor='name'>Address</label>\r\n                            <input\r\n                              type='text'\r\n                              className='form-control'\r\n                              placeholder='Enter Address'\r\n                              id='address'\r\n                              name='address'\r\n                              value={address}\r\n                              onChange={onChange}\r\n                            />\r\n                          </div>\r\n                      \r\n                          <div className='form-group'>\r\n                            <label htmlFor='name'>Profile Picture:</label>\r\n                            <input\r\n                              type='file'\r\n                              className='custom-select-input'\r\n                              id='exampleFormControlFile1'\r\n                              accept='image/*'\r\n                              onChange={imageHandler}\r\n                            />\r\n                            <div\r\n                              id='modal-profile-picture'\r\n                              className='text-center'\r\n                            >\r\n                              <img\r\n                                src={showImageFlag === true ? viewImage :  IMAGEURL+image}\r\n                                alt='profile'\r\n                              />\r\n                            </div>\r\n                        </div>\r\n                        {/*\r\n                          <fieldset>\r\n                            <legend>Referred By *</legend>\r\n                            <div className='form-group'>\r\n                              <input\r\n                                type='text'\r\n                                className='form-control'\r\n                                placeholder='Enter Name'\r\n                                name='referrer_name'\r\n                                value={referrer_name}\r\n                                onChange={onChange}\r\n                              />\r\n                            </div>\r\n                            <div className='form-group'>\r\n                              <input\r\n                                type='email'\r\n                                className='form-control'\r\n                                placeholder='Enter Email'\r\n                                name='referrer_email'\r\n                                value={referrer_email}\r\n                                onChange={onChange}\r\n                              />\r\n                            </div>\r\n                        </fieldset>\r\n                          */}\r\n                          <Alert />\r\n                        </div>\r\n\r\n                        <div className='modal-footer'>\r\n                          <button\r\n                            className='btn btn-danger'\r\n                            type='button'\r\n                            data-dismiss='modal'\r\n                          >\r\n                            Close\r\n                          </button>\r\n                          <button type='submit' className='btn btn-secondary'>\r\n                            Save\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Advertisement />\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Spinner />\r\n      )\r\n   \r\n  );\r\n};\r\nProfilePage.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  updateProfile: PropTypes.func.isRequired,\r\n  loadUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  file: state.file,\r\n  friend: state.friend\r\n});\r\nexport default connect(mapStateToProps, { \r\n                    getAllUsers,\r\n                    sendFriendRequest,\r\n                    cancelFriendRequest,\r\n                    loadUser,\r\n                    updateProfile,\r\n                    getFile})\r\n(ProfilePage);\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\Advertisement.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\ForgotPassword.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\ProfileSearchView.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\NamesContainer.js",[],["369","370"],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\Name.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\file.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\file.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\ResetPassword.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\HomePage.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\advertisement\\ImageSlider.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\advertisement\\SquareSlider.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\TopSidebar.js",["371","372"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n//import { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { logout } from '../../actions/auth';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from 'autosuggest-highlight/match';\r\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse';\r\nimport Pages from './Pages';\r\nimport Footer from './Footer';\r\nimport Alert from '../layout/Alert';\r\nimport { toggleCssClass } from '../../actions/auth';\r\nconst ADMIN = process.env.REACT_APP_ADMIN;\r\nconst IMAGEURL = process.env.REACT_APP_CLOUDINARY;\r\n\r\nconst TopSidebar = ({ props, auth: { user, allUsers },\r\n  friend: {pendingFriend},\r\n  toggleCssClass, logout }) => {\r\n  const [value, setValue] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [addClass, setAddClass] = useState(false);\r\n  const [stopCondition, setStopCondition] = useState(true);\r\n  // useEffect(() => {\r\n  //     if(window.innerWidth > 767) {\r\n  //         setSideToggle(true);\r\n  //     }\r\n  //     else {\r\n  //         setSideToggle(false);\r\n  //     }\r\n  // }, [])\r\n  //console.log('Togggsdgfd ', addClass);\r\n  const toggleClass = () => {\r\n    //console.log('Tobbar addclass before set ', addClass);\r\n    setAddClass(!addClass);\r\n    //setSideToggle(!sideToggle);\r\n    //toggleCssClass(addClass);\r\n    //console.log('Tobbar addclass after set ', addClass);\r\n  };\r\n  if (window.innerWidth < 767) {\r\n    if (stopCondition) {\r\n      //console.log('Calling window', addClass);\r\n      setAddClass(!addClass);\r\n      setStopCondition(false);\r\n    }\r\n  }\r\n  \r\n  function escapeRegexCharacters(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n  }\r\n  function getSuggestions(value) {\r\n    const escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n    if (escapedValue === '') {\r\n      return [];\r\n    }\r\n\r\n    const regex = new RegExp('\\\\b' + escapedValue, 'i');\r\n\r\n    return allUsers.filter((user) => regex.test(getSuggestionValue(user)));\r\n  }\r\n\r\n  function getSuggestionValue(suggestion) {\r\n    return `${suggestion.firstname} ${suggestion.middlename} ${suggestion.lastname}`;\r\n  }\r\n\r\n  function renderSuggestion(suggestion, { query }) {\r\n    // console.log('Sugestion ', suggestion);\r\n    // console.log('Query ', query);\r\n    const suggestionText = `${suggestion.firstname} ${suggestion.middlename} ${suggestion.lastname}`;\r\n    const matches = AutosuggestHighlightMatch(suggestionText, query);\r\n    const parts = AutosuggestHighlightParse(suggestionText, matches);\r\n    return (\r\n      <span className='suggestion-content'>\r\n        <img\r\n          src={IMAGEURL+suggestion.image}\r\n          alt='user'\r\n          className='user-img-profile rounded-circle'\r\n        />\r\n        <span className='name'>\r\n          <Link\r\n            to={{\r\n              pathname: '/profile',\r\n              state: {\r\n                id: suggestion._id.$oid,\r\n              },\r\n            }}\r\n          >\r\n            {parts.map((part, index) => {\r\n              const className = part.highlight ? 'highlight' : null;\r\n              return (\r\n                <span className={className} key={index}>\r\n                  {part.text}\r\n                </span>\r\n              );\r\n            })}\r\n          </Link>\r\n        </span>\r\n      </span>\r\n    );\r\n  }\r\n  const onChange = (event, { newValue, method }) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(value));\r\n    //console.log('Suggestions list ', suggestions);\r\n  };\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const submitSearchData = async (e) => {\r\n    e.preventDefault();\r\n    // let userArrayData = allUsers.filter(\r\n    //   (user) => user.name.toLowerCase() === value.toLowerCase()\r\n    // );\r\n    // let userData = Object.assign({}, userArrayData[0]);\r\n    // //console.log('User in search = ', userData)\r\n    // if (value === '') alert('User input search data is not given');\r\n    // if (userArrayData.length > 0) {\r\n    //   //console.log('Calling userData');\r\n    //   props.history.push('/profile',{\r\n    //             id: userData._id.$oid,\r\n    //           });\r\n    //   // return (\r\n    //   //   <Redirect\r\n    //   //     to={{\r\n    //   //       pathname: '/profile',\r\n    //   //       state: {\r\n    //   //         id: userData._id.$oid,\r\n    //   //       },\r\n    //   //     }}\r\n    //   //   >\r\n    //   //     {' '}\r\n    //   //     {value}{' '}\r\n    //   //   </Redirect>\r\n    //   // );\r\n    // } else \r\n    if (value !== '') {\r\n      props.history.push('/searchuser',{\r\n        value: value,\r\n      });\r\n      //alert('Searching user is not found');\r\n    }\r\n  };\r\n  const inputProps = {\r\n    placeholder: 'Search for...',\r\n    value,\r\n    onChange: onChange,\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <ul\r\n        className={`navbar-nav bgGradientPrimary sidebar sidebar-dark accordion \r\n                        ${addClass ? 'toggled' : ''}`}\r\n        id='accordionSidebar'\r\n      >\r\n        <Link\r\n          to={{\r\n            pathname: '/dashboard',\r\n            state: {\r\n              showMyPost: false,\r\n            },\r\n          }}\r\n          id='brand-image'\r\n        >\r\n          <img\r\n            src={process.env.PUBLIC_URL + '/img/Agriculturist-logo_150x191.png'}\r\n            alt='Agriculturist Logo'\r\n          />\r\n          {/* <img src=\"../../../public/img/Social_Fish2.png\" alt=\"Agriculturist Logo\"/> */}\r\n          <span>Agriculturist</span>\r\n        </Link>\r\n        <hr className='sidebar-divider my-0' />\r\n        <li className='nav-item active'>\r\n          <Link\r\n            className='nav-link collapsed'\r\n            to={{\r\n              pathname: '/dashboard',\r\n              state: {\r\n                showMyPost: false,\r\n              },\r\n            }}\r\n            // onClick={() => toggleCssClass(true)}\r\n          >\r\n            <i className='fas fa-fw fa-tachometer-alt'></i>\r\n            <span>Dashboard</span>\r\n          </Link>\r\n        </li>\r\n        <li className='nav-item'>\r\n          <a\r\n            className='nav-link collapsed'\r\n            href='/#'\r\n            data-toggle='collapse'\r\n            data-target='#collapsePosts'\r\n            aria-expanded='true'\r\n            aria-controls='collapsePosts'\r\n          >\r\n            <i className='fas fa-user-plus' aria-hidden='true'></i>\r\n            <span>Posts</span>\r\n          </a>\r\n          <div\r\n            id='collapsePosts'\r\n            className='collapse'\r\n            aria-labelledby='headingPages'\r\n            data-parent='#accordionSidebar'\r\n          >\r\n            <div className='bg-white py-2 collapse-inner rounded'>\r\n              <Link\r\n                className='nav-link collapse-item'\r\n                to={{\r\n                  pathname: '/addpost',\r\n                  state: {\r\n                    id: null,\r\n                    edit: false,\r\n                  },\r\n                }}\r\n                // onClick={() => toggleCssClass(true)}\r\n              >\r\n                Add Post\r\n              </Link>\r\n              <Link\r\n                className='collapse-item'\r\n                to={{\r\n                  pathname: '/dashboard',\r\n                  state: {\r\n                    showMyPost: true,\r\n                  },\r\n                }}\r\n                // onClick={() => toggleCssClass(true)}\r\n              >\r\n                Show MyPost\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </li>\r\n\r\n        <li className='nav-item'>\r\n          <a\r\n            className='nav-link collapsed'\r\n            href='/#'\r\n            data-toggle='collapse'\r\n            data-target='#collapseFiles'\r\n            aria-expanded='true'\r\n            aria-controls='collapseFiles'\r\n          >\r\n            <i className='fas fa-fw fa-folder'></i>\r\n            <span>Files</span>\r\n          </a>\r\n          <div\r\n            id='collapseFiles'\r\n            className='collapse'\r\n            aria-labelledby='headingPages'\r\n            data-parent='#accordionSidebar'\r\n          >\r\n            <div className='bg-white py-2 collapse-inner rounded'>\r\n              <Link className='collapse-item' to={{\r\n                                            pathname: '/addfile',\r\n                                            state: {\r\n                                                id: null,\r\n                                                edit: false\r\n                                            }\r\n                                        }}\r\n              >\r\n                Add File\r\n              </Link>\r\n              <Link className='collapse-item' to='/list'>\r\n                Show Files\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </li>\r\n        <li className='nav-item'>\r\n          <a\r\n            className='nav-link collapsed'\r\n            href='/#'\r\n            data-toggle='collapse'\r\n            data-target='#collapseFriends'\r\n            aria-expanded='true'\r\n            aria-controls='collapseFiles'\r\n          >\r\n            <i className='fas fa-user-friends'></i>\r\n            <span>Friends</span>\r\n          </a>\r\n          <div\r\n            id='collapseFriends'\r\n            className='collapse'\r\n            aria-labelledby='headingPages'\r\n            data-parent='#accordionSidebar'\r\n          >\r\n            <div className='bg-white py-2 collapse-inner rounded'>\r\n              <Link className='collapse-item' to='/friends'>\r\n                Add Friends\r\n              </Link>\r\n              <Link className='collapse-item' to='/friendlist'>\r\n                My Friends\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </li>\r\n        {user !== null ? (\r\n          user.email === ADMIN ? (\r\n            <li className='nav-item'>\r\n              <Link to='/userlist' className='nav-link collapsed'>\r\n                <i className='fa fa-user'></i>\r\n                <span>UserList</span>\r\n              </Link>\r\n            </li>\r\n          ) : null\r\n        ) : null}\r\n\r\n        <hr className='sidebar-divider' />\r\n\r\n        <hr className='sidebar-divider d-none d-md-block' />\r\n\r\n        <div className='text-center d-none d-md-inline'>\r\n          <button\r\n            className='rounded-circle border-0'\r\n            id='sidebarToggle'\r\n            onClick={toggleClass}\r\n          ></button>\r\n        </div>\r\n      </ul>\r\n      <div id='content-wrapper' className='d-flex flex-column'>\r\n        <div id='content'>\r\n          <nav\r\n            className='navbar navbar-expand navbar-light \r\n                            bg-white topbar mb-4 static-top shadow'\r\n          >\r\n            <button\r\n              id='sidebarToggleTop'\r\n              onClick={toggleClass}\r\n              className='btn btn-link d-md-none rounded-circle mr-3'\r\n            >\r\n              <i className='fa fa-bars'></i>\r\n            </button>\r\n\r\n            {/* <div id='dashboard-header-dropdown' className='dropdown'>\r\n              <a\r\n                className='btn dropdown-toggle'\r\n                href='/#'\r\n                role='button'\r\n                id='dropdownMenuLink'\r\n                data-toggle='dropdown'\r\n                aria-haspopup='true'\r\n                aria-expanded='false'\r\n              >\r\n                Applications\r\n              </a>\r\n              <div\r\n                className='dropdown-menu dropdown-menu-left shadow animated--fade-in'\r\n                aria-labelledby='dropdownMenuLink'\r\n              >\r\n                <Link\r\n                  className='dropdown-item'\r\n                  to={{\r\n                    pathname: '/dashboard',\r\n                    state: {\r\n                      showMyPost: false,\r\n                    },\r\n                  }}\r\n                >\r\n                  Pages\r\n                </Link>\r\n                <Link\r\n                  className='dropdown-item'\r\n                  to={{\r\n                    pathname: '/dashboard',\r\n                    state: {\r\n                      showMyPost: false,\r\n                    },\r\n                  }}\r\n                >\r\n                  Groups\r\n                </Link>\r\n              </div>\r\n            </div> */}\r\n\r\n            <form\r\n              className='d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search'\r\n              onSubmit={submitSearchData}\r\n            >\r\n              <div className='input-group'>\r\n                <Autosuggest\r\n                  suggestions={suggestions}\r\n                  onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n                  onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n                  getSuggestionValue={getSuggestionValue}\r\n                  renderSuggestion={renderSuggestion}\r\n                  inputProps={inputProps}\r\n                />\r\n                <div className='input-group-append'>\r\n                  <button className='btn btn-primary' type='submit'>\r\n                    <i className='fas fa-search fa-sm'></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n\r\n            <ul className='navbar-nav ml-auto'>\r\n              <li className='nav-item dropdown no-arrow d-sm-none'>\r\n                <a\r\n                  className='nav-link dropdown-toggle'\r\n                  href='/#'\r\n                  id='searchDropdown'\r\n                  role='button'\r\n                  data-toggle='dropdown'\r\n                  aria-haspopup='true'\r\n                  aria-expanded='false'\r\n                >\r\n                  <i className='fas fa-search fa-fw'></i>\r\n                </a>\r\n                <div\r\n                  className='dropdown-menu dropdown-menu-right p-3 \r\n                                            shadow animated--grow-in'\r\n                  aria-labelledby='searchDropdown'\r\n                >\r\n                  <form\r\n                    className='form-inline mr-auto w-100 navbar-search'\r\n                    onSubmit={submitSearchData}\r\n                  >\r\n                    <div className='input-group'>\r\n                      <Autosuggest\r\n                        suggestions={suggestions}\r\n                        onSuggestionsFetchRequested={\r\n                          onSuggestionsFetchRequested\r\n                        }\r\n                        onSuggestionsClearRequested={\r\n                          onSuggestionsClearRequested\r\n                        }\r\n                        getSuggestionValue={getSuggestionValue}\r\n                        renderSuggestion={renderSuggestion}\r\n                        inputProps={inputProps}\r\n                      />\r\n                      <div className='input-group-append'>\r\n                        <button className='btn btn-primary' type='submit'>\r\n                          <i className='fas fa-search fa-sm'></i>\r\n                        </button>\r\n                      </div>\r\n                      {/* <input type=\"text\" \r\n                                                className=\"form-control bg-light border-0 small\"\r\n                                                placeholder=\"Search for...\" aria-label=\"Search\"\r\n                                                aria-describedby=\"basic-addon2\" /> */}\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </li>\r\n\r\n              <li className='nav-item dropdown no-arrow mx-1'>\r\n                <a\r\n                  className='nav-link dropdown-toggle'\r\n                  href='/#'\r\n                  id='alertsDropdown'\r\n                  role='button'\r\n                  data-toggle='dropdown'\r\n                  aria-haspopup='true'\r\n                  aria-expanded='false'\r\n                >\r\n                  <i className='fas fa-bell fa-fw'></i>\r\n                  <span className='badge badge-danger badge-counter'>\r\n                    {pendingFriend.length > 0 ? pendingFriend.length : null}\r\n                  </span>\r\n                </a>\r\n                {pendingFriend.length > 0 ? (\r\n                  <div\r\n                    className='dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in'\r\n                    aria-labelledby='alertsDropdown'\r\n                  >\r\n                    <h6 className='dropdown-header'>Notification Center</h6>\r\n                    {pendingFriend.length > 0\r\n                      ? pendingFriend.map((pendingUser) => (\r\n                          <Link\r\n                            className='dropdown-item d-flex align-items-center'\r\n                            to=\"/friends\"\r\n                            key={pendingUser._id.$oid}\r\n                          >\r\n                            <div className='mr-3'>\r\n                              <div className='icon-circle bg-primary'>\r\n                                <img\r\n                                  className='img-profile rounded-circle'\r\n                                  src={\r\n                                    pendingUser !== null\r\n                                      ? IMAGEURL+pendingUser.image\r\n                                      : null\r\n                                  }\r\n                                  alt={pendingUser.name}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div>\r\n                              <span className='font-weight-bold'>\r\n                              <span\r\n                              style={{\r\n                                fontSize: 15,\r\n                                fontWeight: 'bold',\r\n                                fontFamily: 'cursive',\r\n                                color: 'green'\r\n                              }}\r\n                            >\r\n                              {pendingUser.name}\r\n                            </span>{' '}\r\n                            wants to be your friend.\r\n                              </span>\r\n                            </div>\r\n                          </Link>\r\n                        ))\r\n                      : null}\r\n                  </div>\r\n                ) : null}\r\n              </li>\r\n\r\n              {/* <li className='nav-item dropdown no-arrow mx-1'>\r\n                <a\r\n                  className='nav-link dropdown-toggle'\r\n                  href='/#'\r\n                  id='messagesDropdown'\r\n                  role='button'\r\n                  data-toggle='dropdown'\r\n                  aria-haspopup='true'\r\n                  aria-expanded='false'\r\n                >\r\n                  <i className='fas fa-envelope fa-fw'></i>\r\n                  <span className='badge badge-danger badge-counter'></span>\r\n                </a>\r\n              </li> */}\r\n\r\n              <div className='topbar-divider d-none d-sm-block'></div>\r\n\r\n              <li className='nav-item dropdown no-arrow'>\r\n                <a\r\n                  href='/#'\r\n                  className='nav-link dropdown-toggle'\r\n                  id='userDropdown'\r\n                  role='button'\r\n                  data-toggle='dropdown'\r\n                  aria-haspopup='true'\r\n                  aria-expanded='false'\r\n                >\r\n                  <span className='mr-2 d-none d-lg-inline text-gray-600 small'>\r\n                    {user !== null ? user.name : 'UserName'}{' '}\r\n                  </span>\r\n                  <img\r\n                    className='img-profile rounded-circle'\r\n                    src={user !== null ? IMAGEURL+user.image : null}\r\n                    alt='userName'\r\n                  />\r\n                </a>\r\n                <div\r\n                  className='dropdown-menu dropdown-menu-right \r\n                                            shadow animated--grow-in'\r\n                  aria-labelledby='userDropdown'\r\n                >\r\n                  <Link className='dropdown-item' to='/profile'>\r\n                    <i className='fas fa-user fa-sm fa-fw mr-2 text-gray-400'></i>\r\n                    Profile\r\n                  </Link>\r\n                  <div className='dropdown-divider'></div>\r\n                  <a\r\n                    href='/#'\r\n                    className='dropdown-item'\r\n                    data-toggle='modal'\r\n                    data-target='#logoutModal'\r\n                  >\r\n                    <i className='fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400'></i>\r\n                    Logout\r\n                  </a>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          <Alert />\r\n          <Pages props={props} />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n\r\n      {/* {searchUser.length > 0 ? \r\n                        <ListGroup className=\"list-group\">\r\n                            {searchUser.map(user=>(<ListGroupItem key={user.key}><Link to=\"/profile\">{user.name}</Link></ListGroupItem>))}\r\n                        </ListGroup> : null\r\n                    } */}\r\n      <div\r\n        className='modal fade'\r\n        id='logoutModal'\r\n        tabIndex='-1'\r\n        role='dialog'\r\n        aria-labelledby='exampleModalLabel'\r\n        aria-hidden='true'\r\n      >\r\n        <div className='modal-dialog' role='document'>\r\n          <div className='modal-content'>\r\n            <div className='modal-header'>\r\n              <h5 className='modal-title' id='exampleModalLabel'>\r\n                Ready to Leave?\r\n              </h5>\r\n              <button\r\n                className='close'\r\n                type='button'\r\n                data-dismiss='modal'\r\n                aria-label='Close'\r\n              >\r\n                <span aria-hidden='true'>×</span>\r\n              </button>\r\n            </div>\r\n            <div className='modal-body'>\r\n              Select \"Logout\" below if you are ready to end your current\r\n              session.\r\n            </div>\r\n            <div className='modal-footer'>\r\n              <button\r\n                className='btn btn-secondary'\r\n                type='button'\r\n                data-dismiss='modal'\r\n              >\r\n                Cancel\r\n              </button>\r\n              <Link to='/' className='btn btn-primary' onClick={logout}>\r\n                Logout\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div>\r\n                <Modal isOpen={display} toggle={toggle} className=\"suggestion-container\">\r\n                    <ModalHeader toggle={toggle}>Users List</ModalHeader>\r\n                    <ModalBody>\r\n                        hello\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>  */}\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  friend: state.friend\r\n});\r\nexport default connect(mapStateToProps, { logout, toggleCssClass })(TopSidebar);\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\ShowAdvertise.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\UserList.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\AddFriend.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\FriendList.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\AddFriendList.js",["373","374","375"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport store from '../../store';\r\nimport Advertisement from '../dashboard/Advertisement';\r\nimport { getAllUsers, loadUser } from '../../actions/auth';\r\nimport {\r\n  sendFriendRequest,\r\n  acceptFriendRequest,\r\n  deleteFriendRequest,\r\n  cancelFriendRequest,\r\n  getPendingFrUser,\r\n  getFriendSuggestion\r\n} from '../../actions/friends';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../layout/Spinner';\r\nconst IMAGEURL = process.env.REACT_APP_CLOUDINARY;\r\n\r\nconst AddFriendList = ({\r\n  auth: { allUsers, user },\r\n  friend: {pendingFriend, friendSuggestion, loadingFriend},\r\n  getAllUsers,\r\n  sendFriendRequest,\r\n  acceptFriendRequest,\r\n  deleteFriendRequest,\r\n  cancelFriendRequest,\r\n  getPendingFrUser,\r\n  getFriendSuggestion,\r\n  loadUser,\r\n}) => {\r\n  const [isSendRequest, setIsSendRequest] = useState(false);\r\n  // const dispatch = useDispatch()\r\n  // const [friendSuggestionList, setFriendSuggestionList] = useState([])\r\n  const [loadFriend, setLoadFriend] = useState(loadingFriend);\r\n  useEffect(() => {\r\n    console.log('calling useEffect of AddFriendList');\r\n    loadUser();\r\n    getPendingFrUser();\r\n    setIsSendRequest(isSendRequest);\r\n    //getFriends();\r\n    getFriendSuggestion();\r\n    setTimeout(() => {\r\n      setLoadFriend(false) \r\n    }, 2000);\r\n    \r\n  }, [getAllUsers, loadUser, isSendRequest, getPendingFrUser]);\r\n  //const [pendingFriend, setPendingFriend] = useState([]);\r\n  //const [addFriendList, setAddFriendList] = useState([]);\r\n  // const [isSetPenFr, setIsSetPenFr] = useState(true);\r\n  \r\n//   const getFriends = async () => {\r\n//     let userInfo = []\r\n\r\n//     dispatch(getFriendSuggestion((res, err) => {\r\n//         if (res?.data?.data) {\r\n//             setLoadFriend(false)\r\n//             userInfo = JSON.parse(res.data.data)\r\n//             console.log('Friend suggestion in callback ',userInfo);\r\n//         }\r\n//     }))\r\n//     setFriendSuggestionList(userInfo || [])\r\n// }\r\n  const addFriendRequest = (id) => {\r\n    sendFriendRequest(id);\r\n    setIsSendRequest(!isSendRequest);\r\n    setLoadFriend(true);\r\n    // setTimeout(() => {\r\n    //   setLoadFriend(false) \r\n    // }, 2000);\r\n    //window.location.replace('/friends');\r\n  };\r\n  const cancelFrRequest = (id) => {\r\n    cancelFriendRequest(id);\r\n    setIsSendRequest(!isSendRequest);\r\n    setLoadFriend(true);\r\n    // setTimeout(() => {\r\n    //   setLoadFriend(false) \r\n    // }, 2000);\r\n    //window.location.reload(false);\r\n    //window.location.replace('/friends');\r\n  };\r\n  const deleteFrRequest = (id) => {\r\n    deleteFriendRequest(id);\r\n    setIsSendRequest(!isSendRequest);\r\n    setLoadFriend(true);\r\n    //window.location.replace('/friends');\r\n  };\r\n  const acceptFrRequest = (id) => {\r\n    acceptFriendRequest(id);\r\n    setIsSendRequest(!isSendRequest);\r\n    setLoadFriend(true);\r\n    //window.location.replace('/friends');\r\n  };\r\n  console.log('user friends loading', loadFriend);\r\n  //console.log('Suggestion Friend', friendSuggestion);\r\n  //console.log(suggestedFriend);\r\n\r\n  return loadFriend ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <div className='container-fluid'>\r\n        <div\r\n          className='d-sm-flex align-items-center \r\n                            justify-content-between mb-4'\r\n        >\r\n          <h1 className='h3 mb-0 text-gray-800'>Friends</h1>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-sm-12 col-md-6 col-lg-9'>\r\n            <div className='card shadow mb-4'>\r\n              <div className='card-header py-3'>\r\n                <h6 className='m-0 font-weight-bold text-primary'>\r\n                  Friend Requests\r\n                </h6>\r\n              </div>\r\n              {pendingFriend.length > 0\r\n                ? pendingFriend.map((pendingFr) => (\r\n                    <div\r\n                      key={pendingFr._id.$oid}\r\n                      id='posts-list'\r\n                      className='card-body friendCard'\r\n                    >\r\n                      <div className='post-card card'>\r\n                        <div className='row'>\r\n                          <div className='col-sm-12 col-md-12 col-lg-4'>\r\n                            <img\r\n                              src={IMAGEURL+pendingFr.image}\r\n                              alt={pendingFr.name}\r\n                              className='friendImageProfile'\r\n                            />\r\n                          </div>\r\n                          <div className='col-sm-12 col-md-12 col-lg-8'>\r\n                            <Link\r\n                              to={{\r\n                                pathname: '/profile',\r\n                                state: {\r\n                                  id: pendingFr._id.$oid,\r\n                                },\r\n                              }}\r\n                            >\r\n                              <h4>{pendingFr.name}</h4>\r\n                            </Link>\r\n\r\n                            <Link\r\n                              to='/friends'\r\n                              onClick={() =>\r\n                                acceptFrRequest(pendingFr._id.$oid)\r\n                              }\r\n                              className='btn btn-primary'\r\n                              style={{ marginRight: 5 }}\r\n                            >\r\n                              Accept Request\r\n                            </Link>\r\n                            <Link\r\n                              to='/friends'\r\n                              onClick={() =>\r\n                                deleteFrRequest(pendingFr._id.$oid)\r\n                              }\r\n                              className='btn btn-secondary'\r\n                            >\r\n                              Delete Request\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                : null}\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            <div className='card shadow mb-4'>\r\n              <div className='card-header py-3'>\r\n                <h6 className='m-0 font-weight-bold text-primary'>\r\n                  People You May Know\r\n                </h6>\r\n              </div>\r\n              {friendSuggestion.length > 0\r\n                ? friendSuggestion.map((frUser) => (\r\n                    <div\r\n                      key={frUser._id.$oid}\r\n                      id='posts-list'\r\n                      className='card-body friendCard'\r\n                    >\r\n                      <div className='post-card card'>\r\n                        <div className='row'>\r\n                          <div className='col-sm-12 col-md-12 col-lg-4'>\r\n                            <img\r\n                              src={IMAGEURL+frUser.image}\r\n                              alt='User'\r\n                              className='friendImageProfile'\r\n                            />\r\n                          </div>\r\n                          <div className='col-sm-12 col-md-12 col-lg-8'>\r\n                            <Link\r\n                              to={{\r\n                                pathname: '/profile',\r\n                                state: {\r\n                                  id: frUser._id.$oid,\r\n                                },\r\n                              }}\r\n                            >\r\n                              <h4>{frUser.name}</h4>\r\n                            </Link>\r\n                            {frUser.hasOwnProperty('friend_pending') ? (\r\n                              frUser.friend_pending.filter(\r\n                                (fr) => fr.$id.$oid === user._id.$oid\r\n                              ).length > 0 ? (\r\n                                <>\r\n                                  <Link\r\n                                    to='/friends'\r\n                                    onClick={() =>\r\n                                      cancelFrRequest(frUser._id.$oid)\r\n                                    }\r\n                                    className='btn btn-secondary'\r\n                                  >\r\n                                    Cancel Request\r\n                                  </Link>\r\n                                </>\r\n                              ) : (\r\n                                <>\r\n                                  <Link\r\n                                    to='/friends'\r\n                                    onClick={() =>\r\n                                      addFriendRequest(frUser._id.$oid)\r\n                                    }\r\n                                    className='btn btn-primary'\r\n                                  >\r\n                                    Add Friend\r\n                                  </Link>\r\n                                </>\r\n                              )\r\n                            ) : (\r\n                              <>\r\n                                <Link\r\n                                  to='/friends'\r\n                                  onClick={() =>\r\n                                    sendFriendRequest(frUser._id.$oid)\r\n                                  }\r\n                                  className='btn btn-primary'\r\n                                >\r\n                                  Add Friend\r\n                                </Link>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                : null}\r\n            </div>\r\n          </div>\r\n\r\n          <Advertisement />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nAddFriendList.propTypes = {\r\n  //setAlert: PropTypes.func.isRequired,\r\n  getAllUsers: PropTypes.func.isRequired,\r\n  sendFriendRequest: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  friend: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  friend: state.friend\r\n});\r\nexport default connect(mapStateToProps, {\r\n  getAllUsers,\r\n  sendFriendRequest,\r\n  acceptFriendRequest,\r\n  deleteFriendRequest,\r\n  cancelFriendRequest,\r\n  getPendingFrUser,\r\n  loadUser,\r\n  getFriendSuggestion\r\n})(AddFriendList);\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\actions\\friends.js",["376"],"import {\r\n    GET_PENDINGFRIEND,\r\n    GET_MYFRIEND,\r\n    GET_FRIENDSUGGESTION,\r\n    ERROR_REQUEST,\r\n    REMOVE_FRIEND,\r\n    DELETE_REQUEST,\r\n    ACCEPT_REQUEST\r\n} from './types';\r\nimport axios from 'axios';\r\nimport {instance} from './instance';\r\nimport { setAlert } from './alert';\r\n//import {config} from './config';\r\nimport {getAllUsers, loadUser} from './auth';\r\nconst API = process.env.REACT_APP_API;\r\n\r\n\r\n\r\n//Load pending user friend\r\nexport const getPendingFrUser = () => async dispatch => {\r\n  //console.log('Calling pending user function');\r\n  const config = {\r\n    headers : {\r\n        'Authorization': `Bearer ${localStorage.token}`,\r\n        'Content-Type':'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Credentials': true\r\n    }\r\n  };\r\n  try {\r\n    const res = await instance.get(`${API}/getPendFrUser`, config);\r\n    console.log('All pending User',JSON.parse(res.data.data));\r\n    if(res.data.result.isError === 'true') {\r\n      dispatch(setAlert(res.data.result.message, 'danger'));\r\n    }\r\n    else {\r\n      dispatch({\r\n        type: GET_PENDINGFRIEND,\r\n        payload: JSON.parse(res.data.data)\r\n      });\r\n    }\r\n  } catch (err) {\r\n    //const errors = err.response;\r\n    dispatch(setAlert('Something went wrong', 'danger'));\r\n    console.log('Error in getting all pending user = ',err);\r\n    dispatch({\r\n      type: ERROR_REQUEST\r\n    });\r\n  }\r\n}\r\n\r\n//Load pending user friend\r\nexport const getUserMyFr = () => async dispatch => {\r\n  //console.log('Calling pending user function');\r\n  const config = {\r\n    headers : {\r\n        'Authorization': `Bearer ${localStorage.token}`,\r\n        'Content-Type':'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Credentials': true\r\n    }\r\n  };\r\n  try {\r\n    const res = await instance.get(`${API}/getUserFriend`, config);\r\n    console.log('All User Friend',JSON.parse(res.data.data));\r\n    if(res.data.result.isError === 'true') {\r\n      dispatch(setAlert(res.data.result.message, 'danger'));\r\n    }\r\n    else {\r\n      dispatch({\r\n        type: GET_MYFRIEND,\r\n        payload: JSON.parse(res.data.data)\r\n      });\r\n    }\r\n  } catch (err) {\r\n    //const errors = err.response;\r\n    dispatch(setAlert('Something went wrong', 'danger'));\r\n    console.log('Error in getting all users friend = ',err);\r\n    dispatch({\r\n      type: ERROR_REQUEST\r\n    });\r\n  }\r\n}\r\n\r\n//Load user friend suggestion\r\nexport const getFriendSuggestion = () => async (dispatch) => {\r\n  //console.log('Calling pending user function');\r\n  const config = {\r\n    headers : {\r\n        'Authorization': `Bearer ${localStorage.token}`,\r\n        'Content-Type':'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Credentials': true\r\n    }\r\n  };\r\n  try {\r\n    const res = await instance.get(`${API}/getFriendSuggestion`, config);\r\n    console.log('All Suggested Friend',JSON.parse(res.data.data));\r\n    if(res.data.result.isError === 'true') {\r\n      dispatch(setAlert(res.data.result.message, 'danger'));\r\n    }\r\n    else {\r\n      dispatch({\r\n        type: GET_FRIENDSUGGESTION,\r\n        payload: JSON.parse(res.data.data)\r\n      });\r\n    }\r\n    //callback(res, null)\r\n  } catch (err) {\r\n    //const errors = err.response;\r\n    dispatch(setAlert('Something went wrong', 'danger'));\r\n    console.log('Error in getting friend Suggestion = ',err);\r\n    dispatch({\r\n      type: ERROR_REQUEST\r\n    });\r\n    //callback(null, err.response)\r\n  }\r\n}\r\n\r\n\r\n// Send Friend request\r\nexport const sendFriendRequest = (id) => async dispatch => {\r\n  //console.log(localStorage.token);\r\n    const config = {\r\n      headers : {\r\n          'Authorization': `Bearer ${localStorage.token}`,\r\n          'Content-Type':'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Access-Control-Allow-Credentials': true\r\n      }\r\n    };\r\n    try {\r\n      //console.log('Calling SendFriendRq', id);\r\n      //console.log(config);\r\n      const res = await instance.get(`${API}/friendReq/${id}`, config);\r\n      //console.log('Friend response = ',res.data);\r\n      if(res.data.result.isError === 'false') {\r\n        // console.log('calling getalluser from friend');\r\n        //getAllUsers();\r\n        await getFriendSuggestion();\r\n        await loadUser();\r\n        await getAllUsers();\r\n        //console.log('loaduser response ',resp);\r\n        dispatch(setAlert(res.data.result.message, 'success'));\r\n        //window.location.reload(false);\r\n        // dispatch({\r\n        //   type: ADD_FRIEND,\r\n        //   payload: JSON.parse(res.data.data)\r\n        // });\r\n      }\r\n      else {\r\n        dispatch(setAlert(res.data.result.message, 'danger'));\r\n        dispatch({\r\n          type: ERROR_REQUEST\r\n        });\r\n      }\r\n      \r\n    } catch (err) {\r\n      console.log('Error in sending friend request',err);\r\n      dispatch(setAlert('Something went wrong', 'danger'));\r\n      dispatch({\r\n        type: ERROR_REQUEST\r\n      });\r\n    }\r\n  };\r\n\r\n  // Accept Friend request\r\nexport const acceptFriendRequest = (id) => async dispatch => {\r\n  //console.log(localStorage.token);\r\n    const config = {\r\n      headers : {\r\n          'Authorization': `Bearer ${localStorage.token}`,\r\n          'Content-Type':'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Access-Control-Allow-Credentials': true\r\n      }\r\n    };\r\n    try {\r\n      //console.log('Calling SendFriendRq', id);\r\n      //console.log(config);\r\n      const res = await instance.get(`${API}/friendReqAccept/${id}`, config);\r\n      //console.log('Accept Friend response = ',res.data);\r\n      if(res.data.result.isError === 'false') {\r\n        //getAllUsers();\r\n        getPendingFrUser();\r\n        loadUser();\r\n        dispatch(setAlert(res.data.result.message, 'success'));\r\n        //window.location.reload(false);\r\n        dispatch({\r\n          type: ACCEPT_REQUEST,\r\n          payload: id\r\n        });\r\n      }\r\n      else {\r\n        dispatch(setAlert(res.data.result.message, 'danger'));\r\n        dispatch({\r\n          type: ERROR_REQUEST\r\n        });\r\n      }\r\n      \r\n    } catch (err) {\r\n      console.log('Error in sending friend request',err);\r\n      dispatch(setAlert('Something went wrong', 'danger'));\r\n      dispatch({\r\n        type: ERROR_REQUEST\r\n      });\r\n    }\r\n  };\r\n\r\n// Delete Friend request\r\nexport const deleteFriendRequest = (id) => async dispatch => {\r\n  //console.log(localStorage.token);\r\n    const config = {\r\n      headers : {\r\n          'Authorization': `Bearer ${localStorage.token}`,\r\n          'Content-Type':'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Access-Control-Allow-Credentials': true\r\n      }\r\n    };\r\n    try {\r\n      //console.log('Calling SendFriendRq', id);\r\n      //console.log(config);\r\n      const res = await instance.get(`${API}/friendReqDel/${id}`, config);\r\n      //console.log('Delete Friend response = ',res.data);\r\n      if(res.data.result.isError === 'false') {\r\n        //getAllUsers();\r\n        getFriendSuggestion();\r\n        getPendingFrUser();\r\n        loadUser();\r\n        dispatch(setAlert(res.data.result.message, 'success'));\r\n        dispatch({\r\n          type: DELETE_REQUEST,\r\n          payload: id\r\n        });\r\n      }\r\n      else {\r\n        dispatch(setAlert(res.data.result.message, 'danger'));\r\n        dispatch({\r\n          type: ERROR_REQUEST\r\n        });\r\n      }\r\n      \r\n    } catch (err) {\r\n      console.log('Error in sending friend request',err);\r\n      dispatch(setAlert('Something went wrong', 'danger'));\r\n      // dispatch({\r\n      //   type: ERROR_FRIEND\r\n      // });\r\n    }\r\n  };\r\n// Delete Friend request\r\nexport const removeFriendFromFrList = (id) => async dispatch => {\r\n  //console.log(localStorage.token);\r\n    const config = {\r\n      headers : {\r\n          'Authorization': `Bearer ${localStorage.token}`,\r\n          'Content-Type':'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Access-Control-Allow-Credentials': true\r\n      }\r\n    };\r\n    try {\r\n      //console.log('Calling RemoveFriendRq', id);\r\n      //console.log(config);\r\n      const res = await instance.get(`${API}/rmFriend/${id}`, config);\r\n      //console.log('Remove Friend response = ',res.data);\r\n      if(res.data.result.isError === 'false') {\r\n        //getAllUsers();\r\n        getUserMyFr();\r\n        loadUser();\r\n        dispatch(setAlert(res.data.result.message, 'success'));\r\n        dispatch({\r\n          type: REMOVE_FRIEND,\r\n          payload: id\r\n        });\r\n      }\r\n      else {\r\n        dispatch(setAlert(res.data.result.message, 'danger'));\r\n        dispatch({\r\n          type: ERROR_REQUEST\r\n        });\r\n      }\r\n      \r\n    } catch (err) {\r\n      console.log('Error in removing friend request',err);\r\n      dispatch(setAlert('Something went wrong', 'danger'));\r\n      dispatch({\r\n        type: ERROR_REQUEST\r\n      });\r\n    }\r\n  };\r\n  // Cancel Friend request\r\nexport const cancelFriendRequest = (id) => async dispatch => {\r\n  //console.log(localStorage.token);\r\n    const config = {\r\n      headers : {\r\n          'Authorization': `Bearer ${localStorage.token}`,\r\n          'Content-Type':'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Access-Control-Allow-Credentials': true\r\n      }\r\n    };\r\n    try {\r\n      //console.log('Calling SendFriendRq', id);\r\n      //console.log(config);\r\n      const res = await instance.get(`${API}/cancelFrndReq/${id}`, config);\r\n      //console.log('Cancel Friend response = ',res.data);\r\n      if(res.data.result.isError === 'false') {\r\n        //getAllUsers();\r\n        getFriendSuggestion();\r\n        await loadUser();\r\n        await getAllUsers();\r\n        dispatch(setAlert(res.data.result.message, 'success'));\r\n        //window.location.reload(false);\r\n      //   dispatch({\r\n      //     type: ADD_FRIEND,\r\n      //     payload: JSON.parse(res.data.data)\r\n      //   });\r\n      }\r\n      else {\r\n        dispatch(setAlert(res.data.result.message, 'danger'));\r\n        dispatch({\r\n          type: ERROR_REQUEST\r\n        });\r\n      }\r\n      \r\n    } catch (err) {\r\n      console.log('Error in sending friend request',err);\r\n      dispatch(setAlert('Something went wrong', 'danger'));\r\n      dispatch({\r\n        type: ERROR_REQUEST\r\n      });\r\n    }\r\n  };","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\reducers\\friends.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\FriendListContainer.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\AddFile.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\AllFIleViewer.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\auth\\UserListContainer.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FilesListContainer.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\file\\FileViewContainer.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\SearchUserList.js",["377","378"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../layout/Spinner';\r\nimport Advertisement from '../dashboard/Advertisement';\r\nimport { getAllUsers } from '../../actions/auth';\r\nconst IMAGEURL = process.env.REACT_APP_CLOUDINARY;\r\n\r\nconst SearchUserList = ({props,getAllUsers, auth:{allUsers, loading} }) => {\r\n    useEffect(() => {\r\n        //console.log('calling useEffect of SearchUserList');\r\n        if(allUsers.length < 1){\r\n            getAllUsers();\r\n        }\r\n        if(props.location.state ) {\r\n            //setDisplayedUser(allUsers);\r\n            var searchQuery = props.location.state.value.toLowerCase();\r\n            var userList = allUsers.filter(function(user) {\r\n                var searchValue = user.name.toLowerCase();\r\n                return searchValue.indexOf(searchQuery) !== -1;\r\n              });\r\n            // console.log('UserList ', userList);\r\n            // console.log('Value ', searchQuery);\r\n            setDisplayedUser(userList);\r\n            //setIsSearchComplete(false);\r\n        }\r\n       \r\n      }, [getAllUsers, props.location.state, allUsers]);\r\n    const [displayedUser, setDisplayedUser] = useState([]);\r\n    \r\n    return (\r\n        <Fragment>\r\n            <div className='container-fluid'>\r\n                <div className='row'>\r\n                    <div className='col-sm-12 col-md-6 col-lg-9'>\r\n                        <div className='card shadow mb-4'>\r\n                            <div className='card-header py-3'>\r\n                                <h6 className='m-0 font-weight-bold text-primary'>Searched User</h6>\r\n                            </div>\r\n                            {displayedUser.length > 0 ? (\r\n                            displayedUser.map((userFr) => (\r\n                            <Fragment key={userFr._id.$oid}>\r\n                                <div\r\n                                    id='posts-list'\r\n                                    className='card-body friendCard'\r\n                                >\r\n                                    <div className='post-card card'>\r\n                                        <div className='row'>\r\n                                            <div className='col-sm-12 col-md-4 col-lg-4'>\r\n                                                <img\r\n                                                src={IMAGEURL+userFr.image}\r\n                                                alt='User'\r\n                                                className='friendImageProfile'\r\n                                                />\r\n                                            </div>\r\n                                            <div className='col-sm-12 col-md-8 col-lg-8'>\r\n                                                <Link\r\n                                                    to={{\r\n                                                        pathname: '/profile',\r\n                                                        state: {\r\n                                                        id: userFr._id.$oid,\r\n                                                        },\r\n                                                    }}\r\n                                                    \r\n                                                >\r\n                                                    <h4 style={{\r\n                                                        paddingTop: 15,\r\n                                                        paddingBottom: 0,\r\n                                                    }}>{userFr.name}</h4>\r\n                                                </Link>\r\n                                                <h6 style={{\r\n                                                    paddingLeft: 8,\r\n                                                }}>\r\n                                                   User Type {': '} {userFr.user_category}\r\n                                                </h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                            ))\r\n                         ) : (\r\n                            <p\r\n                            style={{\r\n                                paddingLeft: 20,\r\n                                paddingTop: 10,\r\n                                fontWeight: 'bold',\r\n                            }}\r\n                            >\r\n                            No user is matched. Search again with exact keyword....\r\n                            </p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <Advertisement />\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n  });\r\nexport default connect(mapStateToProps, { getAllUsers})(\r\n    SearchUserList\r\n  );\r\n\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\profile\\SearchUserListContainer.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Share\\SharePage.js",["379"],"\r\nimport { Button } from 'react-bootstrap';\r\nimport React, { Fragment } from 'react';\r\nimport Sidebar from '../dashboard/Sidebar';\r\nimport Footer from '../dashboard/Footer';\r\nimport Topbar from '../dashboard/Topbar';\r\nimport SharePageDetail from './SharePageDetail'; \r\nconst SharePage = (props) => {\r\n    return (\r\n      <Fragment>\r\n            <div id=\"wrapper\">\r\n                <Sidebar />\r\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                    <div id=\"content\">\r\n                        <Topbar props={props}/>\r\n                        <SharePageDetail match={props.match}/>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default SharePage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\ShareModal.js",["380","381"],"// import React, { useState } from 'react';\r\n// import { Modal, Button } from 'react-bootstrap';\r\n\r\n// const ShareModal = () => {\r\n//     const [show, setShow] = useState(false);\r\n\r\n//   const handleClose = () => setShow(false);\r\n//   const handleShow = () => setShow(true);\r\n//     return (\r\n//         <div>\r\n//             <Button variant=\"primary\" onClick={handleShow}>\r\n//         Launch Bootstrap Modal\r\n//       </Button>\r\n\r\n//       <Modal show={show} onHide={handleClose}>\r\n\r\n//         <Modal.Header closeButton>\r\n//           <Modal.Title>Heading Text</Modal.Title>\r\n//         </Modal.Header>\r\n\r\n//         <Modal.Body>Modal content will sit here</Modal.Body>\r\n\r\n//         <Modal.Footer>\r\n\r\n//           <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n//           <Button variant=\"primary\" onClick={handleClose}>Submit</Button>\r\n\r\n//         </Modal.Footer>\r\n\r\n//       </Modal>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default ShareModal\r\n\r\n// src/components/bootstrap-carousel.component.js\r\nimport React, { Component } from \"react\";\r\n\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport { FacebookShareButton, LinkedinShareButton } from \"react-share\";\r\nimport { FacebookIcon, LinkedinIcon} from \"react-share\";\r\n\r\nconst ShareModal = (props) => {\r\n    //console.log(props.data);\r\n    const {id, title, body} = props.data;\r\n    const url = \"https://agriculturist.org/sharepost/\"+`${id}`;\r\n        return (\r\n            <div>\r\n                <Modal show={props.show} onHide={() => props.onHide()}>\r\n\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>\r\n                            Share Post\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <p>Select where to share the post.</p>\r\n\r\n                        <FacebookShareButton\r\n                            url={url}\r\n                           \r\n                            style={{marginRight: 10}}\r\n                        >\r\n                            <FacebookIcon size={32} round /> Facebook\r\n                        </FacebookShareButton>\r\n                        <LinkedinShareButton \r\n                            url={url}\r\n                            title={title} \r\n                            summary={body}\r\n                            >\r\n                            <LinkedinIcon  size={32} round={true}/> LinkedIn\r\n                        </LinkedinShareButton>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => props.onClick()} >Close</Button>\r\n                        {/* <Button variant=\"primary\" onClick={() => props.onClick()}  >Submit</Button> */}\r\n                    </Modal.Footer>\r\n\r\n                </Modal>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ShareModal;\r\n\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Share\\SharePageDetail.js",["382"],"import React, { Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getSharePost } from '../../actions/post';\r\nimport formatDate from '../../utils/formatDate';\r\nimport PropTypes from 'prop-types';\r\nimport Advertisement from '../dashboard/Advertisement';\r\n// import CommentForm from './CommentForm';\r\n// import CommentItem from './CommentItem'; \r\nimport Spinner from '../layout/Spinner';\r\nimport Alert from '../layout/Alert';\r\nconst SharePageDetail = ({getSharePost, post:{sharepost, loading}, match}) => {\r\n    useEffect(() => {\r\n        getSharePost(match.params.id);\r\n    }, [getSharePost, match.params.id]);\r\n    console.log(\"sharepostDetail = \", sharepost);\r\n    //console.log(\"postDetail postId = \",post._id.$oid);\r\n    return loading || sharepost === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-8 col-lg-9\">\r\n                        <div className=\"card-body shadow mb-4\">\r\n                            <h3>{sharepost.title}</h3>\r\n                            <div className=\"post-info\">\r\n                                <small><i className=\"fa fa-calendar\"></i>Publish Date: {formatDate(sharepost.date.$date)}</small>\r\n                                <small><i className=\"fa fa-user\"></i>Author: {sharepost.user.status}</small>\r\n                            </div>\r\n                            <div id=\"post-details\">\r\n                                <p>\r\n                                {sharepost.desc}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"card-body shadow mb-4\">\r\n                            <h3>Comments</h3>\r\n                            <CommentForm postId={post._id.$oid}/>\r\n                            <Alert />\r\n                            <div id=\"comments\">\r\n                                {sharepost.comments !== null ? (sharepost.comments.map((comment) => (\r\n                                    <CommentItem key={comment._id.$oid} user={user} comment={comment} postId={sharepost._id.$oid} />\r\n                                ))): null }\r\n                            \r\n                            </div>\r\n                        </div> */}\r\n                    </div>\r\n                    <Advertisement />\r\n                </div>\r\n            </div>\r\n           \r\n        </Fragment>\r\n    )\r\n}\r\nSharePageDetail.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n  };\r\n  \r\nconst mapStateToProps = (state) => ({\r\n    post : state.post\r\n});\r\nexport default connect(mapStateToProps, { getSharePost })(SharePageDetail);\r\n\r\n\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\PostDeleteModal.js",["383"],"import React, { Component } from \"react\";\r\n\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\n\r\nconst PostDeleteModal = (props) => {\r\n    //console.log(props.deleteId);\r\n        return (\r\n            <div>\r\n                <Modal show={props.show} onHide={() => props.onHide()}>\r\n\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>\r\n                            Delete Post\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                    Do you really want to delete the Post?\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => props.onClick()} >Close</Button>\r\n                        <Button variant=\"primary\" onClick={() => {\r\n                                                        props.onClick();\r\n                                                        props.deletePost(props.deleteId);\r\n                                                    }}  \r\n                        >Delete</Button>\r\n                    </Modal.Footer>\r\n\r\n                </Modal>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default PostDeleteModal;\r\n\r\n\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Friends\\UnfriendModal.js",["384"],"import React, { Component } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nconst UnfriendModal = (props) => {\r\n   \r\n  return (\r\n    <div>\r\n     \r\n                        \r\n                          {/* <div className='modal-body'>\r\n                            Select \"Remove\" below if you want to remove{' '}\r\n                            {userFr !== null ? (\r\n                              <span\r\n                                style={{\r\n                                  fontSize: 20,\r\n                                  fontWeight: 'bold',\r\n                                  fontFamily: 'cursive',\r\n                                }}\r\n                              >\r\n                                {userFr.name}\r\n                              </span>\r\n                            ) : null}{' '}\r\n                            from your friend list.\r\n                          </div>\r\n                          <div className='modal-footer'>\r\n                            <button\r\n                              className='btn btn-secondary'\r\n                              type='button'\r\n                              data-dismiss='modal'\r\n                            >\r\n                              Cancel\r\n                            </button>\r\n                            <Link\r\n                              to='/friendlist'\r\n                              className='btn btn-primary'\r\n                              onClick={() => unFriend(userFr._id.$oid)}\r\n                            >\r\n                              Remove\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                      </div> */}\r\n      <Modal show={props.show} onHide={() => props.onHide()}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Unfriend user</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>Select \"Remove\" below if you want to remove the user\r\n                            from your friend list.</Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={() => props.onClick()}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant='primary'\r\n            onClick={() => {\r\n              props.onClick();\r\n              props.unFriend(props.deleteId)\r\n            }}\r\n          >\r\n            Remove\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnfriendModal;\r\n","F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\Share\\PrivacyPolicy.js",[],"F:\\Coursera\\React_Flask\\SocialNetwork\\frontend\\src\\components\\dashboard\\FilePostDeleteModal.js",["385"],"import React, { Component } from \"react\";\r\n\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\n\r\nconst FilePostDeleteModal = (props) => {\r\n    //console.log(props.deleteId);\r\n        return (\r\n            <div>\r\n                <Modal show={props.show} onHide={() => props.onHide()}>\r\n\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>\r\n                            Delete Post\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                    Do you really want to delete the Post?\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => props.onClick()} >Close</Button>\r\n                        <Button variant=\"primary\" onClick={() => {\r\n                                                        props.onClick();\r\n                                                        props.deletePost(props.deleteId);\r\n                                                        props.deleteFile(props.fileDeleteId);\r\n                                                    }}  \r\n                        >Delete</Button>\r\n                    </Modal.Footer>\r\n\r\n                </Modal>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default FilePostDeleteModal;\r\n\r\n\r\n",{"ruleId":"386","replacedBy":"387"},{"ruleId":"388","replacedBy":"389"},{"ruleId":"390","severity":1,"message":"391","line":17,"column":13,"nodeType":"392","messageId":"393","endLine":17,"endColumn":18},{"ruleId":"390","severity":1,"message":"394","line":17,"column":20,"nodeType":"392","messageId":"393","endLine":17,"endColumn":28},{"ruleId":"390","severity":1,"message":"395","line":106,"column":27,"nodeType":"392","messageId":"393","endLine":106,"endColumn":41},{"ruleId":"390","severity":1,"message":"396","line":8,"column":3,"nodeType":"392","messageId":"393","endLine":8,"endColumn":22},{"ruleId":"397","severity":1,"message":"398","line":48,"column":6,"nodeType":"399","endLine":48,"endColumn":69,"suggestions":"400"},{"ruleId":"401","severity":1,"message":"402","line":41,"column":37,"nodeType":"403","endLine":41,"endColumn":48},{"ruleId":"386","replacedBy":"404"},{"ruleId":"388","replacedBy":"405"},{"ruleId":"390","severity":1,"message":"406","line":4,"column":16,"nodeType":"392","messageId":"393","endLine":4,"endColumn":24},{"ruleId":"397","severity":1,"message":"407","line":38,"column":9,"nodeType":"399","endLine":38,"endColumn":39,"suggestions":"408"},{"ruleId":"386","replacedBy":"409"},{"ruleId":"388","replacedBy":"410"},{"ruleId":"390","severity":1,"message":"411","line":4,"column":10,"nodeType":"392","messageId":"393","endLine":4,"endColumn":29},{"ruleId":"390","severity":1,"message":"412","line":4,"column":31,"nodeType":"392","messageId":"393","endLine":4,"endColumn":50},{"ruleId":"390","severity":1,"message":"413","line":5,"column":10,"nodeType":"392","messageId":"393","endLine":5,"endColumn":22},{"ruleId":"390","severity":1,"message":"414","line":5,"column":24,"nodeType":"392","messageId":"393","endLine":5,"endColumn":36},{"ruleId":"390","severity":1,"message":"415","line":25,"column":11,"nodeType":"392","messageId":"393","endLine":25,"endColumn":14},{"ruleId":"390","severity":1,"message":"416","line":61,"column":14,"nodeType":"392","messageId":"393","endLine":61,"endColumn":33},{"ruleId":"390","severity":1,"message":"417","line":62,"column":13,"nodeType":"392","messageId":"393","endLine":62,"endColumn":32},{"ruleId":"390","severity":1,"message":"418","line":66,"column":13,"nodeType":"392","messageId":"393","endLine":66,"endColumn":27},{"ruleId":"390","severity":1,"message":"419","line":7,"column":12,"nodeType":"392","messageId":"393","endLine":7,"endColumn":16},{"ruleId":"390","severity":1,"message":"420","line":28,"column":15,"nodeType":"392","messageId":"393","endLine":28,"endColumn":22},{"ruleId":"401","severity":1,"message":"402","line":102,"column":36,"nodeType":"403","endLine":102,"endColumn":47},{"ruleId":"390","severity":1,"message":"421","line":3,"column":8,"nodeType":"392","messageId":"393","endLine":3,"endColumn":15},{"ruleId":"390","severity":1,"message":"422","line":4,"column":8,"nodeType":"392","messageId":"393","endLine":4,"endColumn":14},{"ruleId":"390","severity":1,"message":"423","line":5,"column":8,"nodeType":"392","messageId":"393","endLine":5,"endColumn":14},{"ruleId":"390","severity":1,"message":"424","line":13,"column":8,"nodeType":"392","messageId":"393","endLine":13,"endColumn":13},{"ruleId":"390","severity":1,"message":"425","line":14,"column":10,"nodeType":"392","messageId":"393","endLine":14,"endColumn":23},{"ruleId":"390","severity":1,"message":"426","line":24,"column":10,"nodeType":"392","messageId":"393","endLine":24,"endColumn":20},{"ruleId":"397","severity":1,"message":"427","line":53,"column":24,"nodeType":"428","endLine":53,"endColumn":64},{"ruleId":"397","severity":1,"message":"429","line":41,"column":6,"nodeType":"399","endLine":41,"endColumn":21,"suggestions":"430"},{"ruleId":"397","severity":1,"message":"431","line":85,"column":6,"nodeType":"399","endLine":85,"endColumn":44,"suggestions":"432"},{"ruleId":"390","severity":1,"message":"433","line":129,"column":5,"nodeType":"392","messageId":"393","endLine":129,"endColumn":12},{"ruleId":"390","severity":1,"message":"395","line":164,"column":17,"nodeType":"392","messageId":"393","endLine":164,"endColumn":31},{"ruleId":"386","replacedBy":"434"},{"ruleId":"388","replacedBy":"435"},{"ruleId":"390","severity":1,"message":"436","line":1,"column":37,"nodeType":"392","messageId":"393","endLine":1,"endColumn":46},{"ruleId":"390","severity":1,"message":"406","line":4,"column":16,"nodeType":"392","messageId":"393","endLine":4,"endColumn":24},{"ruleId":"390","severity":1,"message":"437","line":2,"column":19,"nodeType":"392","messageId":"393","endLine":2,"endColumn":30},{"ruleId":"390","severity":1,"message":"438","line":4,"column":8,"nodeType":"392","messageId":"393","endLine":4,"endColumn":13},{"ruleId":"397","severity":1,"message":"439","line":46,"column":6,"nodeType":"399","endLine":46,"endColumn":62,"suggestions":"440"},{"ruleId":"390","severity":1,"message":"441","line":10,"column":8,"nodeType":"392","messageId":"393","endLine":10,"endColumn":13},{"ruleId":"390","severity":1,"message":"442","line":4,"column":8,"nodeType":"392","messageId":"393","endLine":4,"endColumn":17},{"ruleId":"390","severity":1,"message":"443","line":5,"column":8,"nodeType":"392","messageId":"393","endLine":5,"endColumn":15},{"ruleId":"390","severity":1,"message":"444","line":2,"column":10,"nodeType":"392","messageId":"393","endLine":2,"endColumn":16},{"ruleId":"390","severity":1,"message":"445","line":38,"column":17,"nodeType":"392","messageId":"393","endLine":38,"endColumn":26},{"ruleId":"446","severity":1,"message":"447","line":47,"column":55,"nodeType":"448","messageId":"449","endLine":47,"endColumn":56},{"ruleId":"390","severity":1,"message":"424","line":10,"column":8,"nodeType":"392","messageId":"393","endLine":10,"endColumn":13},{"ruleId":"390","severity":1,"message":"445","line":1,"column":17,"nodeType":"392","messageId":"393","endLine":1,"endColumn":26},{"ruleId":"390","severity":1,"message":"445","line":1,"column":17,"nodeType":"392","messageId":"393","endLine":1,"endColumn":26},{"ruleId":"390","severity":1,"message":"445","line":1,"column":17,"nodeType":"392","messageId":"393","endLine":1,"endColumn":26},"no-native-reassign",["450"],"no-negated-in-lhs",["451"],"no-unused-vars","'email' is assigned a value but never used.","Identifier","unusedVar","'password' is assigned a value but never used.","'compressedFile' is assigned a value but never used.","'getFriendSuggestion' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fileLoading', 'loading', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["452"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["450"],["451"],"'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'edit' and 'id'. Either include them or remove the dependency array.",["453"],["450"],["451"],"'FacebookShareButton' is defined but never used.","'LinkedinShareButton' is defined but never used.","'FacebookIcon' is defined but never used.","'LinkedinIcon' is defined but never used.","'url' is assigned a value but never used.","'isReadPostTitleMore' is assigned a value but never used.","'toggleReadTitleMore' is assigned a value but never used.","'toggleReadMore' is assigned a value but never used.","'file' is assigned a value but never used.","'urlFile' is assigned a value but never used.","'Sidebar' is defined but never used.","'Topbar' is defined but never used.","'Footer' is defined but never used.","'Alert' is defined but never used.","'updateProfile' is defined but never used.","'previewSrc' is assigned a value but never used.","Assignments to the 'filteredFile' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'fileLoading'. Either include it or remove the dependency array.",["454"],"React Hook useEffect has a missing dependency: 'isSendRequest'. Either include it or remove the dependency array. You can also do a functional update 'setIsSendRequest(i => ...)' if you only need 'isSendRequest' in the 'setIsSendRequest' call.",["455"],"'country' is assigned a value but never used.",["450"],["451"],"'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'store' is defined but never used.","React Hook useEffect has a missing dependency: 'getFriendSuggestion'. Either include it or remove the dependency array. If 'getFriendSuggestion' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["456"],"'axios' is defined but never used.","'PropTypes' is defined but never used.","'Spinner' is defined but never used.","'Button' is defined but never used.","'Component' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},"Update the dependencies array to be: [loadUser, getAllUsers, getPendingFrUser, getUserMyFr, getFile, user, loading, fileLoading]",{"range":"467","text":"468"},"Update the dependencies array to be: [edit, id, loading, posts, propsFromLink]",{"range":"469","text":"470"},"Update the dependencies array to be: [getFile, auth, fileLoading]",{"range":"471","text":"472"},"Update the dependencies array to be: [loading, user, loadUser, getAllUsers, isSendRequest]",{"range":"473","text":"474"},"Update the dependencies array to be: [getAllUsers, loadUser, isSendRequest, getPendingFrUser, getFriendSuggestion]",{"range":"475","text":"476"},[1376,1439],"[loadUser, getAllUsers, getPendingFrUser, getUserMyFr, getFile, user, loading, fileLoading]",[1365,1395],"[edit, id, loading, posts, propsFromLink]",[1641,1656],"[getFile, auth, fileLoading]",[2610,2648],"[loading, user, loadUser, getAllUsers, isSendRequest]",[1440,1496],"[getAllUsers, loadUser, isSendRequest, getPendingFrUser, getFriendSuggestion]"]